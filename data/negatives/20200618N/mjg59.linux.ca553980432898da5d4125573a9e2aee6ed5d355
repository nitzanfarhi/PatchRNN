commit ca553980432898da5d4125573a9e2aee6ed5d355
Author: Gurucharan Shetty <gshetty@riverbed.com>
Date:   Tue Dec 15 13:00:31 2009 +0000

    ixgbe: allow tx of pre-formatted vlan tagged packets
    
    When the 82598 is fed 802.1q packets, it chokes with
    an error of the form:
    
    ixgbe: eth0: ixgbe_tx_csum: partial checksum but proto=81!
    
    As the logic there was not smart enough to look into
    the vlan header to pick out the encapsulated protocol.
    
    There are times when we'd like to send these packets
    out without having to configure a vlan on the interface.
    Here we check for the vlan tag and allow the packet to
    go out with the correct hardware checksum.
    
    This patch is a clone of a previously submitted patch by
    Arthur Jones <ajones@riverbed.com> for igb (Commit -
    fa4a7ef36ec834fee1719636b30d2f28f4cb0166).
    
    Signed-off-by: Gurucharan Shetty <gshetty@riverbed.com>
    Signed-off-by: Arthur Jones <ajones@riverbed.com>
    Acked-by: Mallikarjuna R Chilakala <mallikarjuna.chilakala@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ixgbe/ixgbe_main.c b/drivers/net/ixgbe/ixgbe_main.c
index 529274824931..bd64387563f0 100644
--- a/drivers/net/ixgbe/ixgbe_main.c
+++ b/drivers/net/ixgbe/ixgbe_main.c
@@ -5006,7 +5006,18 @@ static bool ixgbe_tx_csum(struct ixgbe_adapter *adapter,
 		                    IXGBE_ADVTXD_DTYP_CTXT);
 
 		if (skb->ip_summed == CHECKSUM_PARTIAL) {
-			switch (skb->protocol) {
+			__be16 protocol;
+
+			if (skb->protocol == cpu_to_be16(ETH_P_8021Q)) {
+				const struct vlan_ethhdr *vhdr =
+					(const struct vlan_ethhdr *)skb->data;
+
+				protocol = vhdr->h_vlan_encapsulated_proto;
+			} else {
+				protocol = skb->protocol;
+			}
+
+			switch (protocol) {
 			case cpu_to_be16(ETH_P_IP):
 				type_tucmd_mlhl |= IXGBE_ADVTXD_TUCMD_IPV4;
 				if (ip_hdr(skb)->protocol == IPPROTO_TCP)

