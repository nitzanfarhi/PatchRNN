commit c3b2d5b08c6cd4a4586117b326ab8ebf389c38d9
Author: Bron Gondwana <brong@fastmail.fm>
Date:   Fri Aug 7 10:46:08 2015 +1000

    log the double a little earlier
    
    This makes us slightly less likely to nuke the source mailbox from
    the replica.  It's still not 100% safe, because something else could
    have sync_logged on that mailbox due to an append or other change.
    
    The only real way around this would be to do a lookup for the uniqueid
    when a mailbox gets deleted (or keep a forward pointer in the mboxlist
    entry) so that sync_client can detect the rename properly.

diff --git a/imap/mboxlist.c b/imap/mboxlist.c
index 099312ffb..9d0ecc941 100644
--- a/imap/mboxlist.c
+++ b/imap/mboxlist.c
@@ -1628,15 +1628,18 @@ EXPORTED int mboxlist_renamemailbox(const char *oldname, const char *newname,
                 mboxevent_set_access(mboxevent, NULL, NULL, userid, newmailbox->name, 1);
             }
 
+            /* log the rename before we close either mailbox, so that
+             * we never nuke the mailbox from the replica before realising
+             * that it has been renamed.  This can be moved later again when
+             * we sync mailboxes by uniqueid rather than name... */
+            sync_log_mailbox_double(oldname, newname);
+
             mailbox_rename_cleanup(&oldmailbox, isusermbox);
 
 #ifdef WITH_DAV
             mailbox_add_dav(newmailbox);
 #endif
 
-            /* log the rename before we close the new mailbox */
-            sync_log_mailbox_double(oldname, newname);
-
             mailbox_close(&newmailbox);
 
             /* and log an append so that squatter indexes it */

