commit bbe1925ce3e627fd405d83e3c947e1f430a1d720
Author: Philip Kaufmann <phil.kaufmann@t-online.de>
Date:   Tue Jun 3 14:42:20 2014 +0200

    [Qt] style police and small addition in rpcconsole
    
    - fix spaces, indentation and coding style glitches

diff --git a/src/qt/clientmodel.cpp b/src/qt/clientmodel.cpp
index ce773e0f8..1c008428a 100644
--- a/src/qt/clientmodel.cpp
+++ b/src/qt/clientmodel.cpp
@@ -23,7 +23,9 @@
 static const int64_t nClientStartupTime = GetTime();
 
 ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :
-    QObject(parent), optionsModel(optionsModel), peerTableModel(0),
+    QObject(parent),
+    optionsModel(optionsModel),
+    peerTableModel(0),
     cachedNumBlocks(0),
     cachedReindexing(0), cachedImporting(0),
     numBlocksAtStartup(-1), pollTimer(0)
diff --git a/src/qt/guiutil.cpp b/src/qt/guiutil.cpp
index 62db0487f..1922d228c 100644
--- a/src/qt/guiutil.cpp
+++ b/src/qt/guiutil.cpp
@@ -780,7 +780,7 @@ QString formatServicesStr(uint64_t mask)
     QStringList strList;
 
     // Just scan the last 8 bits for now.
-    for (int i=0; i < 8; i++) {
+    for (int i = 0; i < 8; i++) {
         uint64_t check = 1 << i;
         if (mask & check)
         {
@@ -799,7 +799,6 @@ QString formatServicesStr(uint64_t mask)
         return strList.join(" & ");
     else
         return QObject::tr("None");
-
 }
 
 } // namespace GUIUtil
diff --git a/src/qt/guiutil.h b/src/qt/guiutil.h
index ea6b7de87..45c78b4e1 100644
--- a/src/qt/guiutil.h
+++ b/src/qt/guiutil.h
@@ -178,7 +178,6 @@ namespace GUIUtil
 
     /* Format CNodeStats.nServices bitmask into a user-readable string */
     QString formatServicesStr(uint64_t mask);
-
 } // namespace GUIUtil
 
 #endif // GUIUTIL_H
diff --git a/src/qt/peertablemodel.cpp b/src/qt/peertablemodel.cpp
index fba9d84e7..db5ce639b 100644
--- a/src/qt/peertablemodel.cpp
+++ b/src/qt/peertablemodel.cpp
@@ -81,7 +81,6 @@ public:
             }
         }
 
-
         if (sortColumn >= 0)
             // sort cacheNodeStats (use stable sort to prevent rows jumping around unneceesarily)
             qStableSort(cachedNodeStats.begin(), cachedNodeStats.end(), NodeLessThan(sortColumn, sortOrder));
@@ -110,7 +109,6 @@ public:
             return 0;
         }
     }
-
 };
 
 PeerTableModel::PeerTableModel(ClientModel *parent) :
diff --git a/src/qt/peertablemodel.h b/src/qt/peertablemodel.h
index d947e2124..385bf0e0c 100644
--- a/src/qt/peertablemodel.h
+++ b/src/qt/peertablemodel.h
@@ -11,10 +11,12 @@
 #include <QAbstractTableModel>
 #include <QStringList>
 
-class PeerTablePriv;
 class ClientModel;
+class PeerTablePriv;
 
+QT_BEGIN_NAMESPACE
 class QTimer;
+QT_END_NAMESPACE
 
 struct CNodeCombinedStats {
     CNodeStats nodestats;
@@ -24,7 +26,7 @@ struct CNodeCombinedStats {
 class NodeLessThan
 {
 public:
-    NodeLessThan(int nColumn, Qt::SortOrder fOrder):
+    NodeLessThan(int nColumn, Qt::SortOrder fOrder) :
         column(nColumn), order(fOrder) {}
     bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;
 
@@ -73,7 +75,6 @@ private:
     QStringList columns;
     PeerTablePriv *priv;
     QTimer *timer;
-
 };
 
 #endif // PEERTABLEMODEL_H
diff --git a/src/qt/receiverequestdialog.cpp b/src/qt/receiverequestdialog.cpp
index 062638f2b..d8dad15c0 100644
--- a/src/qt/receiverequestdialog.cpp
+++ b/src/qt/receiverequestdialog.cpp
@@ -13,10 +13,10 @@
 
 #include <QClipboard>
 #include <QDrag>
+#include <QMenu>
 #include <QMimeData>
 #include <QMouseEvent>
 #include <QPixmap>
-#include <QMenu>
 #if QT_VERSION < 0x050000
 #include <QUrl>
 #endif
diff --git a/src/qt/receiverequestdialog.h b/src/qt/receiverequestdialog.h
index 5614ac635..9b78e495c 100644
--- a/src/qt/receiverequestdialog.h
+++ b/src/qt/receiverequestdialog.h
@@ -11,10 +11,12 @@
 #include <QImage>
 #include <QLabel>
 
+class OptionsModel;
+
 namespace Ui {
     class ReceiveRequestDialog;
 }
-class OptionsModel;
+
 QT_BEGIN_NAMESPACE
 class QMenu;
 QT_END_NAMESPACE
diff --git a/src/qt/rpcconsole.cpp b/src/qt/rpcconsole.cpp
index ed048cf3c..3b7d37ff3 100644
--- a/src/qt/rpcconsole.cpp
+++ b/src/qt/rpcconsole.cpp
@@ -10,10 +10,9 @@
 #include "peertablemodel.h"
 
 #include "main.h"
-#include "util.h"
-
 #include "rpcserver.h"
 #include "rpcclient.h"
+#include "util.h"
 
 #include "json/json_spirit_value.h"
 #include <openssl/crypto.h>
@@ -297,10 +296,8 @@ void RPCConsole::setClientModel(ClientModel *model)
 
         // connect the peerWidget's selection model to our peerSelected() handler
         QItemSelectionModel *peerSelectModel = ui->peerWidget->selectionModel();
-        connect(peerSelectModel,
-                SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),
-                this,
-                SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));
+        connect(peerSelectModel, SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),
+             this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));
         connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));
 
         // Provide initial values
@@ -511,6 +508,8 @@ void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)
 
 void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)
 {
+    Q_UNUSED(deselected);
+
     if (selected.indexes().isEmpty())
         return;
 
@@ -638,6 +637,8 @@ void RPCConsole::updateNodeDetail(const CNodeCombinedStats *combinedStats)
         ui->peerBanScore->setText(tr("Fetching..."));
 }
 
+// We override the virtual resizeEvent of the QWidget to adjust tables column
+// sizes as the tables width is proportional to the dialogs width.
 void RPCConsole::resizeEvent(QResizeEvent *event)
 {
     QWidget::resizeEvent(event);
@@ -651,7 +652,7 @@ void RPCConsole::showEvent(QShowEvent *event)
     // peerWidget needs a resize in case the dialog has non-default geometry
     columnResizingFixer->stretchColumnWidth(PeerTableModel::Address);
 
-    // start the PeerTableModel refresh timer
+    // start PeerTableModel auto refresh
     clientModel->getPeerTableModel()->startAutoRefresh(1000);
 }
 
diff --git a/src/qt/rpcconsole.h b/src/qt/rpcconsole.h
index c17d5397e..3fee34d00 100644
--- a/src/qt/rpcconsole.h
+++ b/src/qt/rpcconsole.h
@@ -6,16 +6,18 @@
 #define RPCCONSOLE_H
 
 #include "guiutil.h"
-#include "net.h"
-
 #include "peertablemodel.h"
 
+#include "net.h"
+
 #include <QDialog>
 
 class ClientModel;
+class CNodeCombinedStats;
 
+QT_BEGIN_NAMESPACE
 class QItemSelection;
-class CNodeCombinedStats;
+QT_END_NAMESPACE
 
 namespace Ui {
     class RPCConsole;
diff --git a/src/qt/transactiondesc.h b/src/qt/transactiondesc.h
index f5a1328a7..4bd429321 100644
--- a/src/qt/transactiondesc.h
+++ b/src/qt/transactiondesc.h
@@ -9,6 +9,7 @@
 #include <QString>
 
 class TransactionRecord;
+
 class CWallet;
 class CWalletTx;
 

