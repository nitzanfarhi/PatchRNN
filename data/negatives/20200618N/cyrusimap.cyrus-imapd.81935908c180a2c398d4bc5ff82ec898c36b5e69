commit 81935908c180a2c398d4bc5ff82ec898c36b5e69
Author: Ken Murchison <murch@fastmail.com>
Date:   Wed Jun 27 17:09:24 2018 -0400

    mboxlist.c: properly insert intermediate records if non-leaf mailboxes are deleted

diff --git a/imap/mboxlist.c b/imap/mboxlist.c
index 86a97d24c..ed151ed10 100644
--- a/imap/mboxlist.c
+++ b/imap/mboxlist.c
@@ -1540,7 +1540,7 @@ mboxlist_delayed_deletemailbox(const char *name, int isadmin,
                                localonly /* local_only */,
                                force, 1);
 
-    if (!r) {
+    if (!r && !mboxlist_haschildren(name)) {
         r = mboxlist_delete_intermediaries(name, mbentry->foldermodseq+1);
     }
 
@@ -1657,9 +1657,10 @@ EXPORTED int mboxlist_deletemailbox(const char *name, int isadmin,
 
     if (!isremote && !mboxname_isdeletedmailbox(name, NULL)) {
         /* store a DELETED marker */
+        int haschildren = mboxlist_haschildren(name);
         mbentry_t *newmbentry = mboxlist_entry_create();
         newmbentry->name = xstrdupnull(name);
-        newmbentry->mbtype = MBTYPE_DELETED;
+        newmbentry->mbtype = haschildren ? MBTYPE_INTERMEDIATE : MBTYPE_DELETED;
         if (mailbox) {
             newmbentry->uniqueid = xstrdupnull(mailbox->uniqueid);
             newmbentry->uidvalidity = mailbox->i.uidvalidity;
@@ -1668,7 +1669,7 @@ EXPORTED int mboxlist_deletemailbox(const char *name, int isadmin,
         }
         r = mboxlist_update(newmbentry, /*localonly*/1);
 
-        if (!r) {
+        if (!r && !haschildren) {
             r = mboxlist_delete_intermediaries(name, newmbentry->foldermodseq);
         }
 
@@ -1897,6 +1898,10 @@ EXPORTED int mboxlist_renamemailbox(const char *oldname, const char *newname,
     newmbentry->createdmodseq = newmailbox->i.createdmodseq;
     newmbentry->foldermodseq = newmailbox->i.highestmodseq;
 
+    /* is this delayed delete of a mailbox with a children? */
+    int is_deleted_ancestor = (mboxname_isdeletedmailbox(newmbentry->name, NULL)
+                               && mboxlist_haschildren(oldmbentry->name));
+
     do {
         r = 0;
 
@@ -1905,7 +1910,8 @@ EXPORTED int mboxlist_renamemailbox(const char *oldname, const char *newname,
             /* store a DELETED marker */
             mbentry_t *oldmbentry = mboxlist_entry_create();
             oldmbentry->name = xstrdupnull(oldmailbox->name);
-            oldmbentry->mbtype = MBTYPE_DELETED;
+            oldmbentry->mbtype =
+                is_deleted_ancestor ? MBTYPE_INTERMEDIATE : MBTYPE_DELETED;
             oldmbentry->uidvalidity = oldmailbox->i.uidvalidity;
             oldmbentry->uniqueid = xstrdupnull(oldmailbox->uniqueid);
             newmbentry->createdmodseq = oldmailbox->i.createdmodseq;
@@ -3491,6 +3497,15 @@ static int mboxlist_changequota(const mbentry_t *mbentry, void *rock)
     return 0;
 }
 
+EXPORTED int mboxlist_haschildren(const char *mboxname)
+{
+    int exists = 0;
+
+    mboxlist_mboxtree(mboxname, exists_cb, &exists, MBOXTREE_SKIP_ROOT);
+
+    return exists;
+}
+
 EXPORTED void mboxlist_done(void)
 {
     /* DB->done() handled by cyrus_done() */
diff --git a/imap/mboxlist.h b/imap/mboxlist.h
index 7b5bce3e9..2281f1d38 100644
--- a/imap/mboxlist.h
+++ b/imap/mboxlist.h
@@ -285,6 +285,8 @@ int mboxlist_setquotas(const char *root,
                        quota_t newquotas[QUOTA_NUMRESOURCES], int force);
 int mboxlist_unsetquota(const char *root);
 
+int mboxlist_haschildren(const char *mboxname);
+
 /* open the mailboxes db */
 void mboxlist_open(const char *name);
 

