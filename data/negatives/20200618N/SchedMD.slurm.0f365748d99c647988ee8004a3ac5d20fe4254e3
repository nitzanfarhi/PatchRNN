commit 0f365748d99c647988ee8004a3ac5d20fe4254e3
Author: Danny Auble <da@schedmd.com>
Date:   Thu Aug 10 11:21:43 2017 -0600

    Continuation of last commit, just format fixes, no real code change.

diff --git a/src/common/slurm_protocol_defs.c b/src/common/slurm_protocol_defs.c
index 9eef2c54b5..3580643f83 100644
--- a/src/common/slurm_protocol_defs.c
+++ b/src/common/slurm_protocol_defs.c
@@ -3962,8 +3962,8 @@ extern void slurm_free_composite_msg(composite_msg_t *msg)
 	}
 }
 
-extern void
-slurm_free_set_fs_dampening_factor_msg(set_fs_dampening_factor_msg_t *msg)
+extern void slurm_free_set_fs_dampening_factor_msg(
+	set_fs_dampening_factor_msg_t *msg)
 {
 	xfree(msg);
 }
diff --git a/src/common/slurm_protocol_defs.h b/src/common/slurm_protocol_defs.h
index 2a5c4be8b5..423a72276f 100644
--- a/src/common/slurm_protocol_defs.h
+++ b/src/common/slurm_protocol_defs.h
@@ -1439,8 +1439,8 @@ extern void slurm_free_license_info_request_msg(license_info_request_msg_t *msg)
 extern uint32_t slurm_get_return_code(slurm_msg_type_t type, void *data);
 extern void slurm_free_network_callerid_msg(network_callerid_msg_t *mesg);
 extern void slurm_free_network_callerid_resp(network_callerid_resp_t *resp);
-extern void
-slurm_free_set_fs_dampening_factor_msg(set_fs_dampening_factor_msg_t *msg);
+extern void slurm_free_set_fs_dampening_factor_msg(
+	set_fs_dampening_factor_msg_t *msg);
 
 extern const char *preempt_mode_string(uint16_t preempt_mode);
 extern uint16_t preempt_mode_num(const char *preempt_mode);
diff --git a/src/common/slurm_protocol_pack.c b/src/common/slurm_protocol_pack.c
index c9b3b723d7..8a10d474d2 100644
--- a/src/common/slurm_protocol_pack.c
+++ b/src/common/slurm_protocol_pack.c
@@ -773,13 +773,13 @@ static int _unpack_buf_list_msg(ctld_list_msg_t **msg, Buf buffer,
 
 static void _priority_factors_resp_list_del(void *x);
 
-static int
-_unpack_set_fs_dampening_factor_msg(set_fs_dampening_factor_msg_t ** msg_ptr,
-				    Buf buffer,
-				    uint16_t protocol_version);
-static void
-_pack_set_fs_dampening_factor_msg(set_fs_dampening_factor_msg_t * msg,
-				  Buf buffer, uint16_t protocol_version);
+static int _unpack_set_fs_dampening_factor_msg(
+	set_fs_dampening_factor_msg_t ** msg_ptr,
+	Buf buffer,
+	uint16_t protocol_version);
+static void _pack_set_fs_dampening_factor_msg(
+	set_fs_dampening_factor_msg_t * msg,
+	Buf buffer, uint16_t protocol_version);
 
 /* pack_header
  * packs a slurm protocol header that precedes every slurm message
@@ -15255,18 +15255,18 @@ unpack_error:
 	return SLURM_ERROR;
 }
 
-static void
-_pack_set_fs_dampening_factor_msg(set_fs_dampening_factor_msg_t * msg,
-				  Buf buffer, uint16_t protocol_version)
+static void _pack_set_fs_dampening_factor_msg(
+	set_fs_dampening_factor_msg_t *msg,
+	Buf buffer, uint16_t protocol_version)
 {
 	if (protocol_version >= SLURM_MIN_PROTOCOL_VERSION)
 		pack16(msg->dampening_factor, buffer);
 }
 
 
-static int
-_unpack_set_fs_dampening_factor_msg(set_fs_dampening_factor_msg_t ** msg_ptr,
-				    Buf buffer, uint16_t protocol_version)
+static int _unpack_set_fs_dampening_factor_msg(
+	set_fs_dampening_factor_msg_t **msg_ptr,
+	Buf buffer, uint16_t protocol_version)
 {
 	set_fs_dampening_factor_msg_t *msg;
 

