commit c95279c6bfa100b40f40de7b9e8b847ba7a3b02d
Author: Yukihiro Matsumoto <matz@ruby-lang.org>
Date:   Mon May 7 23:23:36 2012 +0900

    rename ALIGN macros

diff --git a/src/pool.c b/src/pool.c
index 374bc19f..adcf3b6b 100644
--- a/src/pool.c
+++ b/src/pool.c
@@ -17,10 +17,10 @@
 
 #define POOL_PAGE_SIZE 16000
 
-#ifdef ALLOC_PADDING
-#  define CALC_ALIGN_PADDING(x) ((x % ALLOC_PADDING) ? ALLOC_PADDING - (x % ALLOC_PADDING) : 0)
+#ifdef ALLOC_ALIGN
+#  define ALIGN_PADDING(x) ((x % ALLOC_ALIGN) ? ALLOC_ALIGN - (x % ALLOC_ALLOC) : 0)
 #else
-#  define CALC_ALIGN_PADDING(x) (0)
+#  define ALIGN_PADDING(x) (0)
 #endif
 
 mrb_pool*
@@ -74,7 +74,7 @@ mrb_pool_alloc(mrb_pool *pool, size_t len)
   size_t n;
 
   if (!pool) return 0;
-  len += CALC_ALIGN_PADDING(len);
+  len += ALIGN_PADDING(len);
   page = pool->pages;
   while (page) {
     if (page->offset + len <= page->len) {
@@ -101,7 +101,7 @@ mrb_pool_can_realloc(mrb_pool *pool, void *p, size_t len)
   struct mrb_pool_page *page;
 
   if (!pool) return 0;
-  len += CALC_ALIGN_PADDING(len);
+  len += ALIGN_PADDING(len);
   page = pool->pages;
   while (page) {
     if (page->last == p) {
@@ -123,8 +123,8 @@ mrb_pool_realloc(mrb_pool *pool, void *p, size_t oldlen, size_t newlen)
   void *np;
 
   if (!pool) return 0;
-  oldlen += CALC_ALIGN_PADDING(oldlen);
-  newlen += CALC_ALIGN_PADDING(newlen);
+  oldlen += ALIGN_PADDING(oldlen);
+  newlen += ALIGN_PADDING(newlen);
   page = pool->pages;
   while (page) {
     if (page->last == p) {

