commit 856d56b9e5de650a64a6c41c17aaed702b55d578
Author: Peter Zijlstra <a.p.zijlstra@chello.nl>
Date:   Fri May 15 20:45:59 2009 +0200

    perf_counter: Fix counter inheritance
    
    Srivatsa Vaddagiri reported that a Java workload triggers this
    warning in kernel/exit.c:
    
       WARN_ON_ONCE(!list_empty(&tsk->perf_counter_ctx.counter_list));
    
    Add the inherited counter propagation on self-detach, this could
    cause counter leaks and incomplete stats in threaded code like
    the below:
    
      #include <pthread.h>
      #include <unistd.h>
    
      void *thread(void *arg)
      {
              sleep(5);
              return NULL;
      }
    
      void main(void)
      {
              pthread_t thr;
              pthread_create(&thr, NULL, thread, NULL);
      }
    
    Reported-by: Srivatsa Vaddagiri <vatsa@in.ibm.com>
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Corey Ashford <cjashfor@linux.vnet.ibm.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Marcelo Tosatti <mtosatti@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

diff --git a/kernel/exit.c b/kernel/exit.c
index 4741376c8dec..16d74f13a3e7 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -128,6 +128,12 @@ static void __exit_signal(struct task_struct *tsk)
 		sig = NULL; /* Marker for below. */
 	}
 
+	/*
+	 * Flush inherited counters to the parent - before the parent
+	 * gets woken up by child-exit notifications.
+	 */
+	perf_counter_exit_task(tsk);
+
 	__unhash_process(tsk);
 
 	/*

