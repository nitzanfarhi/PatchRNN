commit 86af091cf05a1f732453d53243fdba522ef0d8b4
Author: liyichao <liyichao.good@gmail.com>
Date:   Wed May 16 21:21:52 2018 +0800

    Pass the result of PreReleaseRequest to next handler.
    
    We have to pass the error code so PreReleaseRequest is considered
    failed so that in `ExclusiveLock<I>::post_release_lock_handler`,
    `io_work_queue->unblock_writes` will be not called because
    it is already called in PreReleaseRequest.
    
    Signed-off-by: liyichao <liyichao.good@gmail.com>

diff --git a/src/librbd/ManagedLock.cc b/src/librbd/ManagedLock.cc
index 53bfd26226..f039eb4051 100644
--- a/src/librbd/ManagedLock.cc
+++ b/src/librbd/ManagedLock.cc
@@ -762,8 +762,9 @@ void ManagedLock<I>::handle_shutdown_pre_release(int r) {
   using managed_lock::ReleaseRequest;
   ReleaseRequest<I>* req = ReleaseRequest<I>::create(m_ioctx, m_watcher,
       m_work_queue, m_oid, cookie,
-      new FunctionContext([this](int r) {
-        post_release_lock_handler(true, r, create_context_callback<
+      new FunctionContext([this, r](int l) {
+        int rst = r < 0 ? r : l;
+        post_release_lock_handler(true, rst, create_context_callback<
             ManagedLock<I>, &ManagedLock<I>::handle_shutdown_post_release>(this));
       }));
   req->send();

