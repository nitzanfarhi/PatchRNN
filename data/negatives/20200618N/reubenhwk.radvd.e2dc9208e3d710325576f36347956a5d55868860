commit e2dc9208e3d710325576f36347956a5d55868860
Author: psavola <psavola>
Date:   Sun Oct 8 19:32:22 2006 +0000

    Audit: we didn't explicitly check if the if_hwaddr buffer is big enough to
    hold the hardware address; now we do. (This wasn't an issue with any of the
    link types and won't be, just just being careful..)
    
    Also:
    - consolidate the hwaddr_len string representation to byte length in one
      place.
    - zero the whole 'zero' field.  As only if_hwaddr_len_bytes bytes are
      compared, this doesn't matter, but it's ugly that the rest aren't
      initialized to anything explictly.

diff --git a/device-linux.c b/device-linux.c
index f3882e5..d1fec5c 100644
--- a/device-linux.c
+++ b/device-linux.c
@@ -1,5 +1,5 @@
 /*
- *   $Id: device-linux.c,v 1.20 2006/10/08 19:25:29 psavola Exp $
+ *   $Id: device-linux.c,v 1.21 2006/10/08 19:32:22 psavola Exp $
  *
  *   Authors:
  *    Lars Fenneberg		<lf@elemental.net>	 
@@ -90,10 +90,16 @@ setup_deviceinfo(int sock, struct Interface *iface)
 		iface->if_prefix_len);
 
 	if (iface->if_hwaddr_len != -1) {
-		memcpy(iface->if_hwaddr, ifr.ifr_hwaddr.sa_data, (unsigned int)((iface->if_hwaddr_len + 7) >> 3));
+		unsigned int if_hwaddr_len_bytes = (iface->if_hwaddr_len + 7) >> 3;
+		
+		if (if_hwaddr_len_bytes > sizeof(iface->if_hwaddr)) {
+			flog(LOG_ERR, "address length %d too big for %s", if_hwaddr_len_bytes, iface->Name);
+			return(-2);
+		}
+		memcpy(iface->if_hwaddr, ifr.ifr_hwaddr.sa_data, if_hwaddr_len_bytes);
 
-		memset(zero, 0, (unsigned int)((iface->if_hwaddr_len + 7) >> 3));
-		if (!memcmp(iface->if_hwaddr, zero, (unsigned int)((iface->if_hwaddr_len + 7) >> 3)))
+		memset(zero, 0, sizeof(zero));
+		if (!memcmp(iface->if_hwaddr, zero, if_hwaddr_len_bytes))
 			flog(LOG_WARNING, "WARNING, MAC address on %s is all zero!",
 				iface->Name);
 	}

