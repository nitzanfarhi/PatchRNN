commit 17d6628802c12c58546648272d36baf1cb746fe4
Author: Ali El Gariani <alinkmaze@gmail.com>
Date:   Fri May 23 22:52:19 2008 +0000

    Add some layers (fog/shroud, reachmap and movement hint)
    
    This draw the movement hint on top of reachmap and fog as in 1.4.
    
    Also now draw it on top of units (but it happens rarely)
    
    Both changes for readability

diff --git a/src/display.hpp b/src/display.hpp
index f6617cde86..f8678e4e0e 100644
--- a/src/display.hpp
+++ b/src/display.hpp
@@ -478,8 +478,11 @@ public:
 		                           //!< the unit.
 		LAYER_TERRAIN_TMP_FG,      //!< Layer which holds stuff that needs to be
 		                           //!< sorted out further, but on top of units
+		LAYER_REACHMAP,            //!< "black stripes" on unreachable hexes
+		LAYER_FOG_SHROUD,          //!< Fog and shroud
 		LAYER_UNIT_BAR,            //!< Unit bars and overlays are drawn on
 		                           //!< this layer (for testing here).
+		LAYER_MOVE_INFO,           //!< Movement info (defense%, ect...)
 		LAYER_LINGER_OVERLAY,      //!< The overlay used for the linger mode.
 		
 		LAYER_LAST_LAYER           //!< Don't draw to this layer it's a dummy
diff --git a/src/game_display.cpp b/src/game_display.cpp
index 1578a07df5..b7411c355b 100644
--- a/src/game_display.cpp
+++ b/src/game_display.cpp
@@ -411,7 +411,7 @@ void game_display::draw(bool update,bool force)
 			// that we want to attack.
 			if (!is_shrouded && !reach_map_.empty()
 					&& reach_map_.find(*it) == reach_map_.end() && *it != attack_indicator_dst_) {
-				drawing_buffer_add(LAYER_TERRAIN_TMP_FG, drawing_order, tblit(xpos, ypos,
+				drawing_buffer_add(LAYER_REACHMAP, drawing_order, tblit(xpos, ypos,
 					image::get_image(game_config::unreachable_image,image::UNMASKED)));
 			}
 
@@ -452,12 +452,18 @@ void game_display::draw(bool update,bool force)
 			if(is_shrouded) {
 				// We apply void also on off-map tiles
 				// to shroud the half-hexes too
-				drawing_buffer_add(LAYER_TERRAIN_TMP_FG, drawing_order, tblit(xpos, ypos,
+				drawing_buffer_add(LAYER_FOG_SHROUD, drawing_order, tblit(xpos, ypos,
 					image::get_image(shroud_image, image::SCALED_TO_HEX)));
 			} else if(fogged(*it)) {
-				drawing_buffer_add(LAYER_TERRAIN_TMP_FG, drawing_order, tblit(xpos, ypos,
+				drawing_buffer_add(LAYER_FOG_SHROUD, drawing_order, tblit(xpos, ypos,
 					image::get_image(fog_image, image::SCALED_TO_HEX)));
-			} 
+			}
+
+			if(!is_shrouded) {
+				drawing_buffer_add(LAYER_FOG_SHROUD, drawing_order, tblit(xpos, ypos,
+					get_terrain_images(*it, tod.id, image::SCALED_TO_HEX, ADJACENT_FOGSHROUD)));
+			}
+
 			// Linger overlay unconditionally otherwise it might give glitches
 			// so it's drawn over the shroud and fog.
 			if(game_mode_ != RUNNING) {
@@ -466,11 +472,6 @@ void game_display::draw(bool update,bool force)
 				blit.surf.clear();
 			}
 
-			if(!is_shrouded) {
-				drawing_buffer_add(LAYER_TERRAIN_TMP_FG, drawing_order, tblit(xpos, ypos,
-					get_terrain_images(*it, tod.id, image::SCALED_TO_HEX, ADJACENT_FOGSHROUD)));
-			}
-
 			// Show def% and turn to reach infos
 			if(!is_shrouded && on_map) {
 				draw_movement_info(*it);
@@ -715,23 +716,23 @@ void game_display::draw_movement_info(const gamemap::location& loc)
 			// With 11 colors, the last one will be used only for def=100
 			int val = (game_config::defense_color_scale.size()-1) * def/100;
 			SDL_Color color = int_to_color(game_config::defense_color_scale[val]);
-			draw_text_in_hex(loc, LAYER_TERRAIN_TMP_BG, def_text.str(), 18, color);
+			draw_text_in_hex(loc, LAYER_MOVE_INFO, def_text.str(), 18, color);
 
 			int xpos = get_location_x(loc);
 			int ypos = get_location_y(loc);
 
             if (w->second.invisible) {
-				drawing_buffer_add(LAYER_TERRAIN_TMP_BG, drawing_order, tblit(xpos, ypos,
+				drawing_buffer_add(LAYER_MOVE_INFO, drawing_order, tblit(xpos, ypos,
 					image::get_image("misc/hidden.png", image::UNMASKED)));
 			}
 
 			if (w->second.zoc) {
-				drawing_buffer_add(LAYER_TERRAIN_TMP_BG, drawing_order, tblit(xpos, ypos,
+				drawing_buffer_add(LAYER_MOVE_INFO, drawing_order, tblit(xpos, ypos,
 					image::get_image("misc/zoc.png", image::UNMASKED)));
 			}
 
 			if (w->second.capture) {
-				drawing_buffer_add(LAYER_TERRAIN_TMP_BG, drawing_order, tblit(xpos, ypos,
+				drawing_buffer_add(LAYER_MOVE_INFO, drawing_order, tblit(xpos, ypos,
 					image::get_image("misc/capture.png", image::UNMASKED)));
 			}
 
@@ -739,7 +740,7 @@ void game_display::draw_movement_info(const gamemap::location& loc)
 			if (w->second.turns > 1 || loc != route_.steps.back()) {
 				std::stringstream turns_text;
 				turns_text << w->second.turns;
-				draw_text_in_hex(loc, LAYER_TERRAIN_TMP_BG, turns_text.str(), 17, font::NORMAL_COLOUR, 0.5,0.8);
+				draw_text_in_hex(loc, LAYER_MOVE_INFO, turns_text.str(), 17, font::NORMAL_COLOUR, 0.5,0.8);
 			}
 			// The hex is full now, so skip the "show enemy moves"
 			return;
@@ -750,7 +751,7 @@ void game_display::draw_movement_info(const gamemap::location& loc)
 		reach_map::iterator reach = reach_map_.find(loc);
 		if (reach != reach_map_.end() && reach->second > 1) {
 			const std::string num = lexical_cast<std::string>(reach->second);
-			draw_text_in_hex(loc, LAYER_TERRAIN_TMP_BG, num, 16, font::YELLOW_COLOUR);
+			draw_text_in_hex(loc, LAYER_MOVE_INFO, num, 16, font::YELLOW_COLOUR);
 		}
 	}
 }

