commit ab4af03a4054bd78bcabfb2214c9597201beae35
Author: Greg Edwards <edwardsg@sgi.com>
Date:   Thu Jun 23 00:09:05 2005 -0700

    [PATCH] CON_CONSDEV bit not set correctly on last console
    
    According to include/linux/console.h, CON_CONSDEV flag should be set on
    the last console specified on the boot command line:
    
         86 #define CON_PRINTBUFFER (1)
         87 #define CON_CONSDEV     (2) /* Last on the command line */
         88 #define CON_ENABLED     (4)
         89 #define CON_BOOT        (8)
    
    This does not currently happen if there is more than one console specified
    on the boot commandline.  Instead, it gets set on the first console on the
    command line.  This can cause problems for things like kdb that look for
    the CON_CONSDEV flag to see if the console is valid.
    
    Additionaly, it doesn't look like CON_CONSDEV is reassigned to the next
    preferred console at unregister time if the console being unregistered
    currently has that bit set.
    
    Example (from sn2 ia64):
    
    elilo vmlinuz root=<dev> console=ttyS0 console=ttySG0
    
    in this case, the flags on ttySG console struct will be 0x4 (should be
    0x6).
    
    Attached patch against bk fixes both issues for the cases I looked at.  It
    uses selected_console (which gets incremented for each console specified on
    the command line) as the indicator of which console to set CON_CONSDEV on.
    When adding the console to the list, if the previous one had CON_CONSDEV
    set, it masks it out.  Tested on ia64 and x86.
    
    The problem with the current behavior is it breaks overriding the default from
    the boot line.  In the ia64 case, there may be a global append line defining
    console=a in elilo.conf.  Then you want to boot your kernel, and want to
    override the default by passing console=b on the boot line.  elilo constructs
    the kernel cmdline by starting with the value of the global append line, then
    tacks on whatever else you specify, which puts console=b last.
    
    Signed-off-by: Greg Edwards <edwardsg@sgi.com>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/kernel/printk.c b/kernel/printk.c
index 01b58d7d17ff..3a442bfb8bee 100644
--- a/kernel/printk.c
+++ b/kernel/printk.c
@@ -876,8 +876,10 @@ void register_console(struct console * console)
 			break;
 		console->flags |= CON_ENABLED;
 		console->index = console_cmdline[i].index;
-		if (i == preferred_console)
+		if (i == selected_console) {
 			console->flags |= CON_CONSDEV;
+			preferred_console = selected_console;
+		}
 		break;
 	}
 
@@ -897,6 +899,8 @@ void register_console(struct console * console)
 	if ((console->flags & CON_CONSDEV) || console_drivers == NULL) {
 		console->next = console_drivers;
 		console_drivers = console;
+		if (console->next)
+			console->next->flags &= ~CON_CONSDEV;
 	} else {
 		console->next = console_drivers->next;
 		console_drivers->next = console;
@@ -937,10 +941,14 @@ int unregister_console(struct console * console)
 	/* If last console is removed, we re-enable picking the first
 	 * one that gets registered. Without that, pmac early boot console
 	 * would prevent fbcon from taking over.
+	 *
+	 * If this isn't the last console and it has CON_CONSDEV set, we
+	 * need to set it on the next preferred console.
 	 */
 	if (console_drivers == NULL)
 		preferred_console = selected_console;
-		
+	else if (console->flags & CON_CONSDEV)
+		console_drivers->flags |= CON_CONSDEV;
 
 	release_console_sem();
 	return res;

