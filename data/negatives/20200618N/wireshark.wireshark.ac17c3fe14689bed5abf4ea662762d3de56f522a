commit ac17c3fe14689bed5abf4ea662762d3de56f522a
Author: Matej Tkac <matej.tkac.mt@gmail.com>
Date:   Tue Jun 12 15:56:16 2018 +0200

    GTPv2: updated Presence Reporting Area IEs
    
        According to TS 29.212 v14.7.0
        8.108 Presence Reporting Area Action
        8.109 Presence Reporting Area Information
    
    Change-Id: I4b73fb4cd47468aa4cf90ef9a7bee3e17f9b9485
    Reviewed-on: https://code.wireshark.org/review/28219
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

diff --git a/epan/dissectors/packet-gtpv2.c b/epan/dissectors/packet-gtpv2.c
index 49fd001539..84d49db42a 100644
--- a/epan/dissectors/packet-gtpv2.c
+++ b/epan/dissectors/packet-gtpv2.c
@@ -475,8 +475,15 @@ static int hf_gtpv2_kc_ps = -1;
 static int hf_gtpv2_cksn_ps = -1;
 
 static int hf_gtpv2_pres_rep_area_info_id = -1;
-static int hf_gtpv2_pres_rep_area_info_opra = -1;
-static int hf_gtpv2_pres_rep_area_info_ipra = -1;
+static int hf_gtpv2_pres_rep_area_info_additional_id = -1;
+static int hf_gtpv2_pres_rep_area_info_flags = -1;
+static int hf_gtpv2_pres_rep_area_info_flags_no_inapra = -1;
+static int hf_gtpv2_pres_rep_area_info_flags_b4_b7_spare = -1;
+static int hf_gtpv2_pres_rep_area_info_flags_b3_b7_spare = -1;
+static int hf_gtpv2_pres_rep_area_info_flags_b3_inapra = -1;
+static int hf_gtpv2_pres_rep_area_info_flags_b2_apra = -1;
+static int hf_gtpv2_pres_rep_area_info_flags_b1_opra = -1;
+static int hf_gtpv2_pres_rep_area_info_flags_b0_ipra = -1;
 
 /* Generated from convert_proto_tree_add_text.pl */
 static int hf_gtpv2_downlink_subscribed_ue_ambr = -1;
@@ -664,6 +671,7 @@ static gint ett_gtpv2_twan_flags = -1;
 static gint ett_gtpv2_ciot_support_ind = -1;
 static gint ett_gtpv2_rohc_profile_flags = -1;
 static gint ett_gtpv2_secondary_rat_usage_data_report = -1;
+static gint ett_gtpv2_pres_rep_area_info = -1;
 
 static expert_field ei_gtpv2_ie_data_not_dissected = EI_INIT;
 static expert_field ei_gtpv2_ie_len_invalid = EI_INIT;
@@ -6359,6 +6367,7 @@ dissect_diameter_3gpp_presence_reporting_area_elements_list(tvbuff_t *tvb, packe
 static const value_string gtpv2_pres_rep_area_action_vals[] = {
     { 1, "Start Reporting change"},
     { 2, "Stop Reporting change"},
+    { 3, "Modify Presence Reporting Area elements"},
     { 0, NULL}
 };
 
@@ -6393,13 +6402,57 @@ static void
 dissect_gtpv2_pres_rep_area_information(tvbuff_t *tvb, packet_info *pinfo _U_, proto_tree *tree, proto_item *item _U_, guint16 length _U_, guint8 message_type _U_, guint8 instance _U_, session_args_t * args _U_)
 {
     int offset = 0;
+    guint64 gtpv2_pres_rep_area_info_flags_val = 0;
 
     /*Octet 5 to 7      Presence Reporting Area Identifier */
     proto_tree_add_item(tree, hf_gtpv2_pres_rep_area_info_id, tvb, offset, 3 , ENC_BIG_ENDIAN);
     offset+=3;
 
-    proto_tree_add_item(tree, hf_gtpv2_pres_rep_area_info_opra, tvb, offset, 1, ENC_BIG_ENDIAN);
-    proto_tree_add_item(tree, hf_gtpv2_pres_rep_area_info_ipra, tvb, offset, 1, ENC_BIG_ENDIAN);
+    /*Octet 8    Spare Spare Spare Spare INAPRA APRA OPRA IPRA */
+    static const int * gtpv2_pres_rep_area_info_flags[] = {
+        &hf_gtpv2_pres_rep_area_info_flags_b4_b7_spare,
+        &hf_gtpv2_pres_rep_area_info_flags_b3_inapra,
+        &hf_gtpv2_pres_rep_area_info_flags_b2_apra,
+        &hf_gtpv2_pres_rep_area_info_flags_b1_opra,
+        &hf_gtpv2_pres_rep_area_info_flags_b0_ipra,
+        NULL
+    };
+
+    proto_tree_add_bitmask_with_flags_ret_uint64(tree, tvb, offset, hf_gtpv2_pres_rep_area_info_flags, ett_gtpv2_pres_rep_area_info,
+            gtpv2_pres_rep_area_info_flags, ENC_BIG_ENDIAN, BMT_NO_FALSE | BMT_NO_INT | BMT_NO_TFS, &gtpv2_pres_rep_area_info_flags_val);
+    offset+=1;
+
+    /* 3GPP TS 29.212 v14.7.0:
+     * If the Additional PRA (APRA) flag is set to 1, [...]
+     * subsequent 4 octets shall then be present
+     * and shall contain the identifier of the individual PRA
+     */
+    if(gtpv2_pres_rep_area_info_flags_val & 0x04){
+        /* Octets a to (a+2)        Additional PRA Identifier  */
+    proto_tree_add_item(tree, hf_gtpv2_pres_rep_area_info_additional_id, tvb, offset, 3, ENC_BIG_ENDIAN);
+    offset+=3;
+
+        /*Octet a+3          Spare Spare Spare Spare Spare APRA OPRA IPRA */
+    static const int * gtpv2_pres_rep_area_info_flags_no_inapra[] = {
+      &hf_gtpv2_pres_rep_area_info_flags_b3_b7_spare,
+      &hf_gtpv2_pres_rep_area_info_flags_b2_apra,
+      &hf_gtpv2_pres_rep_area_info_flags_b1_opra,
+      &hf_gtpv2_pres_rep_area_info_flags_b0_ipra,
+      NULL
+    };
+
+        while(offset < length){
+            proto_tree_add_bitmask_with_flags_ret_uint64(tree, tvb, offset, hf_gtpv2_pres_rep_area_info_flags_no_inapra, ett_gtpv2_pres_rep_area_info,
+                         gtpv2_pres_rep_area_info_flags_no_inapra, ENC_BIG_ENDIAN, BMT_NO_FALSE | BMT_NO_INT | BMT_NO_TFS, &gtpv2_pres_rep_area_info_flags_val);
+            offset+=1;
+
+            if(gtpv2_pres_rep_area_info_flags_val & 0x04){
+                /* Octets b to (b+2)     Additional PRA Identifier  */
+                proto_tree_add_item(tree, hf_gtpv2_pres_rep_area_info_additional_id, tvb, offset, 3, ENC_BIG_ENDIAN);
+                offset+=3;
+            }
+        }
+    }
 }
 /*
  * 8.110        TWAN Identifier Timestamp
@@ -9429,16 +9482,51 @@ void proto_register_gtpv2(void)
             FT_UINT24, BASE_HEX, NULL, 0x0,
             NULL, HFILL}
         },
-        { &hf_gtpv2_pres_rep_area_info_opra,
-          {"Outside Presence Reporting Area(OPRA) Flag", "gtpv2.pres_rep_area_info_opra",
-            FT_BOOLEAN, 8, NULL, 0x2,
+        { &hf_gtpv2_pres_rep_area_info_additional_id,
+          {"Additional Presence Reporting Area Identifier", "gtpv2.pres_rep_area_info_additional_id",
+            FT_UINT24, BASE_HEX, NULL, 0x0,
+            NULL, HFILL}
+        },
+        { &hf_gtpv2_pres_rep_area_info_flags,
+          {"Flags", "gtpv2.pres_rep_area_info_flags",
+            FT_UINT8, BASE_HEX, NULL, 0x0,
+            NULL, HFILL}
+        },
+        { &hf_gtpv2_pres_rep_area_info_flags_no_inapra,
+          {"Flags", "gtpv2.pres_rep_area_info_flags",
+            FT_UINT8, BASE_HEX, NULL, 0x0,
+            NULL, HFILL}
+        },
+        { &hf_gtpv2_pres_rep_area_info_flags_b0_ipra,
+          {"Inside Presence Reporting Area(IPRA)", "gtpv2.pres_rep_area_info_flag_ipra",
+            FT_BOOLEAN, 8, NULL, 0x01,
             NULL, HFILL}
         },
-        { &hf_gtpv2_pres_rep_area_info_ipra,
-          {"Inside Presence Reporting Area(IPRA) Flag", "gtpv2.pres_rep_area_info_ipra",
-            FT_BOOLEAN, 8, NULL, 0x1,
+        { &hf_gtpv2_pres_rep_area_info_flags_b1_opra,
+          {"Outside Presence Reporting Area(OPRA)", "gtpv2.pres_rep_area_info_flag_opra",
+            FT_BOOLEAN, 8, NULL, 0x02,
             NULL, HFILL}
         },
+        { &hf_gtpv2_pres_rep_area_info_flags_b2_apra,
+          {"Additional Presence Reporting Area(APRA)", "gtpv2.pres_rep_area_info_flag_apra",
+            FT_BOOLEAN, 8, NULL, 0x04,
+            NULL, HFILL}
+        },
+        { &hf_gtpv2_pres_rep_area_info_flags_b3_inapra,
+          {"Inactive Presence Reporting Area(INAPRA)", "gtpv2.pres_rep_area_info_flag_inapra",
+            FT_BOOLEAN, 8, NULL, 0x08,
+            NULL, HFILL}
+        },
+        { &hf_gtpv2_pres_rep_area_info_flags_b3_b7_spare,
+          {"Spare", "gtpv2.pres_rep_area_info_spare",
+            FT_UINT8, BASE_HEX, NULL, 0xF8,
+             NULL, HFILL}
+        },
+        { &hf_gtpv2_pres_rep_area_info_flags_b4_b7_spare,
+          {"Spare", "gtpv2.pres_rep_area_info_spare",
+            FT_UINT8, BASE_HEX, NULL, 0xF0,
+             NULL, HFILL}
+        },
         { &hf_gtpv2_ppi_value,
             {"Paging and Policy Information Value", "gtpv2.ppi_value",
             FT_UINT8, BASE_DEC | BASE_EXT_STRING,
@@ -9714,7 +9802,7 @@ void proto_register_gtpv2(void)
     };
 
     /* Setup protocol subtree array */
-#define GTPV2_NUM_INDIVIDUAL_ELEMS    59
+#define GTPV2_NUM_INDIVIDUAL_ELEMS    60
     static gint *ett_gtpv2_array[GTPV2_NUM_INDIVIDUAL_ELEMS + NUM_GTPV2_IES];
 
     ett_gtpv2_array[0] = &ett_gtpv2;
@@ -9776,7 +9864,7 @@ void proto_register_gtpv2(void)
     ett_gtpv2_array[56] = &ett_gtpv2_ciot_support_ind;
     ett_gtpv2_array[57] = &ett_gtpv2_rohc_profile_flags;
     ett_gtpv2_array[58] = &ett_gtpv2_secondary_rat_usage_data_report;
-
+    ett_gtpv2_array[59] = &ett_gtpv2_pres_rep_area_info,
     last_offset = GTPV2_NUM_INDIVIDUAL_ELEMS;
 
     for (i=0; i < NUM_GTPV2_IES; i++, last_offset++)

