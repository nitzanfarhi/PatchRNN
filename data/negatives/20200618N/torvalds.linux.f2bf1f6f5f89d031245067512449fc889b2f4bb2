commit f2bf1f6f5f89d031245067512449fc889b2f4bb2
Author: Steven Rostedt <srostedt@redhat.com>
Date:   Wed Jun 6 19:50:40 2012 -0400

    tracing: Have tracing_off() actually turn tracing off
    
    A recent update to have tracing_on/off() only affect the ftrace ring
    buffers instead of all ring buffers had a cut and paste error.
    The tracing_off() did the exact same thing as tracing_on() and
    would not actually turn off tracing. Unfortunately, tracing_off()
    is more important to be working than tracing_on() as this is a key
    development tool, as it lets the developer turn off tracing as soon
    as a problem is discovered. It is also used by panic and oops code.
    
    This bug also breaks the 'echo func:traceoff > set_ftrace_filter'
    
    Cc: <stable@vger.kernel.org> # 3.4
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>

diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
index 68032c6177db..49249c28690d 100644
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@ -371,7 +371,7 @@ EXPORT_SYMBOL_GPL(tracing_on);
 void tracing_off(void)
 {
 	if (global_trace.buffer)
-		ring_buffer_record_on(global_trace.buffer);
+		ring_buffer_record_off(global_trace.buffer);
 	/*
 	 * This flag is only looked at when buffers haven't been
 	 * allocated yet. We don't really care about the race

