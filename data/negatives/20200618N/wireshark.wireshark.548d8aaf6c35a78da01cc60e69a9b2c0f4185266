commit 548d8aaf6c35a78da01cc60e69a9b2c0f4185266
Author: Martin Kaiser <wireshark@kaiser.cx>
Date:   Tue Jun 10 23:40:48 2014 +0200

    limit the scope of new_offset
    
    Change-Id: Ib7f57696e40df770f5ae21ca066b27d28c13b57b
    Reviewed-on: https://code.wireshark.org/review/2217
    Reviewed-by: Martin Kaiser <wireshark@kaiser.cx>
    Tested-by: Martin Kaiser <wireshark@kaiser.cx>

diff --git a/epan/dissectors/packet-usb.c b/epan/dissectors/packet-usb.c
index c844b71b43..0fd9e6ee66 100644
--- a/epan/dissectors/packet-usb.c
+++ b/epan/dissectors/packet-usb.c
@@ -2910,7 +2910,6 @@ dissect_usb_common(tvbuff_t *tvb, packet_info *pinfo, proto_tree *parent,
                    guint8 header_info)
 {
     gint                  offset = 0;
-    gint                  new_offset;
     int                   endpoint;
     gint                  type_2 = 0;
     guint8                urb_type;
@@ -3110,10 +3109,11 @@ dissect_usb_common(tvbuff_t *tvb, packet_info *pinfo, proto_tree *parent,
                 default:
                     /* Try to find a non-standard specific dissector */
                     if (tvb_reported_length_remaining(tvb, offset) != 0) {
-                            next_tvb = tvb_new_subset_remaining(tvb, offset);
-                            new_offset = try_dissect_next_protocol(tree, parent, next_tvb, offset, pinfo, usb_conv_info, type_2, urb_type, NULL, NULL);
-                            if (new_offset > offset)
-                                offset = new_offset;
+                        gint new_offset;
+                        next_tvb = tvb_new_subset_remaining(tvb, offset);
+                        new_offset = try_dissect_next_protocol(tree, parent, next_tvb, offset, pinfo, usb_conv_info, type_2, urb_type, NULL, NULL);
+                        if (new_offset > offset)
+                            offset = new_offset;
                     }
 
                     if (tvb_reported_length_remaining(tvb, offset) != 0) {

