commit 2b7f4d83fe5d2c03cf8bea70cc9baeb4db205e19
Author: aystarik <aystarik>
Date:   Wed Jun 29 16:51:58 2005 +0000

    Automated code cleanup
    
    
    date    2002.12.06.16.32.00;    author rmoore1; state Exp;

diff --git a/source/components/hardware/hwacpi.c b/source/components/hardware/hwacpi.c
index cd471dc7f..7fab3f5e7 100644
--- a/source/components/hardware/hwacpi.c
+++ b/source/components/hardware/hwacpi.c
@@ -2,7 +2,7 @@
 /******************************************************************************
  *
  * Module Name: hwacpi - ACPI Hardware Initialization/Mode Interface
- *              $Revision: 1.57 $
+ *              $Revision: 1.61 $
  *
  *****************************************************************************/
 
@@ -190,13 +190,36 @@ AcpiHwSetMode (
 
     ACPI_FUNCTION_TRACE ("HwSetMode");
 
+    /*
+     * ACPI 2.0 clarified that if SMI_CMD in FADT is zero,
+     * system does not support mode transition.
+     */
+    if (!AcpiGbl_FADT->SmiCmd)
+    {
+        ACPI_DEBUG_PRINT ((ACPI_DB_ERROR, "No SMI_CMD in FADT, mode transition failed.\n"));
+        return_ACPI_STATUS (AE_NO_HARDWARE_RESPONSE);
+    }
+
+    /*
+     * ACPI 2.0 clarified the meaning of ACPI_ENABLE and ACPI_DISABLE
+     * in FADT: If it is zero, enabling or disabling is not supported.
+     * As old systems may have used zero for mode transition,
+     * we make sure both the numbers are zero to determine these
+     * transitions are not supported.
+     */
+    if (!AcpiGbl_FADT->AcpiEnable && !AcpiGbl_FADT->AcpiDisable)
+    {
+        ACPI_DEBUG_PRINT ((ACPI_DB_INFO, "No mode transition supported in this system.\n"));
+        return_ACPI_STATUS (AE_OK);
+    }
+
     switch (Mode)
     {
     case ACPI_SYS_MODE_ACPI:
 
         /* BIOS should have disabled ALL fixed and GP events */
 
-        Status = AcpiOsWritePort (AcpiGbl_FADT->SmiCmd, 
+        Status = AcpiOsWritePort (AcpiGbl_FADT->SmiCmd,
                         (ACPI_INTEGER) AcpiGbl_FADT->AcpiEnable, 8);
         ACPI_DEBUG_PRINT ((ACPI_DB_INFO, "Attempting to enable ACPI mode\n"));
         break;
@@ -207,7 +230,7 @@ AcpiHwSetMode (
          * BIOS should clear all fixed status bits and restore fixed event
          * enable bits to default
          */
-        Status = AcpiOsWritePort (AcpiGbl_FADT->SmiCmd, 
+        Status = AcpiOsWritePort (AcpiGbl_FADT->SmiCmd,
                     (ACPI_INTEGER) AcpiGbl_FADT->AcpiDisable, 8);
         ACPI_DEBUG_PRINT ((ACPI_DB_INFO,
                     "Attempting to enable Legacy (non-ACPI) mode\n"));
@@ -231,12 +254,13 @@ AcpiHwSetMode (
     {
         Status = AE_NO_HARDWARE_RESPONSE;
 
-        if (AcpiHwGetMode() == Mode) {
+        if (AcpiHwGetMode() == Mode)
+        {
             ACPI_DEBUG_PRINT ((ACPI_DB_INFO, "Mode %X successfully enabled\n", Mode));
             Status = AE_OK;
             break;
         }
-        AcpiOsStall(1000);  
+        AcpiOsStall(1000);
         Retry--;
     }
 
@@ -266,7 +290,7 @@ AcpiHwGetMode (void)
 
     ACPI_FUNCTION_TRACE ("HwGetMode");
 
-    Status = AcpiHwBitRegisterRead (ACPI_BITREG_SCI_ENABLE, &Value, ACPI_MTX_LOCK);
+    Status = AcpiGetRegister (ACPI_BITREG_SCI_ENABLE, &Value, ACPI_MTX_LOCK);
     if (ACPI_FAILURE (Status))
     {
         return_VALUE (ACPI_SYS_MODE_LEGACY);

