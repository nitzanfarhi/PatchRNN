commit 848912e547c4569445a61203a7df402646a88c25
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu May 12 19:43:37 2016 +1000

    Revert "powerpc/powernv: Exclude root bus in pnv_pci_reset_secondary_bus()"
    
    This reverts commit c8ceacc22bce95d3a9cff198c9c27a30105a16b8.
    
    Gavin says: I missed the fact that it affects the PCI passthrou path as
    reported by Alexey: When passing GPU (0003:01:00.0) which seats behind
    the root port, the reset request is routed to skiboot in original code.
    In skiboot, the link bouncing events are masked during the reset. So we
    don't see EEH (freeze all) error even link bouncing happens. With the
    changes included, the reset is done by kernel and the link bouncing
    events aren't masked by altering content of PHB3 (or P7IOC) specific
    hardware registers which are invisible to kernel (skiboot hides the
    hardware specific). It means the link bouncing is seen by the root port
    and it causes a EEH (freeze all) error. The PCI passthrough on GPU
    device cannot work.
    
    Requested-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Requested-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/platforms/powernv/eeh-powernv.c b/arch/powerpc/platforms/powernv/eeh-powernv.c
index 593b8dc0e137..9226df11bf39 100644
--- a/arch/powerpc/platforms/powernv/eeh-powernv.c
+++ b/arch/powerpc/platforms/powernv/eeh-powernv.c
@@ -868,8 +868,16 @@ static int pnv_eeh_bridge_reset(struct pci_dev *dev, int option)
 
 void pnv_pci_reset_secondary_bus(struct pci_dev *dev)
 {
-	pnv_eeh_bridge_reset(dev, EEH_RESET_HOT);
-	pnv_eeh_bridge_reset(dev, EEH_RESET_DEACTIVATE);
+	struct pci_controller *hose;
+
+	if (pci_is_root_bus(dev->bus)) {
+		hose = pci_bus_to_host(dev->bus);
+		pnv_eeh_root_reset(hose, EEH_RESET_HOT);
+		pnv_eeh_root_reset(hose, EEH_RESET_DEACTIVATE);
+	} else {
+		pnv_eeh_bridge_reset(dev, EEH_RESET_HOT);
+		pnv_eeh_bridge_reset(dev, EEH_RESET_DEACTIVATE);
+	}
 }
 
 static void pnv_eeh_wait_for_pending(struct pci_dn *pdn, const char *type,

