commit f7da99c0cf61b4f2c3bc7e56185743e4a59b7da5
Author: aystarik <aystarik>
Date:   Wed Jun 29 16:17:15 2005 +0000

    Changes to upgrade 16-bit support
    
    
    date    2002.05.16.22.30.00;    author rmoore1; state Exp;

diff --git a/source/components/debugger/dbcmds.c b/source/components/debugger/dbcmds.c
index dc42d2662..144fefc2f 100644
--- a/source/components/debugger/dbcmds.c
+++ b/source/components/debugger/dbcmds.c
@@ -1,7 +1,7 @@
 /*******************************************************************************
  *
  * Module Name: dbcmds - debug commands and output routines
- *              $Revision: 1.81 $
+ *              $Revision: 1.83 $
  *
  ******************************************************************************/
 
@@ -134,7 +134,7 @@
  * These object types map directly to the ACPI_TYPES
  */
 
-ARGUMENT_INFO         AcpiDbObjectTypes [] =
+static ARGUMENT_INFO        AcpiDbObjectTypes [] =
 {
     {"ANY"},
     {"NUMBERS"},
@@ -225,7 +225,7 @@ AcpiDbFindReferences (
 
     /* Search all nodes in namespace */
 
-    AcpiWalkNamespace (ACPI_TYPE_ANY, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
+    (void) AcpiWalkNamespace (ACPI_TYPE_ANY, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
                     AcpiDbWalkForReferences, (void *) ObjDesc, NULL);
 }
 
@@ -592,6 +592,7 @@ AcpiDbSendNotify (
     UINT32                  Value)
 {
     ACPI_NAMESPACE_NODE     *Node;
+    ACPI_STATUS             Status;
 
 
     /* Translate name to an Named object */
@@ -611,7 +612,11 @@ AcpiDbSendNotify (
 
          /* Send the notify */
 
-        AcpiEvQueueNotifyRequest (Node, Value);
+        Status = AcpiEvQueueNotifyRequest (Node, Value);
+        if (ACPI_FAILURE (Status))
+        {
+            AcpiOsPrintf ("Could not queue notify\n");
+        }
         break;
 
     default:
@@ -648,6 +653,7 @@ AcpiDbSetMethodData (
     UINT32                  Value;
     ACPI_WALK_STATE         *WalkState;
     ACPI_OPERAND_OBJECT     *ObjDesc;
+    ACPI_STATUS             Status;
 
 
     /* Validate TypeArg */
@@ -700,7 +706,12 @@ AcpiDbSetMethodData (
             return;
         }
 
-        AcpiDsStoreObjectToLocal (AML_ARG_OP, Index, ObjDesc, WalkState);
+        Status = AcpiDsStoreObjectToLocal (AML_ARG_OP, Index, ObjDesc, WalkState);
+        if (ACPI_FAILURE (Status))
+        {
+            return;
+        }
+
         ObjDesc = WalkState->Arguments[Index].Object;
 
         AcpiOsPrintf ("Arg%d: ", Index);
@@ -717,7 +728,12 @@ AcpiDbSetMethodData (
             return;
         }
 
-        AcpiDsStoreObjectToLocal (AML_LOCAL_OP, Index, ObjDesc, WalkState);
+        Status = AcpiDsStoreObjectToLocal (AML_LOCAL_OP, Index, ObjDesc, WalkState);
+        if (ACPI_FAILURE (Status))
+        {
+            return;
+        }
+
         ObjDesc = WalkState->LocalVariables[Index].Object;
 
         AcpiOsPrintf ("Local%d: ", Index);
@@ -799,6 +815,10 @@ AcpiDbWalkForSpecificObjects (
         case ACPI_TYPE_BUFFER:
             AcpiOsPrintf ("  Length %X", ObjDesc->Buffer.Length);
             break;
+
+        default:
+            /* Ignore other object types */
+            break;
         }
     }
 
@@ -844,7 +864,7 @@ AcpiDbDisplayObjects (
 
     /* Walk the namespace from the root */
 
-    AcpiWalkNamespace (Type, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
+    (void) AcpiWalkNamespace (Type, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
                         AcpiDbWalkForSpecificObjects, (void *) &Type, NULL);
 
     AcpiDbSetOutputDestination (ACPI_DB_CONSOLE_OUTPUT);
@@ -939,7 +959,7 @@ AcpiDbFindNameInNamespace (
 
     /* Walk the namespace from the root */
 
-    AcpiWalkNamespace (ACPI_TYPE_ANY, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
+    (void) AcpiWalkNamespace (ACPI_TYPE_ANY, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
                         AcpiDbWalkAndMatchName, NameArg, NULL);
 
     AcpiDbSetOutputDestination (ACPI_DB_CONSOLE_OUTPUT);
@@ -1031,7 +1051,8 @@ void
 AcpiDbDisplayResources (
     NATIVE_CHAR             *ObjectArg)
 {
-#ifndef _IA16
+#if ACPI_MACHINE_WIDTH != 16
+
     ACPI_OPERAND_OBJECT     *ObjDesc;
     ACPI_STATUS             Status;
     ACPI_BUFFER             ReturnObj;
@@ -1102,7 +1123,7 @@ GetCrs:
 
     else
     {
-        AcpiRsDumpResourceList ((ACPI_RESOURCE *) AcpiGbl_DbBuffer);
+        AcpiRsDumpResourceList (ACPI_CAST_PTR (ACPI_RESOURCE, AcpiGbl_DbBuffer));
     }
 
     Status = AcpiSetCurrentResources (ObjDesc, &ReturnObj);
@@ -1139,7 +1160,7 @@ GetPrs:
 
     else
     {
-        AcpiRsDumpResourceList ((ACPI_RESOURCE *) AcpiGbl_DbBuffer);
+        AcpiRsDumpResourceList (ACPI_CAST_PTR (ACPI_RESOURCE, AcpiGbl_DbBuffer));
     }
 
 
@@ -1206,7 +1227,7 @@ AcpiDbIntegrityWalk (
     if (Object)
     {
         Info->Objects++;
-        if (ACPI_GET_DESCRIPTOR_TYPE (Object) != ACPI_DESC_TYPE_INTERNAL)
+        if (ACPI_GET_DESCRIPTOR_TYPE (Object) != ACPI_DESC_TYPE_OPERAND)
         {
             AcpiOsPrintf ("Invalid Descriptor Type for Object %p, Type = %X\n",
                 Object, ACPI_GET_DESCRIPTOR_TYPE (Object));
@@ -1237,8 +1258,8 @@ AcpiDbCheckIntegrity (void)
 
     /* Search all nodes in namespace */
 
-    AcpiWalkNamespace (ACPI_TYPE_ANY, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
-                    AcpiDbIntegrityWalk, (void **) &Info, NULL);
+    (void) AcpiWalkNamespace (ACPI_TYPE_ANY, ACPI_ROOT_OBJECT, ACPI_UINT32_MAX,
+                    AcpiDbIntegrityWalk, (void *) &Info, NULL);
 
     AcpiOsPrintf ("Verified %d namespace nodes with %d Objects\n", Info.Nodes, Info.Objects);
 
diff --git a/source/components/debugger/dbdisply.c b/source/components/debugger/dbdisply.c
index bf9f33ac5..c8713a7f9 100644
--- a/source/components/debugger/dbdisply.c
+++ b/source/components/debugger/dbdisply.c
@@ -1,7 +1,7 @@
 /*******************************************************************************
  *
  * Module Name: dbdisply - debug display commands
- *              $Revision: 1.69 $
+ *              $Revision: 1.73 $
  *
  ******************************************************************************/
 
@@ -150,7 +150,7 @@ AcpiDbGetPointer (
     void                    *ObjPtr;
 
 
-#ifdef _IA16
+#if ACPI_MACHINE_WIDTH == 16
 #include <stdio.h>
 
     /* Have to handle 16-bit pointers of the form segment:offset */
@@ -198,7 +198,7 @@ AcpiDbDumpParserDescriptor (
 
     ACPI_DEBUG_ONLY_MEMBERS (AcpiOsPrintf ("%20.20s : %s\n", "Opcode Name", Info->Name));
 
-    AcpiOsPrintf ("%20.20s : %p\n", "Value/ArgList", Op->Common.Value);
+    AcpiOsPrintf ("%20.20s : %p\n", "Value/ArgList", Op->Common.Value.Arg);
     AcpiOsPrintf ("%20.20s : %p\n", "Parent", Op->Common.Parent);
     AcpiOsPrintf ("%20.20s : %p\n", "NextOp", Op->Common.Next);
 }
@@ -289,7 +289,7 @@ AcpiDbDecodeAndDisplayObject (
             goto DumpNte;
 
 
-        case ACPI_DESC_TYPE_INTERNAL:
+        case ACPI_DESC_TYPE_OPERAND:
 
             /* This is a ACPI OPERAND OBJECT */
 
@@ -417,8 +417,8 @@ AcpiDbDecodeInternalObject (
     {
     case ACPI_TYPE_INTEGER:
 
-        AcpiOsPrintf (" %.8X%.8X", ACPI_HIDWORD (ObjDesc->Integer.Value),
-                                   ACPI_LODWORD (ObjDesc->Integer.Value));
+        AcpiOsPrintf (" %8.8X%8.8X", ACPI_HIDWORD (ObjDesc->Integer.Value),
+                                     ACPI_LODWORD (ObjDesc->Integer.Value));
         break;
 
 
@@ -446,6 +446,11 @@ AcpiDbDecodeInternalObject (
             AcpiOsPrintf (" %2.2X", ObjDesc->Buffer.Pointer[i]);
         }
         break;
+
+    
+    default:
+        /* No additional display for other types */
+        break;
     }
 }
 
@@ -506,12 +511,12 @@ AcpiDbDisplayInternalObject (
         break;
 
 
-    case ACPI_DESC_TYPE_INTERNAL:
+    case ACPI_DESC_TYPE_OPERAND:
 
         Type = ObjDesc->Common.Type;
         if (Type > INTERNAL_TYPE_MAX)
         {
-            AcpiOsPrintf (" Type %x [Invalid Type]", Type);
+            AcpiOsPrintf (" Type %hX [Invalid Type]", Type);
             return;
         }
 
@@ -856,7 +861,6 @@ AcpiDbDisplayResults (void)
 void
 AcpiDbDisplayCallingTree (void)
 {
-    UINT32                  i;
     ACPI_WALK_STATE         *WalkState;
     ACPI_NAMESPACE_NODE     *Node;
 
@@ -871,7 +875,7 @@ AcpiDbDisplayCallingTree (void)
     Node = WalkState->MethodNode;
     AcpiOsPrintf ("Current Control Method Call Tree\n");
 
-    for (i = 0; WalkState; i++)
+    while (WalkState)
     {
         Node = WalkState->MethodNode;
 

