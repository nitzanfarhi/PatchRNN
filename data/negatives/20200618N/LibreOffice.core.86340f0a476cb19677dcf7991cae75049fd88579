commit 86340f0a476cb19677dcf7991cae75049fd88579
Author: Caol√°n McNamara <caolanm@redhat.com>
Date:   Mon Aug 22 12:19:04 2011 +0100

    WaE: keep simple minded compiler happy

diff --git a/framework/inc/protocols.h b/framework/inc/protocols.h
index 88ec160e50ec..3b30a3d1400a 100644
--- a/framework/inc/protocols.h
+++ b/framework/inc/protocols.h
@@ -135,21 +135,44 @@ class ProtocolCheck
      */
     static sal_Bool isProtocol( const ::rtl::OUString& sURL, EProtocol eRequired )
     {
+        sal_Bool bRet = sal_False;
         switch(eRequired)
         {
-            case E_PRIVATE           : return (sURL.compareTo(SPECIALPROTOCOL_PRIVATE        ,SPECIALPROTOCOL_PRIVATE.getLength()        ) == 0);
-            case E_PRIVATE_OBJECT    : return (sURL.compareTo(SPECIALPROTOCOL_PRIVATE_OBJECT ,SPECIALPROTOCOL_PRIVATE_OBJECT.getLength() ) == 0);
-            case E_PRIVATE_STREAM    : return (sURL.compareTo(SPECIALPROTOCOL_PRIVATE_STREAM ,SPECIALPROTOCOL_PRIVATE_STREAM.getLength() ) == 0);
-            case E_PRIVATE_FACTORY   : return (sURL.compareTo(SPECIALPROTOCOL_PRIVATE_FACTORY,SPECIALPROTOCOL_PRIVATE_FACTORY.getLength()) == 0);
-            case E_SLOT              : return (sURL.compareTo(SPECIALPROTOCOL_SLOT           ,SPECIALPROTOCOL_SLOT.getLength()           ) == 0);
-            case E_UNO               : return (sURL.compareTo(SPECIALPROTOCOL_UNO            ,SPECIALPROTOCOL_UNO.getLength()            ) == 0);
-            case E_MACRO             : return (sURL.compareTo(SPECIALPROTOCOL_MACRO          ,SPECIALPROTOCOL_MACRO.getLength()          ) == 0);
-            case E_SERVICE           : return (sURL.compareTo(SPECIALPROTOCOL_SERVICE        ,SPECIALPROTOCOL_SERVICE.getLength()        ) == 0);
-            case E_MAILTO            : return (sURL.compareTo(SPECIALPROTOCOL_MAILTO         ,SPECIALPROTOCOL_MAILTO.getLength()         ) == 0);
-            case E_NEWS              : return (sURL.compareTo(SPECIALPROTOCOL_NEWS           ,SPECIALPROTOCOL_NEWS.getLength()           ) == 0);
-            default                  : return sal_False;
+            case E_PRIVATE:
+                bRet = (sURL.equalsAsciiL(SPECIALPROTOCOL_PRIVATE        ,SPECIALPROTOCOL_PRIVATE.getLength()        ) == 0);
+                break;
+            case E_PRIVATE_OBJECT:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_PRIVATE_OBJECT ,SPECIALPROTOCOL_PRIVATE_OBJECT.getLength() ) == 0);
+                break;
+            case E_PRIVATE_STREAM:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_PRIVATE_STREAM ,SPECIALPROTOCOL_PRIVATE_STREAM.getLength() ) == 0);
+                break;
+            case E_PRIVATE_FACTORY:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_PRIVATE_FACTORY,SPECIALPROTOCOL_PRIVATE_FACTORY.getLength()) == 0);
+                break;
+            case E_SLOT:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_SLOT           ,SPECIALPROTOCOL_SLOT.getLength()           ) == 0);
+                break;
+            case E_UNO:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_UNO            ,SPECIALPROTOCOL_UNO.getLength()            ) == 0);
+                break;
+            case E_MACRO:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_MACRO          ,SPECIALPROTOCOL_MACRO.getLength()          ) == 0);
+                break;
+            case E_SERVICE:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_SERVICE        ,SPECIALPROTOCOL_SERVICE.getLength()        ) == 0);
+                break;
+            case E_MAILTO:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_MAILTO         ,SPECIALPROTOCOL_MAILTO.getLength()         ) == 0);
+                break;
+            case E_NEWS:
+                bRet = (sURL.compareTo(SPECIALPROTOCOL_NEWS           ,SPECIALPROTOCOL_NEWS.getLength()           ) == 0);
+                break;
+            default:
+                bRet = sal_False;
+                break;
         }
-        return sal_False;
+        return bRet;
     }
 };
 

