commit 4a33854257764c2ec6337ee0c8ecafb64f8e29e1
Author: Josef Bacik <josef@redhat.com>
Date:   Mon Aug 29 11:01:31 2011 -0400

    Btrfs: set truncate block rsv's size
    
    While debugging a different issue I noticed that we were always reserving space
    when we tried to use our truncate block rsv's.  This is because they didn't have
    a ->size value, so use_block_rsv just assumes there is nothing reserved and it
    does a reserve_metadata_bytes.  This is because btrfs_check_block_rsv() doesn't
    actually add to the size of the block rsv.  That seems to be the right thing to
    do so set ->size to the minimum truncate size we need, since we will always only
    refill to that size anyway, and this way everything works out correctly.
    
    Signed-off-by: Josef Bacik <josef@redhat.com>

diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index e40b9239660d..06ae5b173fd7 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -3561,6 +3561,7 @@ void btrfs_evict_inode(struct inode *inode)
 		btrfs_orphan_del(NULL, inode);
 		goto no_delete;
 	}
+	rsv->size = min_size;
 
 	btrfs_i_size_write(inode, 0);
 
@@ -6530,6 +6531,7 @@ static int btrfs_truncate(struct inode *inode)
 	rsv = btrfs_alloc_block_rsv(root);
 	if (!rsv)
 		return -ENOMEM;
+	rsv->size = min_size;
 
 	/*
 	 * 1 for the truncate slack space

