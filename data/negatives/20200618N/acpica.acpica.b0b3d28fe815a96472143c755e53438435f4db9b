commit b0b3d28fe815a96472143c755e53438435f4db9b
Author: aystarik <aystarik>
Date:   Wed Jun 29 15:43:42 2005 +0000

    Restructured aslopt, first pass
    
    
    date    2002.08.23.22.50.00;    author rmoore1; state Exp;

diff --git a/source/compiler/aslcompile.c b/source/compiler/aslcompile.c
index 3f2ac824f..b5125c16e 100644
--- a/source/compiler/aslcompile.c
+++ b/source/compiler/aslcompile.c
@@ -2,7 +2,7 @@
 /******************************************************************************
  *
  * Module Name: aslcompile - top level compile module
- *              $Revision: 1.61 $
+ *              $Revision: 1.62 $
  *
  *****************************************************************************/
 
@@ -312,18 +312,6 @@ CmDoCompile (void)
 
     OpcGetIntegerWidth (RootNode);
 
-    /*
-     * Now that the input is parsed, we can open the AML output file.
-     * Note: by default, the name of this file comes from the table descriptor
-     * within the input file.
-     */
-    Status = FlOpenAmlOutputFile (Gbl_OutputFilenamePrefix);
-    if (ACPI_FAILURE (Status))
-    {
-        AePrintErrorLog (ASL_FILE_STDERR);
-        return -1;
-    }
-
     /* Pre-process parse tree for any operator transforms */
 
     UtBeginEvent (i, "Generate AML opcodes");
@@ -336,6 +324,18 @@ CmDoCompile (void)
     TrWalkParseTree (RootNode, ASL_WALK_VISIT_UPWARD, NULL, OpcAmlOpcodeWalk, NULL);
     UtEndEvent (i++);
 
+    /*
+     * Now that the input is parsed, we can open the AML output file.
+     * Note: by default, the name of this file comes from the table descriptor
+     * within the input file.
+     */
+    Status = FlOpenAmlOutputFile (Gbl_OutputFilenamePrefix);
+    if (ACPI_FAILURE (Status))
+    {
+        AePrintErrorLog (ASL_FILE_STDERR);
+        return -1;
+    }
+
     /* Interpret and generate all compile-time constants */
 
     UtBeginEvent (i, "Constant folding via AML interpreter");

