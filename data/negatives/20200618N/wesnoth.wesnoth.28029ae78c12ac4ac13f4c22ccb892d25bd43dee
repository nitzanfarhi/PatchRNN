commit 28029ae78c12ac4ac13f4c22ccb892d25bd43dee
Author: fendrin <fabianmueller5@gmx.de>
Date:   Fri Oct 4 04:21:03 2013 +0200

    Catch some border cases of the "disable" special.
    
    Disables weapons when only one is available as well.
    Initialize the "disable" member in every constructor.
    Set the "disable" special status also for the ai codepath.
    The commit also fixes a memory hole.

diff --git a/src/actions/attack.cpp b/src/actions/attack.cpp
index 93824afad4..2da22c47b9 100644
--- a/src/actions/attack.cpp
+++ b/src/actions/attack.cpp
@@ -119,9 +119,11 @@ battle_context_unit_stats::battle_context_unit_stats(const unit &u,
 		backstab_pos = is_attacker && backstab_check(u_loc, opp_loc, units, *resources::teams);
 		rounds = weapon->get_specials("berserk").highest("value", 1).first;
 		firststrike = weapon->get_special_bool("firststrike");
-		const int distance = distance_between(u_loc, opp_loc);
-		const bool out_of_range = distance > weapon->max_range() || distance < weapon->min_range();
-		disable = weapon->get_special_bool("disable") || out_of_range;
+		{
+			const int distance = distance_between(u_loc, opp_loc);
+			const bool out_of_range = distance > weapon->max_range() || distance < weapon->min_range();
+			disable = weapon->get_special_bool("disable") || out_of_range;
+		}
 
 		// Handle plague.
 		unit_ability_list plague_specials = weapon->get_specials("plague");
@@ -208,6 +210,7 @@ battle_context_unit_stats::battle_context_unit_stats(const unit_type* u_type,
 	backstab_pos(false),
 	swarm(false),
 	firststrike(false),
+	disable(false),
 	experience(0),
 	max_experience(0),
 	level(0),
@@ -250,6 +253,7 @@ battle_context_unit_stats::battle_context_unit_stats(const unit_type* u_type,
 		poisons = !opp_type->musthave_status("unpoisonable") && weapon->get_special_bool("poison");
 		rounds = weapon->get_specials("berserk").highest("value", 1).first;
 		firststrike = weapon->get_special_bool("firststrike");
+		disable = weapon->get_special_bool("disable");
 
 		unit_ability_list plague_specials = weapon->get_specials("plague");
 		plagues = !opp_type->musthave_status("unplagueable") && !plague_specials.empty() &&
@@ -473,7 +477,9 @@ int battle_context::choose_attacker_weapon(const unit &attacker,
 	if (choices.size() == 1) {
 		*defender_weapon = choose_defender_weapon(attacker, defender, choices[0], units,
 			attacker_loc, defender_loc, prev_def);
-		return choices[0];
+		attacker_stats_ = new battle_context_unit_stats(attacker, attacker_loc, choices[0],
+						true, defender, defender_loc, &defender.attacks()[*defender_weapon], units);
+		return attacker_stats_->disable ? -1 : choices[0];
 	}
 
 	// Multiple options: simulate them, save best.
@@ -551,8 +557,11 @@ int battle_context::choose_defender_weapon(const unit &attacker,
 	}
 	if (choices.empty())
 		return -1;
-	if (choices.size() == 1)
-		return choices[0];
+	if (choices.size() == 1) {
+		const battle_context_unit_stats def_stats(defender, defender_loc,
+				choices[0], false, attacker, attacker_loc, &att, units);
+		return (def_stats.disable) ? -1 : choices[0];
+	}
 
 	// Multiple options:
 	// First pass : get the best weight and the minimum simple rating for this weight.
@@ -586,8 +595,11 @@ int battle_context::choose_defender_weapon(const unit &attacker,
 				true, defender, defender_loc, &def, units);
 		battle_context_unit_stats *def_stats = new battle_context_unit_stats(defender, defender_loc, choices[i], false,
 				attacker, attacker_loc, &att, units);
-		if (def_stats->disable) continue;
-
+		if (def_stats->disable) {
+			delete att_stats;
+			delete def_stats;
+			continue;
+		}
 		combatant *att_comb = new combatant(*att_stats);
 		combatant *def_comb = new combatant(*def_stats, prev_def);
 		att_comb->fight(*def_comb);

