commit 253fb5f8897d988d93ce276f8147c2964da3eefb
Author: Elijah Newren <newren@gmail.com>
Date:   Fri Jul 9 07:10:56 2010 -0600

    fast-import: Improve robustness when D->F changes provided in wrong order
    
    When older versions of fast-export came across a directory changing to a
    symlink (or regular file), it would output the changes in the form
      M 120000 :239821 dir-changing-to-symlink
      D dir-changing-to-symlink/filename1
    When fast-import sees the first line, it deletes the directory named
    dir-changing-to-symlink (and any files below it) and creates a symlink in
    its place.  When fast-import came across the second line, it was previously
    trying to remove the file and relevant leading directories in
    tree_content_remove(), and as a side effect it would delete the symlink
    that was just created.  This resulted in the symlink silently missing from
    the resulting repository.
    
    To improve robustness, we ignore file deletions underneath directory names
    that correspond to non-directories.  This can also be viewed as a minor
    optimization: since there cannot be a file and a directory with the same
    name in the same directory, the file clearly can't exist so nothing needs
    to be done to delete it.
    
    Signed-off-by: Elijah Newren <newren@gmail.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

diff --git a/fast-import.c b/fast-import.c
index 309f2c58a..75ed738b7 100644
--- a/fast-import.c
+++ b/fast-import.c
@@ -1528,6 +1528,14 @@ static int tree_content_remove(
 	for (i = 0; i < t->entry_count; i++) {
 		e = t->entries[i];
 		if (e->name->str_len == n && !strncmp(p, e->name->str_dat, n)) {
+			if (slash1 && !S_ISDIR(e->versions[1].mode))
+				/*
+				 * If p names a file in some subdirectory, and a
+				 * file or symlink matching the name of the
+				 * parent directory of p exists, then p cannot
+				 * exist and need not be deleted.
+				 */
+				return 1;
 			if (!slash1 || !S_ISDIR(e->versions[1].mode))
 				goto del_entry;
 			if (!e->tree)

