commit 275192230269eb497ac69d58f8405670d791fff9
Author: Jordan DeLong <jdelong@fb.com>
Date:   Fri May 24 18:09:53 2013 -0700

    Fix a fallthrough bug in TranslatorX64::smash
    
    If smash is told to generate a forward jump to a target less
    than 7 bytes away, it nops out the intermediate region.  It's
    currently impossible for this to cause any issues (as far as I know),
    but technically there can be other instructions in there.  I hit this
    by randomizing the layout of blocks in codegen---if you place a block
    consisting of only a short backward jump immediately after the block
    containing the main trace exit, and then a fallthrough-ish translation
    occurs, smash will nop out the short-jump block.

diff --git a/hphp/runtime/vm/translator/translator-x64.cpp b/hphp/runtime/vm/translator/translator-x64.cpp
index 2aeb059df1..cc2eb40649 100644
--- a/hphp/runtime/vm/translator/translator-x64.cpp
+++ b/hphp/runtime/vm/translator/translator-x64.cpp
@@ -1542,7 +1542,7 @@ TranslatorX64::smash(X64Assembler &a, TCA src, TCA dest, bool isCall) {
    */
   CodeCursor cg(a, src);
   assert(isSmashable(a.code.frontier, kJmpLen));
-  if (dest > src && dest - src <= 7) {
+  if (dest > src && dest - src <= kJmpLen) {
     assert(!isCall);
     a.    emitNop(dest - src);
   } else if (!isCall) {

