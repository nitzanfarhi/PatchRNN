commit 0fb8b36b489db26521da93b36d80b03bf95a0cfb
Author: David Vossel <dvossel@redhat.com>
Date:   Tue Mar 5 17:11:27 2013 -0600

    Low: lrmd: Cleanup of ipc passthrough after code review

diff --git a/crmd/lrm_state.c b/crmd/lrm_state.c
index 4ddf37650..17a6f040d 100644
--- a/crmd/lrm_state.c
+++ b/crmd/lrm_state.c
@@ -299,6 +299,7 @@ lrm_state_ipc_connect(lrm_state_t * lrm_state)
 static void
 remote_proxy_notify_destroy(lrmd_t *lrmd, const char *session_id)
 {
+    /* sending to the remote node that an ipc connection has been destroyed */
     xmlNode *msg = create_xml_node(NULL, T_LRMD_IPC_PROXY);
     crm_xml_add(msg, F_LRMD_IPC_OP, "destroy");
     crm_xml_add(msg, F_LRMD_IPC_SESSION, session_id);
@@ -309,6 +310,7 @@ remote_proxy_notify_destroy(lrmd_t *lrmd, const char *session_id)
 static void
 remote_proxy_relay_event(lrmd_t *lrmd, const char *session_id, xmlNode *msg)
 {
+    /* sending to the remote node an event msg. */
     xmlNode *event = create_xml_node(NULL, T_LRMD_IPC_PROXY);
     crm_xml_add(event, F_LRMD_IPC_OP, "event");
     crm_xml_add(event, F_LRMD_IPC_SESSION, session_id);
@@ -320,6 +322,7 @@ remote_proxy_relay_event(lrmd_t *lrmd, const char *session_id, xmlNode *msg)
 static void
 remote_proxy_relay_response(lrmd_t *lrmd, const char *session_id, xmlNode *msg, int msg_id)
 {
+    /* sending to the remote node a response msg. */
     xmlNode *response = create_xml_node(NULL, T_LRMD_IPC_PROXY);
     crm_xml_add(response, F_LRMD_IPC_OP, "response");
     crm_xml_add(response, F_LRMD_IPC_SESSION, session_id);
@@ -383,7 +386,7 @@ remote_proxy_new(const char *node_name, const char *session_id, const char *chan
     if (safe_str_eq(channel, CRM_SYSTEM_CRMD)) {
         proxy->is_local = TRUE;
     } else {
-        proxy->source = mainloop_add_ipc_client(channel, G_PRIORITY_HIGH, 512 * 1024 /* 512k */ , proxy, &proxy_callbacks);
+        proxy->source = mainloop_add_ipc_client(channel, G_PRIORITY_LOW, 512 * 1024 /* 512k */ , proxy, &proxy_callbacks);
         proxy->ipc = mainloop_get_ipc_client(proxy->source);
 
         if (proxy->source == NULL) {
diff --git a/lrmd/ipc_proxy.c b/lrmd/ipc_proxy.c
index 7c6d149a6..873948ba6 100644
--- a/lrmd/ipc_proxy.c
+++ b/lrmd/ipc_proxy.c
@@ -40,7 +40,9 @@ static qb_ipcs_service_t *cib_shm = NULL;
 static qb_ipcs_service_t *attrd_ipcs = NULL;
 static qb_ipcs_service_t *crmd_ipcs = NULL;
 
+/* ipc providers == crmd clients connecting from cluster nodes */
 GHashTable *ipc_providers;
+/* ipc clients == things like cibadmin, crm_resource, connecting locally */
 GHashTable *ipc_clients;
 
 static int32_t
@@ -57,7 +59,7 @@ ipc_proxy_accept(qb_ipcs_connection_t * c, uid_t uid, gid_t gid, const char *ipc
 
     if (g_hash_table_size(ipc_providers) == 0) {
         crm_err("No ipc providers available for uid %d gid %d", uid, gid);
-        return -EIO;
+        return -EREMOTEIO;
     }
 
     g_hash_table_iter_init(&iter, ipc_providers);
@@ -68,14 +70,14 @@ ipc_proxy_accept(qb_ipcs_connection_t * c, uid_t uid, gid_t gid, const char *ipc
         ipc_proxy = value;
     } else {
         crm_err("No ipc providers available for uid %d gid %d", uid, gid);
-        return -EIO;
+        return -EREMOTEIO;
     }
 
     /* this new client is a local ipc client on a remote
      * guest wanting to access the ipc on any available cluster nodes */
     client = crm_client_new(c, uid, gid);
     if (client == NULL) {
-        return -EIO;
+        return -EREMOTEIO;
     }
 
     /* This ipc client is bound to a single ipc provider. If the
@@ -147,8 +149,8 @@ ipc_proxy_forward_client(crm_client_t *ipc_proxy, xmlNode *xml)
      *
      * Looking at the chain of events.
      *
-     * -----remote node-----------|---- cluster node ------
-     * ipc_client <--1--> lrmd <--2--> crmd <----3----> ipc server
+     * -----remote node----------------|---- cluster node ------
+     * ipc_client <--1--> this code <--2--> crmd <----3----> ipc server
      *
      * This function is receiving a msg from connection 2
      * and forwarding it to connection 1.
@@ -190,8 +192,8 @@ ipc_proxy_dispatch(qb_ipcs_connection_t * c, void *data, size_t size)
      *
      * Looking at the chain of events.
      *
-     * -----remote node-----------|---- cluster node ------
-     * ipc_client <--1--> lrmd <--2--> crmd <----3----> ipc server
+     * -----remote node----------------|---- cluster node ------
+     * ipc_client <--1--> this code <--2--> crmd <----3----> ipc server
      *
      * This function is receiving a request from connection
      * 1 and forwarding it to connection 2.
@@ -285,6 +287,9 @@ static struct qb_ipcs_service_handlers cib_proxy_callbacks_rw = {
 void
 ipc_proxy_add_provider(crm_client_t *ipc_proxy)
 {
+    if (ipc_providers == NULL) {
+        return;
+    }
     g_hash_table_insert(ipc_providers, ipc_proxy->id, ipc_proxy);
 }
 
@@ -295,6 +300,10 @@ ipc_proxy_remove_provider(crm_client_t *ipc_proxy)
     crm_client_t *ipc_client = NULL;
     char *key = NULL;
 
+    if (ipc_providers == NULL) {
+        return;
+    }
+
     g_hash_table_remove(ipc_providers, ipc_proxy->id);
 
     g_hash_table_iter_init(&iter, ipc_clients);
diff --git a/lrmd/lrmd.c b/lrmd/lrmd.c
index b58faa8d9..d29a7f3d0 100644
--- a/lrmd/lrmd.c
+++ b/lrmd/lrmd.c
@@ -1003,6 +1003,7 @@ process_lrmd_signon(crm_client_t * client, uint32_t id, xmlNode * request)
     lrmd_server_send_reply(client, id, reply);
 
     if (crm_is_true(is_ipc_provider)) {
+        /* this is a remote connection from a cluster nodes crmd */
         ipc_proxy_add_provider(client);
     }
 

