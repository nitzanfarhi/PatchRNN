commit d842301181d9a4486aa24720ed4f96018b213292
Author: Michal Hocko <mhocko@suse.cz>
Date:   Fri Oct 26 13:37:29 2012 +0200

    memcg: root_cgroup cannot reach mem_cgroup_move_parent
    
    The root cgroup cannot be destroyed so we never hit it down the
    mem_cgroup_pre_destroy path and mem_cgroup_force_empty_write shouldn't
    even try to do anything if called for the root.
    
    This means that mem_cgroup_move_parent doesn't have to bother with the
    root cgroup and it can assume it can always move charges upwards.
    
    Signed-off-by: Michal Hocko <mhocko@suse.cz>
    Reviewed-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Glauber Costa <glommer@parallels.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>

diff --git a/mm/memcontrol.c b/mm/memcontrol.c
index 07d92b84f448..916132a29b36 100644
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@ -2715,9 +2715,7 @@ static int mem_cgroup_move_parent(struct page *page,
 	unsigned long uninitialized_var(flags);
 	int ret;
 
-	/* Is ROOT ? */
-	if (mem_cgroup_is_root(child))
-		return -EINVAL;
+	VM_BUG_ON(mem_cgroup_is_root(child));
 
 	ret = -EBUSY;
 	if (!get_page_unless_zero(page))
@@ -3823,6 +3821,8 @@ static int mem_cgroup_force_empty_write(struct cgroup *cont, unsigned int event)
 	struct mem_cgroup *memcg = mem_cgroup_from_cont(cont);
 	int ret;
 
+	if (mem_cgroup_is_root(memcg))
+		return -EINVAL;
 	css_get(&memcg->css);
 	ret = mem_cgroup_force_empty(memcg);
 	css_put(&memcg->css);

