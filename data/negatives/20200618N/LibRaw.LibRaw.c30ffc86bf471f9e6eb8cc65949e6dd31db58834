commit c30ffc86bf471f9e6eb8cc65949e6dd31db58834
Author: Alex Tutubalin <lexa@lexa.ru>
Date:   Wed Apr 4 19:36:22 2012 +0400

    #lines recovered

diff --git a/internal/dcraw_common.cpp b/internal/dcraw_common.cpp
index fae28ce..20c3d21 100644
--- a/internal/dcraw_common.cpp
+++ b/internal/dcraw_common.cpp
@@ -879,7 +879,7 @@ void CLASS lossless_jpeg_load_raw()
       }
   offset[slices] = offset[slices-1];
   slice = 1; // next slice
-  pixno = offset[0] & 0x0fffffff;
+  pixno = offset[0]; 
   pixelsInSlice = slicesW[0];
 #endif
 
@@ -976,10 +976,8 @@ void CLASS lossless_jpeg_load_raw()
 	col = (row++,0);
 #else
       if(!buf) // 1D or 1Ds case
-          {
-              if (++col >= raw_width)
-                  col = (row++,0);
-          }
+         if (++col >= raw_width)
+            col = (row++,0);
 #endif
     }
   }
@@ -1478,7 +1476,7 @@ void CLASS fuji_load_raw()
   read_shorts(raw_image,raw_width*raw_height);
 #endif
 }
-#line 1784 "dcraw/dcraw.c"
+#line 1782 "dcraw/dcraw.c"
 void CLASS ppm_thumb()
 {
   char *thumb;
@@ -1966,7 +1964,7 @@ void CLASS leaf_hdr_load_raw()
   }
 }
 
-#line 2275 "dcraw/dcraw.c"
+#line 2273 "dcraw/dcraw.c"
 void CLASS sinar_4shot_load_raw()
 {
   ushort *pixel;
@@ -3262,7 +3260,7 @@ void CLASS redcine_load_raw()
   jas_stream_close (in);
 #endif
 }
-#line 3727 "dcraw/dcraw.c"
+#line 3734 "dcraw/dcraw.c"
 
 
 void CLASS gamma_curve (double pwr, double ts, int mode, int imax)
@@ -4631,7 +4629,7 @@ void CLASS parse_thumb_note (int base, unsigned toff, unsigned tlen)
   }
 }
 
-#line 5099 "dcraw/dcraw.c"
+#line 5106 "dcraw/dcraw.c"
 void CLASS parse_makernote (int base, int uptag)
 {
   static const uchar xlat[2][256] = {
@@ -5210,7 +5208,7 @@ void CLASS parse_kodak_ifd (int base)
   }
 }
 
-#line 5682 "dcraw/dcraw.c"
+#line 5689 "dcraw/dcraw.c"
 int CLASS parse_tiff_ifd (int base)
 {
   unsigned entries, tag, type, len, plen=16, save;
@@ -6515,7 +6513,7 @@ void CLASS parse_redcine()
     data_offset = get4();
   }
 }
-#line 6993 "dcraw/dcraw.c"
+#line 7000 "dcraw/dcraw.c"
 void CLASS adobe_coeff (const char *p_make, const char *p_model)
 {
   static const struct {
@@ -7254,7 +7252,7 @@ short CLASS guess_byte_order (int words)
   return sum[0] < sum[1] ? 0x4d4d : 0x4949;
 }
 
-#line 7735 "dcraw/dcraw.c"
+#line 7742 "dcraw/dcraw.c"
 
 float CLASS find_green (int bps, int bite, int off0, int off1)
 {
@@ -8908,7 +8906,7 @@ else if (!strcmp(model,"QV-2000UX")) {
   }
 }
 
-#line 9476 "dcraw/dcraw.c"
+#line 9489 "dcraw/dcraw.c"
 void CLASS convert_to_rgb()
 {
   int row, col, c, i, j, k;
@@ -9127,7 +9125,7 @@ int CLASS flip_index (int row, int col)
   return row * iwidth + col;
 }
 
-#line 9719 "dcraw/dcraw.c"
+#line 9732 "dcraw/dcraw.c"
 void CLASS tiff_set (ushort *ntag,
 	ushort tag, ushort type, int count, int val)
 {
diff --git a/internal/dcraw_fileio.cpp b/internal/dcraw_fileio.cpp
index c235408..d2b0894 100644
--- a/internal/dcraw_fileio.cpp
+++ b/internal/dcraw_fileio.cpp
@@ -21,7 +21,7 @@ it under the terms of the one of three licenses as you choose:
    for more information
 */
 
-#line 3565 "dcraw/dcraw.c"
+#line 3572 "dcraw/dcraw.c"
 #include <math.h>
 #define CLASS LibRaw::
 #include "libraw/libraw_types.h"
@@ -29,7 +29,7 @@ it under the terms of the one of three licenses as you choose:
 #include "libraw/libraw.h"
 #include "internal/defines.h"
 #include "internal/var_defines.h"
-#line 3576 "dcraw/dcraw.c"
+#line 3583 "dcraw/dcraw.c"
 
 /*
    Seach from the current directory up to the root looking for
@@ -55,7 +55,7 @@ void CLASS bad_pixels (const char *cfname)
 #endif
   if (cfname)
     fp = fopen (cfname, "r");
-#line 3627 "dcraw/dcraw.c"
+#line 3634 "dcraw/dcraw.c"
   if (!fp) 
       {
 #ifdef LIBRAW_LIBRARY_BUILD
@@ -153,7 +153,7 @@ void CLASS subtract (const char *fname)
   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);
 #endif
 }
-#line 9385 "dcraw/dcraw.c"
+#line 9398 "dcraw/dcraw.c"
 
 #ifndef NO_LCMS
 void CLASS apply_profile (const char *input, const char *output)

