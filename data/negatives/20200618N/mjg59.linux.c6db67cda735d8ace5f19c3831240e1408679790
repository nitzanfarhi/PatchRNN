commit c6db67cda735d8ace5f19c3831240e1408679790
Author: Peter Zijlstra <a.p.zijlstra@chello.nl>
Date:   Fri Aug 20 11:49:15 2010 +0200

    watchdog: Don't throttle the watchdog
    
    Stephane reported that when the machine locks up, the regular ticks,
    which are responsible to resetting the throttle count, stop too.
    
    Hence the NMI watchdog can end up being throttled before it reports on
    the locked up state, and we end up being sad..
    
    Cure this by having the watchdog overflow reset its own throttle count.
    
    Reported-by: Stephane Eranian <eranian@google.com>
    Tested-by: Stephane Eranian <eranian@google.com>
    Cc: Don Zickus <dzickus@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    LKML-Reference: <1282215916.1926.4696.camel@laptop>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

diff --git a/kernel/watchdog.c b/kernel/watchdog.c
index 613bc1f04610..0d53c8e853b1 100644
--- a/kernel/watchdog.c
+++ b/kernel/watchdog.c
@@ -206,6 +206,9 @@ void watchdog_overflow_callback(struct perf_event *event, int nmi,
 		 struct perf_sample_data *data,
 		 struct pt_regs *regs)
 {
+	/* Ensure the watchdog never gets throttled */
+	event->hw.interrupts = 0;
+
 	if (__get_cpu_var(watchdog_nmi_touch) == true) {
 		__get_cpu_var(watchdog_nmi_touch) = false;
 		return;

