commit 7c4abcbeccdd286e7d71b3e8f9fefad84112e54c
Author: Chao Yu <yuchao0@huawei.com>
Date:   Thu Aug 18 17:46:14 2016 +0800

    f2fs: set dirty state for filesystem only when updating meta data
    
    We don't guarantee integrity of user data after checkpoint, since we only
    guarantee meta data integrity for data consistency of filesystem.
    
    Due to above reason, we only need to set fs as dirty when meta data is
    updated, so that we can skip writing checkpoint in some case of non-meta
    data is updated.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

diff --git a/fs/f2fs/f2fs.h b/fs/f2fs/f2fs.h
index 0f4599099dbc..5d2db47e9929 100644
--- a/fs/f2fs/f2fs.h
+++ b/fs/f2fs/f2fs.h
@@ -1200,6 +1200,10 @@ static inline void dec_valid_block_count(struct f2fs_sb_info *sbi,
 static inline void inc_page_count(struct f2fs_sb_info *sbi, int count_type)
 {
 	percpu_counter_inc(&sbi->nr_pages[count_type]);
+
+	if (count_type == F2FS_DIRTY_DATA || count_type == F2FS_INMEM_PAGES)
+		return;
+
 	set_sbi_flag(sbi, SBI_IS_DIRTY);
 }
 

