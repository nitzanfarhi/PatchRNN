commit f1fa738e3a5530a1b6972407e138043e4dddf301
Author: Avesh Agarwal <avagarwa@redhat.com>
Date:   Wed Nov 17 10:17:00 2010 -0500

    This is related to redhat bz #646718, which is related to interop issue
    between Openswan and Racoon2 in transport mode.
    This patch has been tested by redhat QE. It specifically checks all
    received notifications to determine the presence of USE_TRANSPORT_MODE
    as there may be multiple notifications, and USE_TRANSPORT_MODE may be
    or may not be the first one.

diff --git a/programs/pluto/ikev2_child.c b/programs/pluto/ikev2_child.c
index 7d6a8e69e..4bf0ecf72 100644
--- a/programs/pluto/ikev2_child.c
+++ b/programs/pluto/ikev2_child.c
@@ -186,12 +186,17 @@ stf_status ikev2_calc_emit_ts(struct msg_digest *md
 			    , ts_r, RESPONDER);
 	}
 	else {
-		if ( md->chain[ISAKMP_NEXT_v2N] && (md->chain[ISAKMP_NEXT_v2N]->payload.v2n.isan_type == USE_TRANSPORT_MODE) ) {
+		struct payload_digest *p;
+		for(p = md->chain[ISAKMP_NEXT_v2N]; p != NULL; p = p->next)
+		{
+			if ( p->payload.v2n.isan_type == USE_TRANSPORT_MODE ) {
 			DBG_log("Received USE_TRANSPORT_MODE from the other end, next payload is USE_TRANSPORT_MODE notification");
 			ret = ikev2_emit_ts(md, outpbs, ISAKMP_NEXT_v2N
 						, ts_r, RESPONDER);
+			break;
+			}
 		}
-		else {
+		if(!p){
                         ret = ikev2_emit_ts(md, outpbs, ISAKMP_NEXT_NONE
                                                 , ts_r, RESPONDER);
 		}
@@ -506,27 +511,32 @@ stf_status ikev2_child_sa_respond(struct msg_digest *md
 
     if( role == RESPONDER ) {
 	chunk_t child_spi, notifiy_data;
-	if ( md->chain[ISAKMP_NEXT_v2N] && (md->chain[ISAKMP_NEXT_v2N]->payload.v2n.isan_type == USE_TRANSPORT_MODE) ) {
+	struct payload_digest *p;
+	for(p = md->chain[ISAKMP_NEXT_v2N]; p != NULL; p = p->next)
+	{
+	   if ( p->payload.v2n.isan_type == USE_TRANSPORT_MODE ) {
 
-	if(st1->st_connection->policy & POLICY_TUNNEL) {
+	   if(st1->st_connection->policy & POLICY_TUNNEL) {
 		DBG_log("Although local policy is tunnel, received USE_TRANSPORT_MODE");
 		DBG_log("So switching to transport mode, and responding with USE_TRANSPORT_MODE notify");
-	}
-	else {
-                DBG_log("Local policy is transport, received USE_TRANSPORT_MODE");
+	   }
+	   else {
+		DBG_log("Local policy is transport, received USE_TRANSPORT_MODE");
 		DBG_log("Now responding with USE_TRANSPORT_MODE notify");
-	}
+	   }
 
-	memset(&child_spi, 0, sizeof(child_spi));
-	memset(&notifiy_data, 0, sizeof(notifiy_data));
-	ship_v2N (ISAKMP_NEXT_NONE, ISAKMP_PAYLOAD_NONCRITICAL, /*PROTO_ISAKMP*/ 0,
+	   memset(&child_spi, 0, sizeof(child_spi));
+	   memset(&notifiy_data, 0, sizeof(notifiy_data));
+	   ship_v2N (ISAKMP_NEXT_NONE, ISAKMP_PAYLOAD_NONCRITICAL, /*PROTO_ISAKMP*/ 0,
 			&child_spi,
 			USE_TRANSPORT_MODE, &notifiy_data, outpbs);
 
-		if (st1->st_esp.present == TRUE) {
+	   if (st1->st_esp.present == TRUE) {
 		/*openswan supports only "esp" with ikev2 it seems, look at ikev2_parse_child_sa_body handling*/
 		st1->st_esp.attrs.encapsulation = ENCAPSULATION_MODE_TRANSPORT;
-                }
+	   }
+	   break;
+	   }
 	}
     }
 
diff --git a/programs/pluto/ikev2_parent.c b/programs/pluto/ikev2_parent.c
index 214463820..c7cc65c26 100644
--- a/programs/pluto/ikev2_parent.c
+++ b/programs/pluto/ikev2_parent.c
@@ -2003,8 +2003,11 @@ stf_status ikev2parent_inR2(struct msg_digest *md)
     }
 
     {
-	if ( md->chain[ISAKMP_NEXT_v2N] ) {
-	    if ( (md->chain[ISAKMP_NEXT_v2N]->payload.v2n.isan_type == USE_TRANSPORT_MODE )) {
+	struct payload_digest *p;	
+
+	for(p = md->chain[ISAKMP_NEXT_v2N]; p != NULL; p = p->next)
+	{
+	    if ( p->payload.v2n.isan_type == USE_TRANSPORT_MODE ) {
 		if ( st->st_connection->policy & POLICY_TUNNEL) {
 		/*This means we did not send USE_TRANSPORT, however responder is sending it in now (inR2), seems incorrect*/
 			DBG(DBG_CONTROLMORE,
@@ -2018,18 +2021,17 @@ stf_status ikev2parent_inR2(struct msg_digest *md)
 			st->st_esp.attrs.encapsulation = ENCAPSULATION_MODE_TRANSPORT;
 			}
 		}
+	    break;
 	    }
 	}
 
-        if ( md->chain[ISAKMP_NEXT_v2N] == NULL ||
-               !(md->chain[ISAKMP_NEXT_v2N]->payload.v2n.isan_type == USE_TRANSPORT_MODE ) ) {
+        if (!p) {
                 if ( !(st->st_connection->policy & POLICY_TUNNEL) ) {
                 /*This means we sent USE_TRANSPORT, however responder did not send it or did not agree with that*/
                         DBG(DBG_CONTROLMORE,
 			DBG_log("Initiator policy is transport, responder did not send USE_TRANSPORT_MODE, so falling back to tunnel mode (rfc 4306)"));
                 }
         }
-
     }
 
 	

