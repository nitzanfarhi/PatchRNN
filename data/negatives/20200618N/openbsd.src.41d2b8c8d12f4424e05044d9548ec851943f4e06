commit 41d2b8c8d12f4424e05044d9548ec851943f4e06
Author: deraadt <deraadt@openbsd.org>
Date:   Mon Oct 28 15:05:35 2013 +0000

    use %d instead of %i in a few fprintf for clarity

diff --git a/sbin/ifconfig/ifconfig.c b/sbin/ifconfig/ifconfig.c
index 4db1cc09f81..1e1059527f3 100644
--- a/sbin/ifconfig/ifconfig.c
+++ b/sbin/ifconfig/ifconfig.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: ifconfig.c,v 1.274 2013/10/17 16:27:39 bluhm Exp $	*/
+/*	$OpenBSD: ifconfig.c,v 1.275 2013/10/28 15:05:35 deraadt Exp $	*/
 /*	$NetBSD: ifconfig.c,v 1.40 1997/10/01 02:19:43 enami Exp $	*/
 
 /*
@@ -2792,7 +2792,7 @@ status(int link, struct sockaddr_dl *sdl, int ls)
 	printf("%s: ", name);
 	printb("flags", flags | (xflags << 16), IFFBITS);
 	if (rdomainid)
-		printf(" rdomain %i", rdomainid);
+		printf(" rdomain %d", rdomainid);
 	if (metric)
 		printf(" metric %lu", metric);
 	if (mtu)
@@ -4505,9 +4505,9 @@ in_getaddr(const char *s, int which)
 	if (which == ADDR && strrchr(s, '/') != NULL &&
 	    (bits = inet_net_pton(AF_INET, s, &tsin.sin_addr,
 	    sizeof(tsin.sin_addr))) != -1) {
-		l = snprintf(p, sizeof(p), "%i", bits);
+		l = snprintf(p, sizeof(p), "%d", bits);
 		if (l >= sizeof(p) || l == -1)
-			errx(1, "%i: bad prefixlen", bits);
+			errx(1, "%d: bad prefixlen", bits);
 		in_getprefix(p, MASK);
 		memcpy(&sin->sin_addr, &tsin.sin_addr, sizeof(sin->sin_addr));
 	} else if (inet_aton(s, &sin->sin_addr) == 0) {
diff --git a/sbin/pfctl/pfctl_parser.c b/sbin/pfctl/pfctl_parser.c
index 91267746272..3f9243fc09f 100644
--- a/sbin/pfctl/pfctl_parser.c
+++ b/sbin/pfctl/pfctl_parser.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: pfctl_parser.c,v 1.295 2013/10/12 12:16:12 henning Exp $ */
+/*	$OpenBSD: pfctl_parser.c,v 1.296 2013/10/28 15:05:35 deraadt Exp $ */
 
 /*
  * Copyright (c) 2001 Daniel Hartmeier
@@ -783,9 +783,9 @@ print_rule(struct pf_rule *r, const char *anchor_call, int opts)
 	}
 	if (r->onrdomain >= 0) {
 		if (r->ifnot)
-			printf(" on ! rdomain %i", r->onrdomain);
+			printf(" on ! rdomain %d", r->onrdomain);
 		else
-			printf(" on rdomain %i", r->onrdomain);
+			printf(" on rdomain %d", r->onrdomain);
 	}
 	if (r->af) {
 		if (r->af == AF_INET)
diff --git a/sbin/ping/ping.c b/sbin/ping/ping.c
index 13f5330524d..f116b931aa5 100644
--- a/sbin/ping/ping.c
+++ b/sbin/ping/ping.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: ping.c,v 1.95 2013/09/12 23:06:44 krw Exp $	*/
+/*	$OpenBSD: ping.c,v 1.96 2013/10/28 15:05:35 deraadt Exp $	*/
 /*	$NetBSD: ping.c,v 1.20 1995/08/11 22:37:58 cgd Exp $	*/
 
 /*
@@ -491,7 +491,7 @@ main(int argc, char *argv[])
 			err(1, "Cannot set the receive buffer size");
 	}
 	if (bufspace < IP_MAXPACKET)
-		warnx("Could only allocate a receive buffer of %i bytes (default %i)",
+		warnx("Could only allocate a receive buffer of %d bytes (default %d)",
 		    bufspace, IP_MAXPACKET);
 
 	if (to->sin_family == AF_INET)
diff --git a/sbin/route/route.c b/sbin/route/route.c
index 3134176ae15..561c45ab81d 100644
--- a/sbin/route/route.c
+++ b/sbin/route/route.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: route.c,v 1.164 2013/10/18 08:38:52 bluhm Exp $	*/
+/*	$OpenBSD: route.c,v 1.165 2013/10/28 15:05:35 deraadt Exp $	*/
 /*	$NetBSD: route.c,v 1.16 1996/04/15 18:27:05 cgd Exp $	*/
 
 /*
@@ -173,7 +173,7 @@ main(int argc, char **argv)
 	kw = keyword(*argv);
 	if (Tflag && Terr != 0 && kw != K_ADD) {
 		errno = Terr;
-		err(1, "routing table %i", tableid);
+		err(1, "routing table %d", tableid);
 	}
 	switch (kw) {
 	case K_EXEC:

