commit c5887baa3e21e28ac9eb72b7f3a00f2a043998e9
Author: Jean Le Feuvre <jeanlf@users.sourceforge.net>
Date:   Thu Oct 15 16:19:21 2009 +0000

    Fixed bug in amr init
    
    
    git-svn-id: http://svn.code.sf.net/p/gpac/code/trunk/gpac@1474 63c20433-aa62-49bd-875c-5a186b69a8fb

diff --git a/modules/amr_float_dec/amr_float_dec.c b/modules/amr_float_dec/amr_float_dec.c
index fe4574a2a..3a3ee383f 100644
--- a/modules/amr_float_dec/amr_float_dec.c
+++ b/modules/amr_float_dec/amr_float_dec.c
@@ -63,7 +63,7 @@ static GF_Err AMR_AttachStream(GF_BaseDecoder *ifcg, GF_ESD *esd)
 	GF_BitStream *bs;
 	u32 packed;
 	AMRFTCTX();
-	if (esd->decoderConfig || !esd->decoderConfig->decoderSpecificInfo) return GF_NOT_SUPPORTED;	
+	if (esd->dependsOnESID || !esd->decoderConfig->decoderSpecificInfo) return GF_NOT_SUPPORTED;	
 
 	/*AMRWB dec is another module*/
 	if (!strnicmp(esd->decoderConfig->decoderSpecificInfo->data, "sawb", 4)) ctx->is_amr_wb = 1;
@@ -73,9 +73,9 @@ static GF_Err AMR_AttachStream(GF_BaseDecoder *ifcg, GF_ESD *esd)
 
 	bs = gf_bs_new(esd->decoderConfig->decoderSpecificInfo->data, esd->decoderConfig->decoderSpecificInfo->dataLength, GF_BITSTREAM_READ);
 	gf_bs_read_u32(bs);
+	gf_bs_read_u32(bs);
+	ctx->num_channels = gf_bs_read_u16(bs);
 	gf_bs_read_u16(bs);
-	gf_bs_read_u16(bs);
-	ctx->num_channels = gf_bs_read_u8(bs);
 	gf_bs_read_u8(bs);
 	packed = gf_bs_read_u8(bs);
 	gf_bs_del(bs);

