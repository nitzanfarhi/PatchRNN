commit 6a4e24518c8a10f78f44da219835239cb5aca90d
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jul 13 17:16:03 2016 +0000

    cpu/hotplug: Handle early registration gracefully
    
    We switched the hotplug machinery to smpboot threads. Early registration of
    hotplug callbacks, i.e. from do_pre_smp_initcalls(), happens before the
    threads are initialized. Instead of moving the thread init, we simply handle
    it in the hotplug code itself and invoke the function directly.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: rt@linutronix.de
    Link: http://lkml.kernel.org/r/20160713153332.896450738@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/kernel/cpu.c b/kernel/cpu.c
index 7b61887f7ccd..fe71ce4e60f1 100644
--- a/kernel/cpu.c
+++ b/kernel/cpu.c
@@ -517,6 +517,13 @@ static int cpuhp_invoke_ap_callback(int cpu, enum cpuhp_state state,
 	if (!cpu_online(cpu))
 		return 0;
 
+	/*
+	 * If we are up and running, use the hotplug thread. For early calls
+	 * we invoke the thread function directly.
+	 */
+	if (!st->thread)
+		return cpuhp_invoke_callback(cpu, state, cb);
+
 	st->cb_state = state;
 	st->cb = cb;
 	/*

