commit 603a9e0243205b04f48713169c74cdda5079677f
Author: provos <provos@openbsd.org>
Date:   Wed Jun 27 01:57:17 2001 +0000

    KNF

diff --git a/sys/net/if_enc.c b/sys/net/if_enc.c
index 228cb18e222..0b93ec01583 100644
--- a/sys/net/if_enc.c
+++ b/sys/net/if_enc.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: if_enc.c,v 1.35 2001/06/25 05:14:00 angelos Exp $	*/
+/*	$OpenBSD: if_enc.c,v 1.36 2001/06/27 02:00:30 provos Exp $	*/
 /*
  * The authors of this code are John Ioannidis (ji@tla.org),
  * Angelos D. Keromytis (kermit@csd.uch.gr) and 
@@ -153,7 +153,7 @@ struct sockaddr *dst;
 register struct rtentry *rt;
 {
     m_freem(m);
-    return 0;
+    return (0);
 }
 
 /* ARGSUSED */
@@ -187,7 +187,7 @@ caddr_t data;
 	    break;
 
 	default:
-	    return EINVAL;
+	    return (EINVAL);
     }
 
     return 0;
diff --git a/sys/net/if_pflog.c b/sys/net/if_pflog.c
index e3fa20367be..b2a2dc4a65e 100644
--- a/sys/net/if_pflog.c
+++ b/sys/net/if_pflog.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: if_pflog.c,v 1.3 2001/06/25 23:02:18 provos Exp $	*/
+/*	$OpenBSD: if_pflog.c,v 1.4 2001/06/27 01:58:03 provos Exp $	*/
 /*
  * The authors of this code are John Ioannidis (ji@tla.org),
  * Angelos D. Keromytis (kermit@csd.uch.gr) and 
@@ -138,7 +138,7 @@ pflogoutput(struct ifnet *ifp, struct mbuf *m, struct sockaddr *dst,
 	struct rtentry *rt)
 {
 	m_freem(m);
-	return 0;
+	return (0);
 }
 
 /* ARGSUSED */
@@ -164,7 +164,7 @@ pflogioctl(struct ifnet *ifp, u_long cmd, caddr_t data)
 			ifp->if_flags &= ~IFF_RUNNING;
 		break;
 	default:
-		return EINVAL;
+		return (EINVAL);
 	}
 
 	return (0);
diff --git a/sys/net/pf.c b/sys/net/pf.c
index 75755b9e079..9ee7f9d3ae6 100644
--- a/sys/net/pf.c
+++ b/sys/net/pf.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: pf.c,v 1.67 2001/06/27 01:55:54 provos Exp $ */
+/*	$OpenBSD: pf.c,v 1.68 2001/06/27 01:57:17 provos Exp $ */
 
 /*
  * Copyright (c) 2001, Daniel Hartmeier
@@ -1915,7 +1915,7 @@ pf_test_state_icmp(int direction, struct ifnet *ifp, struct mbuf *m,
 			    &h2, NULL, NULL)) {
 				printf("pf: "
 				    "ICMP error message too short\n");
-				return NULL;
+				return (NULL);
 			}
 			seq = ntohl(th.th_seq);
 			end = seq + h2.ip_len - ((h2.ip_hl + th.th_off)<<2) +
@@ -1993,7 +1993,7 @@ pf_test_state_icmp(int direction, struct ifnet *ifp, struct mbuf *m,
 			if (!pull_hdr(ifp, m, ipoff2, off2, &uh, sizeof(uh),
 			    &h2, NULL, NULL)) {
 				printf("pf: ICMP error message too short\n");
-				return NULL;
+				return (NULL);
 			}
 
 			key.proto   = IPPROTO_UDP;
@@ -2063,7 +2063,7 @@ pull_hdr(struct ifnet *ifp, struct mbuf *m, int ipoff, int off, void *p,
 	if (ipoff > off) {
 		ACTION_SET(actionp, PF_DROP);
 		REASON_SET(reasonp, PFRES_BADOFF);
-		return NULL;
+		return (NULL);
 	}
 	if (fragoff) {
 		if (fragoff >= len)

