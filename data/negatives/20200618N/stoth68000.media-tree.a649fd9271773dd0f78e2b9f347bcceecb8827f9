commit a649fd9271773dd0f78e2b9f347bcceecb8827f9
Author: Andrew Morton <akpm@osdl.org>
Date:   Tue Oct 17 00:09:36 2006 -0700

    [PATCH] invalidate: remove_mapping() fix
    
    If remove_mapping() failed to remove the page from its mapping, don't go and
    mark it not uptodate!  Makes kernel go dead.
    
    (Actually, I don't think the ClearPageUptodate is needed there at all).
    
    Says Nick Piggin:
    
       "Right, it isn't needed because at this point the page is guaranteed
        by remove_mapping to have no references (except us) and cannot pick
        up any new ones because it is removed from pagecache.
    
        We can delete it."
    
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Acked-by: Nick Piggin <nickpiggin@yahoo.com.au>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/mm/truncate.c b/mm/truncate.c
index 11ca480701dd..e07b1e682c38 100644
--- a/mm/truncate.c
+++ b/mm/truncate.c
@@ -96,7 +96,6 @@ invalidate_complete_page(struct address_space *mapping, struct page *page)
 		return 0;
 
 	ret = remove_mapping(mapping, page);
-	ClearPageUptodate(page);
 
 	return ret;
 }
diff --git a/mm/vmscan.c b/mm/vmscan.c
index eca70310adb2..af73c14f9d88 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -378,6 +378,12 @@ static pageout_t pageout(struct page *page, struct address_space *mapping)
 	return PAGE_CLEAN;
 }
 
+/*
+ * Attempt to detach a locked page from its ->mapping.  If it is dirty or if
+ * someone else has a ref on the page, abort and return 0.  If it was
+ * successfully detached, return 1.  Assumes the caller has a single ref on
+ * this page.
+ */
 int remove_mapping(struct address_space *mapping, struct page *page)
 {
 	BUG_ON(!PageLocked(page));

