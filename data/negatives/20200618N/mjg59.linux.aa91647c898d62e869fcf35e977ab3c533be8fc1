commit aa91647c898d62e869fcf35e977ab3c533be8fc1
Author: Sage Weil <sage@newdream.net>
Date:   Mon May 24 11:15:51 2010 -0700

    ceph: make mds requests killable, not interruptible
    
    The underlying problem is that many mds requests can't be restarted.  For
    example, a restarted create() would return -EEXIST if the original request
    succeeds.  However, we do not want a hung MDS to hang the client too.  So,
    use the _killable wait_for_completion variants to abort on SIGKILL but
    nothing else.
    
    Signed-off-by: Sage Weil <sage@newdream.net>

diff --git a/fs/ceph/mds_client.c b/fs/ceph/mds_client.c
index 885aa5710cfd..08413c8a85b2 100644
--- a/fs/ceph/mds_client.c
+++ b/fs/ceph/mds_client.c
@@ -1768,12 +1768,12 @@ int ceph_mdsc_do_request(struct ceph_mds_client *mdsc,
 	mutex_unlock(&mdsc->mutex);
 	dout("do_request waiting\n");
 	if (req->r_timeout) {
-		err = (long)wait_for_completion_interruptible_timeout(
+		err = (long)wait_for_completion_killable_timeout(
 			&req->r_completion, req->r_timeout);
 		if (err == 0)
 			err = -EIO;
 	} else {
-		err = wait_for_completion_interruptible(&req->r_completion);
+		err = wait_for_completion_killable(&req->r_completion);
 	}
 	dout("do_request waited, got %d\n", err);
 	mutex_lock(&mdsc->mutex);

