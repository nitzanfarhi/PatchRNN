commit 1a89e6364b0168800fcd0c925b408543950f16c0
Author: Alex RÃ¸nne Petersen <alexrp@xamarin.com>
Date:   Mon Apr 27 16:18:11 2015 +0200

    [runtime] Remove some unused functions.

diff --git a/mono/metadata/threads.c b/mono/metadata/threads.c
index cd566a826d0..e37b1c27448 100644
--- a/mono/metadata/threads.c
+++ b/mono/metadata/threads.c
@@ -3097,24 +3097,6 @@ void mono_thread_suspend_all_other_threads (void)
 	}
 }
 
-static void
-collect_threads (gpointer key, gpointer value, gpointer user_data)
-{
-	MonoInternalThread *thread = (MonoInternalThread*)value;
-	struct wait_data *wait = (struct wait_data*)user_data;
-	HANDLE handle;
-
-	if (wait->num<MAXIMUM_WAIT_OBJECTS) {
-		handle = mono_threads_open_thread_handle (thread->handle, (MonoNativeThreadId)thread->tid);
-		if (handle == NULL)
-			return;
-
-		wait->handles [wait->num] = handle;
-		wait->threads [wait->num] = thread;
-		wait->num++;
-	}
-}
-
 static gboolean thread_dump_requested;
 
 static G_GNUC_UNUSED gboolean
diff --git a/mono/mini/method-to-ir.c b/mono/mini/method-to-ir.c
index 20670f1bae5..f57289fbb81 100755
--- a/mono/mini/method-to-ir.c
+++ b/mono/mini/method-to-ir.c
@@ -1543,25 +1543,6 @@ handle_stack_args (MonoCompile *cfg, MonoInst **sp, int count)
 	}
 }
 
-/* Emit code which loads interface_offsets [klass->interface_id]
- * The array is stored in memory before vtable.
-*/
-static void
-mini_emit_load_intf_reg_vtable (MonoCompile *cfg, int intf_reg, int vtable_reg, MonoClass *klass)
-{
-	if (cfg->compile_aot) {
-		int ioffset_reg = alloc_preg (cfg);
-		int iid_reg = alloc_preg (cfg);
-
-		MONO_EMIT_NEW_AOTCONST (cfg, iid_reg, klass, MONO_PATCH_INFO_ADJUSTED_IID);
-		MONO_EMIT_NEW_BIALU (cfg, OP_PADD, ioffset_reg, iid_reg, vtable_reg);
-		MONO_EMIT_NEW_LOAD_MEMBASE (cfg, intf_reg, ioffset_reg, 0);
-	}
-	else {
-		MONO_EMIT_NEW_LOAD_MEMBASE (cfg, intf_reg, vtable_reg, -((klass->interface_id + 1) * SIZEOF_VOID_P));
-	}
-}
-
 static void
 mini_emit_interface_bitmap_check (MonoCompile *cfg, int intf_bit_reg, int base_reg, int offset, MonoClass *klass)
 {

