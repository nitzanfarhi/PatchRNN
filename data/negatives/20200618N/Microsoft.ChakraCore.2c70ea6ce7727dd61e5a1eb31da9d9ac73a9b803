commit 2c70ea6ce7727dd61e5a1eb31da9d9ac73a9b803
Author: Michael Ferris <micfer@microsoft.com>
Date:   Fri Jan 27 12:48:24 2017 -0800

    Handle case when growing memory of 0 bytes

diff --git a/lib/Runtime/Library/ArrayBuffer.cpp b/lib/Runtime/Library/ArrayBuffer.cpp
index d1271a5ea..e778de3dd 100644
--- a/lib/Runtime/Library/ArrayBuffer.cpp
+++ b/lib/Runtime/Library/ArrayBuffer.cpp
@@ -865,6 +865,10 @@ namespace Js
 
     ArrayBuffer * WebAssemblyArrayBuffer::TransferInternal(uint32 newBufferLength)
     {
+        if (newBufferLength == this->bufferLength)
+        {
+            return this;
+        }
 #if ENABLE_FAST_ARRAYBUFFER
         ReportDifferentialAllocation(newBufferLength);
         Assert(this->buffer);
diff --git a/lib/Runtime/Library/WebAssemblyMemory.cpp b/lib/Runtime/Library/WebAssemblyMemory.cpp
index 6b0cd1c89..8f6300f60 100644
--- a/lib/Runtime/Library/WebAssemblyMemory.cpp
+++ b/lib/Runtime/Library/WebAssemblyMemory.cpp
@@ -133,6 +133,11 @@ WebAssemblyMemory::GrowInternal(uint32 deltaPages)
     const uint32 oldPageCount = oldBytes / WebAssembly::PageSize;
     Assert(oldBytes % WebAssembly::PageSize == 0);
 
+    if (deltaBytes == 0)
+    {
+        return (int32)oldPageCount;
+    }
+
     const uint32 newPageCount = oldPageCount + deltaPages;
     if (newPageCount > m_maximum)
     {

