commit 907565337ebf998a68cb5c5b2174ce5e5da065eb
Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date:   Thu Nov 3 10:29:28 2016 -0600

    Fix: Disable sys_membarrier when nohz_full is enabled
    
    Userspace applications should be allowed to expect the membarrier system
    call with MEMBARRIER_CMD_SHARED command to issue memory barriers on
    nohz_full CPUs, but synchronize_sched() does not take those into
    account.
    
    Given that we do not want unrelated processes to be able to affect
    real-time sensitive nohz_full CPUs, simply return ENOSYS when membarrier
    is invoked on a kernel with enabled nohz_full CPUs.
    
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    CC: Josh Triplett <josh@joshtriplett.org>
    CC: Steven Rostedt <rostedt@goodmis.org>
    CC: <stable@vger.kernel.org>    [3.10+]
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Rik van Riel <riel@redhat.com>
    Acked-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Reviewed-by: Josh Triplett <josh@joshtriplett.org>

diff --git a/kernel/membarrier.c b/kernel/membarrier.c
index 536c727a56e9..9f9284f37f8d 100644
--- a/kernel/membarrier.c
+++ b/kernel/membarrier.c
@@ -16,6 +16,7 @@
 
 #include <linux/syscalls.h>
 #include <linux/membarrier.h>
+#include <linux/tick.h>
 
 /*
  * Bitmask made from a "or" of all commands within enum membarrier_cmd,
@@ -51,6 +52,9 @@
  */
 SYSCALL_DEFINE2(membarrier, int, cmd, int, flags)
 {
+	/* MEMBARRIER_CMD_SHARED is not compatible with nohz_full. */
+	if (tick_nohz_full_enabled())
+		return -ENOSYS;
 	if (unlikely(flags))
 		return -EINVAL;
 	switch (cmd) {

