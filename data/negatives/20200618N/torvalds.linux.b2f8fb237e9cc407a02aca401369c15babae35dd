commit b2f8fb237e9cc407a02aca401369c15babae35dd
Author: Dr. David Alan Gilbert <david.gilbert@linaro.org>
Date:   Fri Jan 21 16:40:19 2011 +0000

    perf symbols: Fix annotation of thumb code
    
    In ARM's Thumb mode the bottom bit of the symbol address is set to mark
    the function as Thumb; the instructions are in reality 2 or 4 byte on 2
    byte alignments, and when the +1 address is used in annotate it causes
    objdump to disassemble invalid instructions.
    
    The patch removes that bottom bit during symbol loading.
    
    Many thinks to Dave Martin for comments on an initial version of the
    patch.
    
    (For reference this corresponds to this bug
    https://bugs.launchpad.net/linux-linaro/+bug/677547 )
    
    Cc: Ingo Molnar <mingo@elte.hu>
    Cc: Dave Martin <dave.martin@linaro.org>
    LKML-Reference: <20110121163922.GA31398@davesworkthinkpad>
    Signed-off-by: Dr. David Alan Gilbert <david.gilbert@linaro.org>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/util/symbol.c b/tools/perf/util/symbol.c
index 15ccfba8cdf8..e32478effed8 100644
--- a/tools/perf/util/symbol.c
+++ b/tools/perf/util/symbol.c
@@ -1161,6 +1161,13 @@ static int dso__load_sym(struct dso *self, struct map *map, const char *name,
 
 		section_name = elf_sec__name(&shdr, secstrs);
 
+		/* On ARM, symbols for thumb functions have 1 added to
+		 * the symbol address as a flag - remove it */
+		if ((ehdr.e_machine == EM_ARM) &&
+		    (map->type == MAP__FUNCTION) &&
+		    (sym.st_value & 1))
+			--sym.st_value;
+
 		if (self->kernel != DSO_TYPE_USER || kmodule) {
 			char dso_name[PATH_MAX];
 

