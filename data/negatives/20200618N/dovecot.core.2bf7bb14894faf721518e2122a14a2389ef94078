commit 2bf7bb14894faf721518e2122a14a2389ef94078
Author: Timo Sirainen <tss@iki.fi>
Date:   Sat Jul 23 11:21:51 2005 +0300

    Error handling fix, more debugging and a new assert
    
    --HG--
    branch : HEAD

diff --git a/src/lib-storage/index/mbox/mbox-sync.c b/src/lib-storage/index/mbox/mbox-sync.c
index cd09ba000..922d18e9e 100644
--- a/src/lib-storage/index/mbox/mbox-sync.c
+++ b/src/lib-storage/index/mbox/mbox-sync.c
@@ -257,6 +257,7 @@ mbox_sync_read_index_rec(struct mbox_sync_context *sync_ctx,
 			mail_storage_set_index_error(&sync_ctx->mbox->ibox);
 			return -1;
 		}
+		i_assert(ret != 0); /* we should be looking at head index */
 
 		if (uid <= rec->uid)
 			break;
@@ -267,18 +268,20 @@ mbox_sync_read_index_rec(struct mbox_sync_context *sync_ctx,
 		rec = NULL;
 	}
 
-	if (ret == 0 && uid < sync_ctx->idx_next_uid) {
+	if (rec == NULL && uid < sync_ctx->idx_next_uid) {
 		/* this UID was already in index and it was expunged */
 		mail_storage_set_critical(STORAGE(sync_ctx->mbox->storage),
 			"mbox sync: Expunged message reappeared in mailbox %s "
-			"(UID %u < %u)", sync_ctx->mbox->path, uid,
-			sync_ctx->idx_next_uid);
+			"(UID %u < %u, seq=%u, idx_msgs=%u)",
+			sync_ctx->mbox->path, uid, sync_ctx->idx_next_uid,
+			sync_ctx->seq, messages_count);
 		ret = 0; rec = NULL;
 	} else if (rec != NULL && rec->uid != uid) {
 		/* new UID in the middle of the mailbox - shouldn't happen */
 		mail_storage_set_critical(STORAGE(sync_ctx->mbox->storage),
 			"mbox sync: UID inserted in the middle of mailbox %s "
-			"(%u > %u)", sync_ctx->mbox->path, rec->uid, uid);
+			"(%u > %u, seq=%u, idx_msgs=%u)", sync_ctx->mbox->path,
+			rec->uid, uid, sync_ctx->seq, messages_count);
 		ret = 0; rec = NULL;
 	} else {
 		ret = 1;

