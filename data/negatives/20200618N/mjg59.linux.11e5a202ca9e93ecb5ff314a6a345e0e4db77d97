commit 11e5a202ca9e93ecb5ff314a6a345e0e4db77d97
Author: Stephen Hemminger <shemminger@osdl.org>
Date:   Fri Dec 1 16:36:13 2006 -0800

    [PATCH] chelsio: whitespace fixes
    
    Fix indentation and blank/tab issues.
    
    Signed-off-by: Stephen Hemminger <shemminger@osdl.org>
    Signed-off-by: Jeff Garzik <jeff@garzik.org>

diff --git a/drivers/net/chelsio/cxgb2.c b/drivers/net/chelsio/cxgb2.c
index 37037e5890e1..1d78d5d4b1a7 100644
--- a/drivers/net/chelsio/cxgb2.c
+++ b/drivers/net/chelsio/cxgb2.c
@@ -729,7 +729,7 @@ static int get_coalesce(struct net_device *dev, struct ethtool_coalesce *c)
 
 static int get_eeprom_len(struct net_device *dev)
 {
-    return EEPROM_SIZE;
+	return EEPROM_SIZE;
 }
 
 #define EEPROM_MAGIC(ap) \
diff --git a/drivers/net/chelsio/espi.c b/drivers/net/chelsio/espi.c
index 542e5e065c6f..40af47b795e6 100644
--- a/drivers/net/chelsio/espi.c
+++ b/drivers/net/chelsio/espi.c
@@ -192,7 +192,7 @@ int t1_espi_intr_handler(struct peespi *espi)
 
 const struct espi_intr_counts *t1_espi_get_intr_counts(struct peespi *espi)
 {
-    return &espi->intr_cnt;
+	return &espi->intr_cnt;
 }
 
 static void espi_setup_for_pm3393(adapter_t *adapter)
diff --git a/drivers/net/chelsio/pm3393.c b/drivers/net/chelsio/pm3393.c
index 04a1404fc65e..b442b585b4b1 100644
--- a/drivers/net/chelsio/pm3393.c
+++ b/drivers/net/chelsio/pm3393.c
@@ -46,17 +46,17 @@
 /* 802.3ae 10Gb/s MDIO Manageable Device(MMD)
  */
 enum {
-    MMD_RESERVED,
-    MMD_PMAPMD,
-    MMD_WIS,
-    MMD_PCS,
-    MMD_PHY_XGXS,	/* XGMII Extender Sublayer */
-    MMD_DTE_XGXS,
+	MMD_RESERVED,
+	MMD_PMAPMD,
+	MMD_WIS,
+	MMD_PCS,
+	MMD_PHY_XGXS,	/* XGMII Extender Sublayer */
+	MMD_DTE_XGXS,
 };
 
 enum {
-    PHY_XGXS_CTRL_1,
-    PHY_XGXS_STATUS_1
+	PHY_XGXS_CTRL_1,
+	PHY_XGXS_STATUS_1
 };
 
 #define OFFSET(REG_ADDR)    (REG_ADDR << 2)
diff --git a/drivers/net/chelsio/subr.c b/drivers/net/chelsio/subr.c
index 12e4e96dba2d..e4473ec43d26 100644
--- a/drivers/net/chelsio/subr.c
+++ b/drivers/net/chelsio/subr.c
@@ -166,11 +166,11 @@ static int t1_pci_intr_handler(adapter_t *adapter)
 {
 	u32 pcix_cause;
 
-    	pci_read_config_dword(adapter->pdev, A_PCICFG_INTR_CAUSE, &pcix_cause);
+	pci_read_config_dword(adapter->pdev, A_PCICFG_INTR_CAUSE, &pcix_cause);
 
 	if (pcix_cause) {
 		pci_write_config_dword(adapter->pdev, A_PCICFG_INTR_CAUSE,
-					 pcix_cause);
+				       pcix_cause);
 		t1_fatal_err(adapter);    /* PCI errors are fatal */
 	}
 	return 0;
@@ -420,9 +420,9 @@ int t1_link_start(struct cphy *phy, struct cmac *mac, struct link_config *lc)
  */
 int elmer0_ext_intr_handler(adapter_t *adapter)
 {
-    	struct cphy *phy;
+	struct cphy *phy;
 	int phy_cause;
-    	u32 cause;
+	u32 cause;
 
 	t1_tpi_read(adapter, A_ELMER0_INT_CAUSE, &cause);
 
@@ -515,7 +515,7 @@ void t1_interrupts_clear(adapter_t* adapter)
 	}
 
 	/* Enable interrupts for external devices. */
-    	pl_intr = readl(adapter->regs + A_PL_CAUSE);
+	pl_intr = readl(adapter->regs + A_PL_CAUSE);
 
 	writel(pl_intr | F_PL_INTR_EXT | F_PL_INTR_PCIX,
 	       adapter->regs + A_PL_CAUSE);
@@ -643,7 +643,7 @@ static int board_init(adapter_t *adapter, const struct board_info *bi)
 	case CHBT_BOARD_N110:
 	case CHBT_BOARD_N210:
 		writel(V_TPIPAR(0xf), adapter->regs + A_TPI_PAR);
-    		t1_tpi_write(adapter, A_ELMER0_GPO, 0x800);
+		t1_tpi_write(adapter, A_ELMER0_GPO, 0x800);
 		break;
 	}
 	return 0;

