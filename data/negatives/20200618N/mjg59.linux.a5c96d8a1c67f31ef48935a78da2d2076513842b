commit a5c96d8a1c67f31ef48935a78da2d2076513842b
Author: Linus Torvalds <torvalds@woody.linux-foundation.org>
Date:   Thu Jul 19 13:17:15 2007 -0700

    Fix up non-NUMA SLAB configuration for zero-sized allocations
    
    I suspect Christoph tested his code only in the NUMA configuration, for
    the combination of SLAB+non-NUMA the zero-sized kmalloc's would not work.
    
    Of course, this would only trigger in configurations where those zero-
    sized allocations happen (not very common), so that may explain why it
    wasn't more widely noticed.
    
    Seen by by Andi Kleen under qemu, and there seems to be a report by
    Michael Tsirkin on it too.
    
    Cc: Andi Kleen <ak@suse.de>
    Cc: Roland Dreier <rdreier@cisco.com>
    Cc: Michael S. Tsirkin <mst@dev.mellanox.co.il>
    Cc: Pekka Enberg <penberg@cs.helsinki.fi>
    Cc: Christoph Lameter <clameter@sgi.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/slab.c b/mm/slab.c
index 88bc6336ce3d..c3feeaab3875 100644
--- a/mm/slab.c
+++ b/mm/slab.c
@@ -3690,8 +3690,8 @@ static __always_inline void *__do_kmalloc(size_t size, gfp_t flags,
 	 * functions.
 	 */
 	cachep = __find_general_cachep(size, flags);
-	if (unlikely(cachep == NULL))
-		return NULL;
+	if (unlikely(ZERO_OR_NULL_PTR(cachep)))
+		return cachep;
 	return __cache_alloc(cachep, flags, caller);
 }
 

