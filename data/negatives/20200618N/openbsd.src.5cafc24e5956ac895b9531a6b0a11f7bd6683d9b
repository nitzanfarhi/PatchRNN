commit 5cafc24e5956ac895b9531a6b0a11f7bd6683d9b
Author: cloder <cloder@openbsd.org>
Date:   Fri Apr 22 03:27:28 2005 +0000

    snprintf cleanup. OK deraadt@, moritz@

diff --git a/usr.sbin/ppp/ppp/alias_irc.c b/usr.sbin/ppp/ppp/alias_irc.c
index f0a29eef751..868033d563a 100644
--- a/usr.sbin/ppp/ppp/alias_irc.c
+++ b/usr.sbin/ppp/ppp/alias_irc.c
@@ -23,7 +23,7 @@
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  *
- * $OpenBSD: alias_irc.c,v 1.11 2002/06/15 08:01:59 brian Exp $
+ * $OpenBSD: alias_irc.c,v 1.12 2005/04/22 03:27:28 cloder Exp $
  */
 
 /* Alias_irc.c intercepts packages contain IRC CTCP commands, and
@@ -279,7 +279,12 @@ lFOUND_CTCP:
 					 DBprintf(("DCC packet construct failure.\n"));
 					 goto lBAD_CTCP;
 				 }
-				 iCopy += n;
+
+				 if ((iCopy += n) >= sizeof(newpacket)) {
+					 DBprintf(("DCC construct packet too long.\n"));
+					 goto lBAD_CTCP;
+				 }
+
 				 /* Done - truncated cases will be taken care of by lBAD_CTCP */
 				 DBprintf(("Aliased IP %lu and port %u\n", alias_address.s_addr, (unsigned)alias_port));
 			 }
diff --git a/usr.sbin/ppp/ppp/mp.c b/usr.sbin/ppp/ppp/mp.c
index deed2b4d766..097f4ace46b 100644
--- a/usr.sbin/ppp/ppp/mp.c
+++ b/usr.sbin/ppp/ppp/mp.c
@@ -23,7 +23,7 @@
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  *
- *	$OpenBSD: mp.c,v 1.32 2003/04/07 23:58:53 deraadt Exp $
+ *	$OpenBSD: mp.c,v 1.33 2005/04/22 03:27:28 cloder Exp $
  */
 
 #include <sys/param.h>
@@ -1117,7 +1117,7 @@ mpserver_Init(struct mpserver *s)
 int
 mpserver_Open(struct mpserver *s, struct peerid *peer)
 {
-  int f, l;
+  int f, l, n;
   mode_t mask;
 
   if (s->fd != -1) {
@@ -1132,10 +1132,19 @@ mpserver_Open(struct mpserver *s, struct peerid *peer)
     return MPSERVER_FAILED;
   }
 
+  if (l >= sizeof s->socket.sun_path) {
+    log_Printf(LogERROR, "mpserver: snprintf() not enough room in buffer");
+    return MPSERVER_FAILED;
+  }
+
   for (f = 0; f < peer->enddisc.len && l < sizeof s->socket.sun_path - 2; f++) {
-    snprintf(s->socket.sun_path + l, sizeof s->socket.sun_path - l,
+    n = snprintf(s->socket.sun_path + l, sizeof s->socket.sun_path - l,
              "%02x", *(u_char *)(peer->enddisc.address+f));
-    l += 2;
+    if (n < 0 || n >= (sizeof s->socket.sun_path - l)) {
+      log_Printf(LogERROR, "mpserver: snprintf() not enough room in buffer");
+      return MPSERVER_FAILED;
+    }
+    l += n;
   }
 
   s->socket.sun_family = AF_LOCAL;

