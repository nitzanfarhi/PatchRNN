commit 70a7cb3b39994ff366ff100b46f9dc97b1510c0f
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Jul 22 14:04:13 2010 -0300

    perf annotate: Fix handling of goto labels that are valid hex numbers
    
    When parsing the objdump disassembly output we can have goto labels that
    are valid hex numbers and thus get confused with lines with machine
    code.
    
    Handle the common case of a label that has nothing after it and other
    cases where there is just source code by validating the resulting "ip".
    
    It is still possible that we find goto labels that are in the function
    address range, but only if they are located before the real address we
    should be OK.
    
    A change in the objdump output to have a clear marker separating
    addresses from the disassembly would come handy, but we would still have
    to deal with older versions.
    
    Reported-by: Gleb Natapov <gleb@redhat.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Gleb Natapov <gleb@redhat.com>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    LKML-Reference: <20100722170541.GF17631@ghostprotocols.net>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/util/hist.c b/tools/perf/util/hist.c
index 699cf81ea082..784ee0bdda77 100644
--- a/tools/perf/util/hist.c
+++ b/tools/perf/util/hist.c
@@ -976,13 +976,17 @@ static int hist_entry__parse_objdump_line(struct hist_entry *self, FILE *file,
 		 * Parse hexa addresses followed by ':'
 		 */
 		line_ip = strtoull(tmp, &tmp2, 16);
-		if (*tmp2 != ':' || tmp == tmp2)
+		if (*tmp2 != ':' || tmp == tmp2 || tmp2[1] == '\0')
 			line_ip = -1;
 	}
 
 	if (line_ip != -1) {
-		u64 start = map__rip_2objdump(self->ms.map, sym->start);
+		u64 start = map__rip_2objdump(self->ms.map, sym->start),
+		    end = map__rip_2objdump(self->ms.map, sym->end);
+
 		offset = line_ip - start;
+		if (offset < 0 || (u64)line_ip > end)
+			offset = -1;
 	}
 
 	objdump_line = objdump_line__new(offset, line);

