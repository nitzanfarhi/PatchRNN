commit 1152e9c84b47be5f41ed491803e0fb154ab14fed
Author: csapuntz <csapuntz@openbsd.org>
Date:   Sun Mar 25 18:09:17 2001 +0000

    Reintroduce wakeup call

diff --git a/sys/kern/kern_synch.c b/sys/kern/kern_synch.c
index 306c72eac95..a4da4c13539 100644
--- a/sys/kern/kern_synch.c
+++ b/sys/kern/kern_synch.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: kern_synch.c,v 1.32 2001/03/15 21:18:30 art Exp $	*/
+/*	$OpenBSD: kern_synch.c,v 1.33 2001/03/25 18:09:17 csapuntz Exp $	*/
 /*	$NetBSD: kern_synch.c,v 1.37 1996/04/22 01:38:37 christos Exp $	*/
 
 /*-
@@ -620,6 +620,13 @@ restart:
 	splx(s);
 }
 
+void
+wakeup(chan)
+	void *chan;
+{
+	wakeup_n(chan, -1);
+}
+
 /*
  * General yield call.  Puts the current process back on its run queue and
  * performs a voluntary context switch.
diff --git a/sys/sys/proc.h b/sys/sys/proc.h
index 2b8b5293b81..c3c8f6b0e45 100644
--- a/sys/sys/proc.h
+++ b/sys/sys/proc.h
@@ -1,4 +1,4 @@
-/*	$OpenBSD: proc.h,v 1.38 2001/03/23 18:42:06 art Exp $	*/
+/*	$OpenBSD: proc.h,v 1.39 2001/03/25 18:09:18 csapuntz Exp $	*/
 /*	$NetBSD: proc.h,v 1.44 1996/04/22 01:23:21 christos Exp $	*/
 
 /*-
@@ -375,7 +375,7 @@ void	swapin __P((struct proc *));
 int	tsleep __P((void *chan, int pri, char *wmesg, int timo));
 void	unsleep __P((struct proc *));
 void    wakeup_n __P((void *chan, int));
-#define wakeup(c)  wakeup_n((c), -1)
+void    wakeup __P((void *chan));
 #define wakeup_one(c) wakeup_n((c), 1)
 void	reaper __P((void));
 void	exit1 __P((struct proc *, int));

