commit 25f7fd470bc97bb93d3a674e8c56c4a29063ec97
Author: NeilBrown <neilb@suse.de>
Date:   Thu Jul 19 15:59:18 2012 +1000

    md: fix bug in handling of new_data_offset
    
    commit c6563a8c38fde3c1c7fc925a10bde3ca20799301
        md: add possibility to change data-offset for devices.
    
    introduced a 'new_data_offset' attribute which should normally
    be the same as 'data_offset', but can be explicitly set to a different
    value to allow a reshape operation to move the data.
    
    Unfortunately when the 'data_offset' is explicitly set through
    sysfs, the new_data_offset is not also set, so the two would become
    out-of-sync incorrectly.
    
    One result of this is that trying to set the 'size' after the
    'data_offset' would fail because it is not permitted to set the size
    when the 'data_offset' and 'new_data_offset' are different - as that
    can be confusing.
    Consequently when mdadm tried to do this while assembling an IMSM
    array it would fail.
    
    This bug was introduced in 3.5-rc1.
    
    Reported-by: Brian Downing <bdowning@lavos.net>
    Bisected-by: Brian Downing <bdowning@lavos.net>
    Tested-by: Brian Downing <bdowning@lavos.net>
    Signed-off-by: NeilBrown <neilb@suse.de>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index a4c219e3c859..0c1fe4cbce6b 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -2931,6 +2931,7 @@ offset_store(struct md_rdev *rdev, const char *buf, size_t len)
 		 * can be sane */
 		return -EBUSY;
 	rdev->data_offset = offset;
+	rdev->new_data_offset = offset;
 	return len;
 }
 

