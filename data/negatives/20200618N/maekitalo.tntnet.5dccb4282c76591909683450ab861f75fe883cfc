commit 5dccb4282c76591909683450ab861f75fe883cfc
Author: maekitalo <maekitalo@8dd45c8f-be11-0410-86c3-e0da43b70fc1>
Date:   Thu Jan 3 12:18:43 2008 +0000

    fix error handling in sslWrite
    
    
    git-svn-id: svn://svn.code.sf.net/p/tntnet/code/trunk@963 8dd45c8f-be11-0410-86c3-e0da43b70fc1

diff --git a/tntnet/framework/common/openssl.cpp b/tntnet/framework/common/openssl.cpp
index 2d173e96..41811475 100644
--- a/tntnet/framework/common/openssl.cpp
+++ b/tntnet/framework/common/openssl.cpp
@@ -177,7 +177,7 @@ namespace tnt
       }
       catch (const std::exception& e)
       {
-        log_error("error closing ssl-connection: " << e.what());
+        log_debug("error closing ssl-connection: " << e.what());
       }
 
       log_debug("SSL_free(" << ssl << ')');
@@ -253,20 +253,8 @@ namespace tnt
       // no read, timeout > 0 - poll
       do
       {
-        short events;
-
-        if (SSL_get_error(ssl, n) == SSL_ERROR_WANT_WRITE)
-        {
-          log_debug("poll(POLLIN|POLLOUT)");
-          events = POLLIN|POLLOUT;
-        }
-        else
-        {
-          log_debug("poll(POLLIN)");
-          events = POLLIN;
-        }
-
-        poll(events);
+        poll(SSL_get_error(ssl, n) == SSL_ERROR_WANT_WRITE
+                    ? POLLIN|POLLOUT : POLLIN);
 
         log_debug("SSL_read(" << ssl << ", buffer, " << bufsize << ')');
         n = ::SSL_read(ssl, buffer, bufsize);
@@ -276,7 +264,7 @@ namespace tnt
       } while (n < 0
          && ((err = SSL_get_error(ssl, n)) == SSL_ERROR_WANT_READ
           || err == SSL_ERROR_WANT_WRITE
-          || SSL_get_error(ssl, n) == SSL_ERROR_SYSCALL && errno == EAGAIN));
+          || err == SSL_ERROR_SYSCALL && errno == EAGAIN));
     }
     return n;
   }
@@ -297,11 +285,20 @@ namespace tnt
       n = SSL_write(ssl, buffer, s);
       checkSslError();
 
+      int err;
       if (n > 0)
       {
         buffer += n;
         s -= n;
       }
+      else if (n < 0
+              && (err = SSL_get_error(ssl, n)) != SSL_ERROR_WANT_READ
+              && err != SSL_ERROR_WANT_WRITE
+              && (err != SSL_ERROR_SYSCALL || errno != EAGAIN))
+      {
+        log_debug("error " << err << " occured in SSL_write; n=" << n);
+        throw OpensslException("error from TLS/SSL I/O operation", err);
+      }
 
       if (s <= 0)
         break;

