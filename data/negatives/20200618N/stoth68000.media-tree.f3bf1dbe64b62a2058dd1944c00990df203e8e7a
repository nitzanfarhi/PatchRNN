commit f3bf1dbe64b62a2058dd1944c00990df203e8e7a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Oct 7 14:02:12 2016 +0200

    x86/acpi: Prevent LAPIC id 0xff from being accounted
    
    Yinghai reported that the recent changes to make the cpuid - nodeid
    relationship permanent causes a cpuid ordering regression on a system which
    has 2apic enabled..
    
    The reason is that the ACPI local APIC parser has no sanity check for
    apicid 0xff, which is an invalid id. So a CPU id for this invalid local
    APIC id is allocated and therefor breaks the cpuid ordering.
    
    Add a sanity check to acpi_parse_lapic() which ignores the invalid id.
    
    Fixes: 8f54969dc8d6 ("x86/acpi: Introduce persistent storage for cpuid <-> apicid mapping")
    Reported-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Gu Zheng <guz.fnst@cn.fujitsu.com>,
    Cc: Tang Chen <tangchen@cn.fujitsu.com>
    Cc: douly.fnst@cn.fujitsu.com,
    Cc: zhugh.fnst@cn.fujitsu.com
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Lv Zheng <lv.zheng@intel.com>,
    Cc: robert.moore@intel.com
    Cc: linux-acpi@vger.kernel.org
    Link: https://lkml.kernel.org/r/CAE9FiQVQx6FRXT-RdR7Crz4dg5LeUWHcUSy1KacjR+JgU_vGJg@mail.gmail.com

diff --git a/arch/x86/kernel/acpi/boot.c b/arch/x86/kernel/acpi/boot.c
index 32a7d70913ac..8a5abaa7d453 100644
--- a/arch/x86/kernel/acpi/boot.c
+++ b/arch/x86/kernel/acpi/boot.c
@@ -233,6 +233,10 @@ acpi_parse_lapic(struct acpi_subtable_header * header, const unsigned long end)
 
 	acpi_table_print_madt_entry(header);
 
+	/* Ignore invalid ID */
+	if (processor->id == 0xff)
+		return 0;
+
 	/*
 	 * We need to register disabled CPU as well to permit
 	 * counting disabled CPUs. This allows us to size

