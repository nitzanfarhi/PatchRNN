commit a243a42bdf1bf4bc88deebc2408c51af7e85df5a
Author: Jason Ish <ish@unx.ca>
Date:   Thu Jan 15 14:43:22 2015 -0600

    New function to test if a configuration node is a sequence or not.

diff --git a/src/conf.c b/src/conf.c
index c42ff495..50a9d13e 100644
--- a/src/conf.c
+++ b/src/conf.c
@@ -840,6 +840,19 @@ ConfNodePrune(ConfNode *node)
     }
 }
 
+/**
+ * \brief Check if a node is a sequence or node.
+ *
+ * \param node the node to check.
+ *
+ * \return 1 if node is a seuence, otherwise 0.
+ */
+int
+ConfNodeIsSequence(const ConfNode *node)
+{
+    return node->is_seq == 0 ? 0 : 1;
+}
+
 #ifdef UNITTESTS
 
 /**
@@ -1398,6 +1411,23 @@ end:
     return ret;
 }
 
+int
+ConfNodeIsSequenceTest(void)
+{
+    ConfNode *node = ConfNodeNew();
+    if (node == NULL) {
+        return 0;
+    }
+    if (ConfNodeIsSequence(node)) {
+        return 0;
+    }
+    node->is_seq = 1;
+    if (!ConfNodeIsSequence(node)) {
+        return 0;
+    }
+    return 1;
+}
+
 void
 ConfRegisterTests(void)
 {
@@ -1416,6 +1446,7 @@ ConfRegisterTests(void)
     UtRegisterTest("ConfGetChildValueBoolWithDefaultTest", ConfGetChildValueBoolWithDefaultTest, 1);
     UtRegisterTest("ConfGetNodeOrCreateTest", ConfGetNodeOrCreateTest, 1);
     UtRegisterTest("ConfNodePruneTest", ConfNodePruneTest, 1);
+    UtRegisterTest("ConfNodeIsSequenceTest", ConfNodeIsSequenceTest, 1);
 }
 
 #endif /* UNITTESTS */
diff --git a/src/conf.h b/src/conf.h
index 6bc7414e..2c01a43e 100644
--- a/src/conf.h
+++ b/src/conf.h
@@ -87,5 +87,6 @@ int ConfGetChildValueWithDefault(const ConfNode *base, const ConfNode *dflt, con
 int ConfGetChildValueIntWithDefault(const ConfNode *base, const ConfNode *dflt, const char *name, intmax_t *val);
 int ConfGetChildValueBoolWithDefault(const ConfNode *base, const ConfNode *dflt, const char *name, int *val);
 char *ConfLoadCompleteIncludePath(const char *);
+int ConfNodeIsSequence(const ConfNode *node);
 
 #endif /* ! __CONF_H__ */

