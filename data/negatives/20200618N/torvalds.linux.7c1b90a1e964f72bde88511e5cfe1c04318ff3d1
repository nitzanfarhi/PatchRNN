commit 7c1b90a1e964f72bde88511e5cfe1c04318ff3d1
Author: Martin Koegler <mkoegler@auto.tuwien.ac.at>
Date:   Wed May 28 20:50:07 2008 +0200

    avr32: Fix sigaltstack behaviour
    
    A signal handler should be able to change the signal stack used for the
    next signal by altering the ucontext_t passed as a parameter to the
    handler. This does not currently work on avr32 since it doesn't update
    the in-kernel signal context from the ucontext_t upon signal handler
    return.
    
    Fix it by adding a call to do_sigaltstack() from sys_rt_sigreturn(),
    bringing it in line with most other architectures.
    
    Signed-off-by: Martin Koegler <mkoegler@auto.tuwien.ac.at>
    [haavard.skinnemoen@atmel.com: changed patch description]
    Signed-off-by: Haavard Skinnemoen <haavard.skinnemoen@atmel.com>

diff --git a/arch/avr32/kernel/signal.c b/arch/avr32/kernel/signal.c
index 5616a00c10ba..c5b11f9067f1 100644
--- a/arch/avr32/kernel/signal.c
+++ b/arch/avr32/kernel/signal.c
@@ -93,6 +93,9 @@ asmlinkage int sys_rt_sigreturn(struct pt_regs *regs)
 	if (restore_sigcontext(regs, &frame->uc.uc_mcontext))
 		goto badframe;
 
+	if (do_sigaltstack(&frame->uc.uc_stack, NULL, regs->sp) == -EFAULT)
+		goto badframe;
+
 	pr_debug("Context restored: pc = %08lx, lr = %08lx, sp = %08lx\n",
 		 regs->pc, regs->lr, regs->sp);
 

