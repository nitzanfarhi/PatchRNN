commit 07843a09ce521ddc3ad814d4026782d921d3d6c4
Author: Robert Moore <Robert.Moore@intel.com>
Date:   Wed Sep 23 12:24:15 2009 -0700

    Add repair for bad _BIF/_BIX packages.
    
    Add a repair for the "Oem Information" field which is often
    mistakenly returned as an integer. It should always be a string.
    ACPICA BZ 807.

diff --git a/source/components/namespace/nsrepair.c b/source/components/namespace/nsrepair.c
index ae534264a..f157e008f 100644
--- a/source/components/namespace/nsrepair.c
+++ b/source/components/namespace/nsrepair.c
@@ -155,6 +155,11 @@ AcpiNsRepairObject (
     ACPI_SIZE               Length;
 
 
+    /*
+     * At this point, we know that the type of the returned object was not
+     * one of the expected types for this predefined name. Attempt to
+     * repair the object. Only a limited number of repairs are possible.
+     */
     switch (ReturnObject->Common.Type)
     {
     case ACPI_TYPE_BUFFER:
@@ -193,45 +198,84 @@ AcpiNsRepairObject (
          */
         ACPI_MEMCPY (NewObject->String.Pointer,
             ReturnObject->Buffer.Pointer, Length);
+        break;
 
-        /*
-         * If the original object is a package element, we need to:
-         * 1. Set the reference count of the new object to match the
-         *    reference count of the old object.
-         * 2. Decrement the reference count of the original object.
-         */
-        if (PackageIndex != ACPI_NOT_PACKAGE_ELEMENT)
-        {
-            NewObject->Common.ReferenceCount =
-                ReturnObject->Common.ReferenceCount;
 
-            if (ReturnObject->Common.ReferenceCount > 1)
+    case ACPI_TYPE_INTEGER:
+
+        /* Does the method/object legally return a string? */
+
+        if (ExpectedBtypes & ACPI_RTYPE_STRING)
+        {
+            /*
+             * The only supported Integer-to-String conversion is to convert
+             * an integer of value 0 to a NULL string. The last element of
+             * _BIF and _BIX packages occasionally need this fix.
+             */
+            if (ReturnObject->Integer.Value != 0)
             {
-                ReturnObject->Common.ReferenceCount--;
+                return (AE_AML_OPERAND_TYPE);
             }
 
-            ACPI_WARN_PREDEFINED ((AE_INFO, Data->Pathname, Data->NodeFlags,
-                "Converted Buffer to expected String at index %u",
-                PackageIndex));
+            /* Allocate a new NULL string object */
+
+            NewObject = AcpiUtCreateStringObject (0);
+            if (!NewObject)
+            {
+                return (AE_NO_MEMORY);
+            }
         }
         else
         {
-            ACPI_WARN_PREDEFINED ((AE_INFO, Data->Pathname, Data->NodeFlags,
-                "Converted Buffer to expected String"));
+            return (AE_AML_OPERAND_TYPE);
         }
+        break;
 
-        /* Delete old object, install the new return object */
-
-        AcpiUtRemoveReference (ReturnObject);
-        *ReturnObjectPtr = NewObject;
-        Data->Flags |= ACPI_OBJECT_REPAIRED;
-        return (AE_OK);
 
     default:
-        break;
+
+        /* We cannot repair this object */
+
+        return (AE_AML_OPERAND_TYPE);
     }
 
-    return (AE_AML_OPERAND_TYPE);
+    /* Object was successfully repaired */
+
+    /*
+     * If the original object is a package element, we need to:
+     * 1. Set the reference count of the new object to match the
+     *    reference count of the old object.
+     * 2. Decrement the reference count of the original object.
+     */
+    if (PackageIndex != ACPI_NOT_PACKAGE_ELEMENT)
+    {
+        NewObject->Common.ReferenceCount =
+            ReturnObject->Common.ReferenceCount;
+
+        if (ReturnObject->Common.ReferenceCount > 1)
+        {
+            ReturnObject->Common.ReferenceCount--;
+        }
+
+        ACPI_WARN_PREDEFINED ((AE_INFO, Data->Pathname, Data->NodeFlags,
+            "Converted %s to expected %s at index %u",
+            AcpiUtGetObjectTypeName (ReturnObject),
+            AcpiUtGetObjectTypeName (NewObject), PackageIndex));
+    }
+    else
+    {
+        ACPI_WARN_PREDEFINED ((AE_INFO, Data->Pathname, Data->NodeFlags,
+            "Converted %s to expected %s",
+            AcpiUtGetObjectTypeName (ReturnObject),
+            AcpiUtGetObjectTypeName (NewObject)));
+    }
+
+    /* Delete old object, install the new return object */
+
+    AcpiUtRemoveReference (ReturnObject);
+    *ReturnObjectPtr = NewObject;
+    Data->Flags |= ACPI_OBJECT_REPAIRED;
+    return (AE_OK);
 }
 
 

