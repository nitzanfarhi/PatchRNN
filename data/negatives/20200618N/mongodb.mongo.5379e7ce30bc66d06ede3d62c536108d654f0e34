commit 5379e7ce30bc66d06ede3d62c536108d654f0e34
Author: Dwight <dwight@10gen.com>
Date:   Mon Jan 3 13:51:02 2011 -0500

    remove what appears to be dead code

diff --git a/db/dur.cpp b/db/dur.cpp
index 06fa5156c7..9e65502a80 100644
--- a/db/dur.cpp
+++ b/db/dur.cpp
@@ -239,11 +239,6 @@ namespace mongo {
             return p;
         }
 
-        void DurableImpl::commitIfNeeded() {
-            if (commitJob.bytes() > 50*1024*1024) // should this also fire if CmdLine::DurAlwaysCommit?
-                groupCommit();
-        }
-
         /** Used in _DEBUG builds to check that we didn't overwrite the last intent
             that was declared.  called just before writelock release.  we check a few
             bytes after the declared region to see if they changed.
diff --git a/db/dur.h b/db/dur.h
index 148649702b..986a0beab3 100644
--- a/db/dur.h
+++ b/db/dur.h
@@ -94,15 +94,6 @@ namespace mongo {
             */
             virtual bool commitNow() = 0;
 
-            /** Commit if enough bytes have been modified. Current threshold is 50MB
-
-                The idea is that long running write operations that dont yield
-                (like creating an index or update with $atomic) can call this
-                whenever the db is in a sane state and it will prevent commits
-                from growing too large.
-            */
-            virtual void commitIfNeeded() = 0;
-
             /** Declare write intent for a DiskLoc.  @see DiskLoc::writing() */
             inline DiskLoc& writingDiskLoc(DiskLoc& d) { return *((DiskLoc*) writingPtr(&d, sizeof(d))); }
 
@@ -171,7 +162,6 @@ namespace mongo {
             void droppingDb(string db) { }
             bool awaitCommit() { return false; }
             bool commitNow() { return false; }
-            void commitIfNeeded() { }
             void setNoJournal(void *dst, void *src, unsigned len);
         };
 
@@ -184,7 +174,6 @@ namespace mongo {
             void droppingDb(string db);
             bool awaitCommit();
             bool commitNow();
-            void commitIfNeeded();
             void setNoJournal(void *dst, void *src, unsigned len);
         };
 

