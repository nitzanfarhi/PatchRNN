commit 04fcc11bb5653c421f11f109d8b79ea5eb9fedb4
Author: Alexander Graf <agraf@suse.de>
Date:   Mon Aug 8 15:06:55 2011 +0200

    KVM: PPC: Interpret SDR1 as HVA in PAPR mode
    
    When running a PAPR guest, the guest is not allowed to set SDR1 - instead
    the HTAB information is held in internal hypervisor structures. But all of
    our current code relies on SDR1 and walking the HTAB like on real hardware.
    
    So in order to not be too intrusive, we simply set SDR1 to the HTAB we hold
    in host memory. That way we can keep the HTAB in user space, but use it from
    kernel space to map the guest.
    
    Signed-off-by: Alexander Graf <agraf@suse.de>

diff --git a/arch/powerpc/kvm/book3s_64_mmu.c b/arch/powerpc/kvm/book3s_64_mmu.c
index c6d3e194b6b4..b871721c0050 100644
--- a/arch/powerpc/kvm/book3s_64_mmu.c
+++ b/arch/powerpc/kvm/book3s_64_mmu.c
@@ -128,7 +128,13 @@ static hva_t kvmppc_mmu_book3s_64_get_pteg(
 	dprintk("MMU: page=0x%x sdr1=0x%llx pteg=0x%llx vsid=0x%llx\n",
 		page, vcpu_book3s->sdr1, pteg, slbe->vsid);
 
-	r = gfn_to_hva(vcpu_book3s->vcpu.kvm, pteg >> PAGE_SHIFT);
+	/* When running a PAPR guest, SDR1 contains a HVA address instead
+           of a GPA */
+	if (vcpu_book3s->vcpu.arch.papr_enabled)
+		r = pteg;
+	else
+		r = gfn_to_hva(vcpu_book3s->vcpu.kvm, pteg >> PAGE_SHIFT);
+
 	if (kvm_is_error_hva(r))
 		return r;
 	return r | (pteg & ~PAGE_MASK);

