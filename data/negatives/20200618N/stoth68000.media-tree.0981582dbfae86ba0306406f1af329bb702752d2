commit 0981582dbfae86ba0306406f1af329bb702752d2
Author: Roland Dreier <rolandd@cisco.com>
Date:   Fri Jul 20 21:19:43 2007 -0700

    mlx4_core: Change command token on timeout
    
    The FW command token is currently only updated on a command completion
    event. This means that on command timeout, the same token will be
    reused for new command, which results in a mess if the timed out
    command *does* eventually complete.
    
    This is the same change as the patch for mthca from Michael
    S. Tsirkin <mst@dev.mellanox.co.il> that was just merged.  It seems
    sensible to avoid gratuitous differences in FW command processing
    between mthca and mlx4.
    
    Signed-off-by: Roland Dreier <rolandd@cisco.com>

diff --git a/drivers/net/mlx4/cmd.c b/drivers/net/mlx4/cmd.c
index c1f81a993f5d..a9f31753661a 100644
--- a/drivers/net/mlx4/cmd.c
+++ b/drivers/net/mlx4/cmd.c
@@ -246,8 +246,6 @@ void mlx4_cmd_event(struct mlx4_dev *dev, u16 token, u8 status, u64 out_param)
 	context->result    = mlx4_status_to_errno(status);
 	context->out_param = out_param;
 
-	context->token += priv->cmd.token_mask + 1;
-
 	complete(&context->done);
 }
 
@@ -264,6 +262,7 @@ static int mlx4_cmd_wait(struct mlx4_dev *dev, u64 in_param, u64 *out_param,
 	spin_lock(&cmd->context_lock);
 	BUG_ON(cmd->free_head < 0);
 	context = &cmd->context[cmd->free_head];
+	context->token += cmd->token_mask + 1;
 	cmd->free_head = context->next;
 	spin_unlock(&cmd->context_lock);
 

