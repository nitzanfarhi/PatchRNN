commit 529a53c6087b3e8648185dfa4491043ec43554d6
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Fri Jul 25 06:08:36 2014 -0300

    [media] vb2: fix multiplanar read() with non-zero data_offset
    
    If this is a multiplanar buf_type and the plane we want to read has a
    non-zero data_offset, then that data_offset was not taken into account.
    
    Note that read() or write() for formats with more than one plane is currently
    not allowed, hence the use of 'planes[0]' since this is only relevant for a
    single-plane format.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>

diff --git a/drivers/media/v4l2-core/videobuf2-core.c b/drivers/media/v4l2-core/videobuf2-core.c
index 5b808e25fc09..7e6aff673a5a 100644
--- a/drivers/media/v4l2-core/videobuf2-core.c
+++ b/drivers/media/v4l2-core/videobuf2-core.c
@@ -2955,6 +2955,12 @@ static size_t __vb2_perform_fileio(struct vb2_queue *q, char __user *data, size_
 		buf->queued = 0;
 		buf->size = read ? vb2_get_plane_payload(q->bufs[index], 0)
 				 : vb2_plane_size(q->bufs[index], 0);
+		/* Compensate for data_offset on read in the multiplanar case. */
+		if (is_multiplanar && read &&
+		    fileio->b.m.planes[0].data_offset < buf->size) {
+			buf->pos = fileio->b.m.planes[0].data_offset;
+			buf->size -= buf->pos;
+		}
 	} else {
 		buf = &fileio->bufs[index];
 	}

