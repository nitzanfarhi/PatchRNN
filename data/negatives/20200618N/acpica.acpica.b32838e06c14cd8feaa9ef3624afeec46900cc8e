commit b32838e06c14cd8feaa9ef3624afeec46900cc8e
Author: Robert Moore <Robert.Moore@intel.com>
Date:   Mon Jun 21 14:53:58 2010 -0700

    Ensure GPEs are not enabled twice.
    
    While developing the GPE reference counting code we overlooked the
    fact that acpi_ev_update_gpes() could have enabled GPEs before
    acpi_ev_initialize_gpe_block() was called.  As a result, some GPEs
    are enabled twice during the initialization.
    
    To fix this issue avoid calling acpi_enable_gpe() from
    acpi_ev_initialize_gpe_block() for the GPEs that have nonzero
    runtime reference counters.
    
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Patch : https://patchwork.kernel.org/patch/104911/

diff --git a/source/components/events/evgpeblk.c b/source/components/events/evgpeblk.c
index 721411703..bd04c88cc 100644
--- a/source/components/events/evgpeblk.c
+++ b/source/components/events/evgpeblk.c
@@ -613,6 +613,19 @@ AcpiEvInitializeGpeBlock (
 
             GpeIndex = (i * ACPI_GPE_REGISTER_WIDTH) + j;
             GpeEventInfo = &GpeBlock->EventInfo[GpeIndex];
+            GpeNumber = GpeIndex + GpeBlock->BlockBaseNumber;
+
+            /*
+             * If the GPE has already been enabled for runtime
+             * signalling, make sure that it remains enabled, but
+             * do not increment its reference count.
+             */
+            if (GpeEventInfo->RuntimeCount)
+            {
+                (void) AcpiSetGpe (GpeDevice, GpeNumber, ACPI_GPE_ENABLE);
+                GpeEnabledCount++;
+                continue;
+            }
 
             /* Ignore GPEs that can wake the system */
 
@@ -634,7 +647,6 @@ AcpiEvInitializeGpeBlock (
 
             /* Enable this GPE */
 
-            GpeNumber = GpeIndex + GpeBlock->BlockBaseNumber;
             Status = AcpiEnableGpe (GpeDevice, GpeNumber,
                         ACPI_GPE_TYPE_RUNTIME);
             if (ACPI_FAILURE (Status))

