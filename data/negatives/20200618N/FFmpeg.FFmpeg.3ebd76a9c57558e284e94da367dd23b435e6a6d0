commit 3ebd76a9c57558e284e94da367dd23b435e6a6d0
Author: Dale Curtis <dalecurtis@chromium.org>
Date:   Mon Jan 5 16:34:17 2015 -0800

    mov: Fix negative size calculation in mov_read_default().
    
    The previous code assumed if an atom was marked with a 64-bit
    size extension, it actually had that data available. The new
    code verfies there's enough data in the atom for this to be
    done.
    
    Failure to verify causes total_size > atom.size which will
    result in negative size calculations later on.
    
    Found-by: Paul Mehta <paul@paulmehta.com>
    Signed-off-by: Dale Curtis <dalecurtis@chromium.org>
    Signed-off-by: Michael Niedermayer <michaelni@gmx.at>

diff --git a/libavformat/mov.c b/libavformat/mov.c
index f2a66b8a95..a157d60330 100644
--- a/libavformat/mov.c
+++ b/libavformat/mov.c
@@ -3471,7 +3471,7 @@ static int mov_read_default(MOVContext *c, AVIOContext *pb, MOVAtom atom)
                 }
             }
             total_size += 8;
-            if (a.size == 1) { /* 64 bit extended size */
+            if (a.size == 1 && total_size + 8 <= atom.size) { /* 64 bit extended size */
                 a.size = avio_rb64(pb) - 8;
                 total_size += 8;
             }

