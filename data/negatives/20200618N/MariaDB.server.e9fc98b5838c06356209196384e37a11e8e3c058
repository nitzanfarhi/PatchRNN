commit e9fc98b5838c06356209196384e37a11e8e3c058
Author: Kristian Nielsen <knielsen@knielsen-hq.org>
Date:   Mon Nov 17 12:42:02 2014 +0100

    MDEV-7121: Parallel slave may hang if master crashes in the middle of writing transaction to binlog
    
    When a master server restarts, it writes a restart format_description event as
    the first event in the next binlog file. The parallel slave SQL thread queues
    a special restart entry for the current worker thread to signal this, so that
    the worker thread can roll back any prior partial transaction that might have
    been written to the binlog due to master crashing.
    
    This queueing was missing a mysql_cond_signal() to notify the worker
    thread. This could cause the worker thread to not process the restart entry,
    and this in turn would cause the SQL thread to hang infinitely waiting for the
    worker thread to complete processing.
    
    Fix by adding the missing wakeup signalling for this case.

diff --git a/sql/rpl_parallel.cc b/sql/rpl_parallel.cc
index 267f40b7cf2..7c273d51a19 100644
--- a/sql/rpl_parallel.cc
+++ b/sql/rpl_parallel.cc
@@ -1760,6 +1760,7 @@ rpl_parallel_entry::queue_master_restart(rpl_group_info *rgi,
   qev->ir= rli->last_inuse_relaylog;
   ++qev->ir->queued_count;
   thr->enqueue(qev);
+  mysql_cond_signal(&thr->COND_rpl_thread);
   mysql_mutex_unlock(&thr->LOCK_rpl_thread);
   return 0;
 }

