commit 61fbeba11c553c489ba5284c0ed67067dc7b7c0f
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Oct 27 12:07:44 2008 -0400

    USB: prevent autosuspend during hub initialization
    
    This patch (as1153) fixes a potential problem in hub initialization.
    Starting in 2.6.28, initialization was split into several tasks to
    help speed up booting.  This opens the possibility that the hub may be
    autosuspended before all the initialization tasks can complete.
    
    Normally that wouldn't matter, but with incomplete initialization
    there is a risk that the hub would never autoresume -- especially if
    devices were plugged into the hub beforehand.  The solution is a
    simple one-line change to suppress autosuspend until the
    initialization is finished.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index 37ff8aed256d..b19cbfcd51da 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -659,6 +659,9 @@ static void hub_activate(struct usb_hub *hub, enum hub_activation_type type)
 			PREPARE_DELAYED_WORK(&hub->init_work, hub_init_func2);
 			schedule_delayed_work(&hub->init_work,
 					msecs_to_jiffies(delay));
+
+			/* Suppress autosuspend until init is done */
+			to_usb_interface(hub->intfdev)->pm_usage_cnt = 1;
 			return;		/* Continues at init2: below */
 		} else {
 			hub_power_on(hub, true);

