commit f327b340e35b210c936cd109544e672aa7a0e49d
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Thu Oct 18 22:26:34 2012 +0200

    TTY: hci_ldisc, remove invalid check in open
    
    hci_ldisc's open checks if tty_struct->disc_data is set. And if so it
    returns with an error. But nothing ensures disc_data to be NULL. And
    since ld->ops->open shall be called only once, we do not need the
    check at all. So remove it.
    
    Note that this is not an issue now, but n_tty will start using the
    disc_data pointer and this invalid 'if' would trigger then rendering
    TTYs over BT unusable.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Acked-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Cc: Johan Hedberg <johan.hedberg@gmail.com>
    Cc: linux-bluetooth@vger.kernel.org
    Acked-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/bluetooth/hci_ldisc.c b/drivers/bluetooth/hci_ldisc.c
index c8abce3d2d9c..ed0fade46aed 100644
--- a/drivers/bluetooth/hci_ldisc.c
+++ b/drivers/bluetooth/hci_ldisc.c
@@ -270,15 +270,10 @@ static int hci_uart_send_frame(struct sk_buff *skb)
  */
 static int hci_uart_tty_open(struct tty_struct *tty)
 {
-	struct hci_uart *hu = (void *) tty->disc_data;
+	struct hci_uart *hu;
 
 	BT_DBG("tty %p", tty);
 
-	/* FIXME: This btw is bogus, nothing requires the old ldisc to clear
-	   the pointer */
-	if (hu)
-		return -EEXIST;
-
 	/* Error if the tty has no write op instead of leaving an exploitable
 	   hole */
 	if (tty->ops->write == NULL)

