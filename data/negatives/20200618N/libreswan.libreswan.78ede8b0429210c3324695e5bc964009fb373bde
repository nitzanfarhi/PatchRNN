commit 78ede8b0429210c3324695e5bc964009fb373bde
Author: Andrew Cagney <cagney@gnu.org>
Date:   Thu Sep 21 17:25:21 2017 -0400

    libswan: add lswlog_enum_lset_short(), update enumcheck

diff --git a/include/constants.h b/include/constants.h
index 02690381a..3941f1b7d 100644
--- a/include/constants.h
+++ b/include/constants.h
@@ -310,6 +310,7 @@ size_t lswlog_enum_enum_short(struct lswlog *log, enum_enum_names *een,
  * bitnamesofb() formats into a caller-supplied buffer (re-entrant)
  *
  * show_set_short() formats into a caller-supplied buffer -- only form
+ * lswlog_enum_lset_short() formats into a caller-supplied buffer -- only form
  */
 extern bool testset(const char *const table[], lset_t val);
 extern const char *bitnamesof(const char *const table[], lset_t val);	/* NOT RE-ENTRANT */
@@ -320,6 +321,8 @@ extern const char *bitnamesofb(const char *const table[],
 extern const char *show_set_short(enum_names *sd,
 				 lset_t val,
 				 char *buf, size_t blen);
+size_t lswlog_enum_lset_short(struct lswlog *, enum_names *sd,
+			      lset_t val);
 
 /*
  * The sparser_name should be transformed into keyword_enum_value
diff --git a/lib/libswan/constants.c b/lib/libswan/constants.c
index 377e99780..967ee3a9e 100644
--- a/lib/libswan/constants.c
+++ b/lib/libswan/constants.c
@@ -2439,6 +2439,30 @@ const char *show_set_short(enum_names *sd,
 	return b;
 }
 
+size_t lswlog_enum_lset_short(struct lswlog *buf, enum_names *en, lset_t val)
+{
+	unsigned int e;
+
+	/* if nothing gets filled in, default to "none" rather than "" */
+	if (val == LEMPTY) {
+		return lswlogs(buf, "none");
+	}
+
+	size_t size = 0;
+	const char *sep = "";
+	for (e = 0; val != 0; e++) {
+		lset_t bit = LELEM(e);
+
+		if (val & bit) {
+			size += lswlogs(buf, sep);
+			sep = "+";
+			size += lswlog_enum_short(buf, en, e);
+			val -= bit;
+		}
+	}
+	return size;
+}
+
 /* test a set by seeing if all bits have names */
 bool testset(const char *const table[], lset_t val)
 {
diff --git a/testing/enumcheck/enumcheck.c b/testing/enumcheck/enumcheck.c
index 4c25598e6..cf0baf1ca 100644
--- a/testing/enumcheck/enumcheck.c
+++ b/testing/enumcheck/enumcheck.c
@@ -232,7 +232,8 @@ static void test_enum_enum(const char *title, enum_enum_names *een,
 
 }
 
-static void test_lset(const char *name, const struct lset_names *names)
+static void test_lset(const char *name, const struct lset_names *names,
+		      const enum_names *en)
 {
 	printf("%s:\n", name);
 	printf("\tcheck: ");
@@ -240,7 +241,7 @@ static void test_lset(const char *name, const struct lset_names *names)
 	printf("ok\n");
 	LSWLOG_FILE(stdout, buf) {
 		lswlogs(buf, "\tflags: ");
-		lswlog_lset_flags(buf, names, LRANGE(0, names->roof - 1));
+		lswlog_enum_lset_short(buf, en, LRANGE(0, names->roof - 1));
 		lswlogs(buf, "\n");
 	}
 }
@@ -324,7 +325,7 @@ int main(int argc UNUSED, char *argv[])
 		       IKEv2_PRF_INVALID, false);
 	printf("\n");
 
-	test_lset("debug", &debug_lset_names);
+	test_lset("debug", &debug_lset_names, &debug_and_impair_names);
 
 	report_leaks();
 	tool_close_log();

