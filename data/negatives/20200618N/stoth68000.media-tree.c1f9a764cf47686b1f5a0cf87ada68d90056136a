commit c1f9a764cf47686b1f5a0cf87ada68d90056136a
Author: Johannes Berg <johannes@sipsolutions.net>
Date:   Sun Nov 1 19:25:40 2009 +0100

    mac80211: check interface is down before type change
    
    For some strange reason the netif_running() check
    ended up after the actual type change instead of
    before, potentially causing all kinds of problems
    if the interface is up while changing the type;
    one of the problems manifests itself as a warning:
    
    WARNING: at net/mac80211/iface.c:651 ieee80211_teardown_sdata+0xda/0x1a0 [mac80211]()
    Hardware name: Aspire one
    Pid: 2596, comm: wpa_supplicant Tainted: G        W  2.6.31-10-generic #32-Ubuntu
    Call Trace:
     [] warn_slowpath_common+0x6d/0xa0
     [] warn_slowpath_null+0x15/0x20
     [] ieee80211_teardown_sdata+0xda/0x1a0 [mac80211]
     [] ieee80211_if_change_type+0x4a/0xc0 [mac80211]
     [] ieee80211_change_iface+0x61/0xa0 [mac80211]
     [] cfg80211_wext_siwmode+0xc7/0x120 [cfg80211]
     [] ioctl_standard_call+0x58/0xf0
    
    (http://www.kerneloops.org/searchweek.php?search=ieee80211_teardown_sdata)
    
    Cc: Arjan van de Ven <arjan@infradead.org>
    Cc: stable@kernel.org
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index 5608f6c68413..7b5131bd6fa1 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -72,6 +72,9 @@ static int ieee80211_change_iface(struct wiphy *wiphy,
 	struct ieee80211_sub_if_data *sdata;
 	int ret;
 
+	if (netif_running(dev))
+		return -EBUSY;
+
 	if (!nl80211_type_check(type))
 		return -EINVAL;
 
@@ -81,9 +84,6 @@ static int ieee80211_change_iface(struct wiphy *wiphy,
 	if (ret)
 		return ret;
 
-	if (netif_running(sdata->dev))
-		return -EBUSY;
-
 	if (ieee80211_vif_is_mesh(&sdata->vif) && params->mesh_id_len)
 		ieee80211_sdata_set_mesh_id(sdata,
 					    params->mesh_id_len,

