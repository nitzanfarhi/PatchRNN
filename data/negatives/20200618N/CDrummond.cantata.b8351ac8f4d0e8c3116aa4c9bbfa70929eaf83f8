commit b8351ac8f4d0e8c3116aa4c9bbfa70929eaf83f8
Author: craig.p.drummond <craig.p.drummond@b1e49159-3266-923f-9c3e-04f16369770a>
Date:   Wed Sep 24 11:17:05 2014 +0000

    Set User-Agent header on all HTTP requests. Some Podcasts fail without this.
    BUG: 546

diff --git a/network/networkaccessmanager.cpp b/network/networkaccessmanager.cpp
index ace84363..cf5fdb15 100644
--- a/network/networkaccessmanager.cpp
+++ b/network/networkaccessmanager.cpp
@@ -196,18 +196,25 @@ NetworkJob * NetworkAccessManager::get(const QNetworkRequest &req, int timeout)
         return new NetworkJob(this, req.url());
     }
 
+    // Set User-Agent - required for some Podcasts...
+    QByteArray userAgent = QString("%1 %2").arg(QCoreApplication::applicationName(), QCoreApplication::applicationVersion()).toUtf8();
+    if (req.hasRawHeader("User-Agent")) {
+        userAgent+=' '+req.rawHeader("User-Agent");
+    }
+    QNetworkRequest request=req;
+    request.setRawHeader("User-Agent", userAgent);
+
     // Windows builds do not support HTTPS - unless QtNetwork is recompiled...
     NetworkJob *reply=0;
     if (QLatin1String("https")==req.url().scheme() && !QSslSocket::supportsSsl()) {
-        QUrl httpUrl=req.url();
+        QUrl httpUrl=request.url();
         httpUrl.setScheme(QLatin1String("http"));
-        QNetworkRequest httpReq=req;
-        httpReq.setUrl(httpUrl);
+        request.setUrl(httpUrl);
         DBUG << "no ssl, use" << httpUrl.toString();
-        reply = new NetworkJob(BASE_NETWORK_ACCESS_MANAGER::get(httpReq));
+        reply = new NetworkJob(BASE_NETWORK_ACCESS_MANAGER::get(request));
         reply->setOrigUrl(req.url());
     } else {
-        reply = new NetworkJob(BASE_NETWORK_ACCESS_MANAGER::get(req));
+        reply = new NetworkJob(BASE_NETWORK_ACCESS_MANAGER::get(request));
     }
 
     if (0!=timeout) {
diff --git a/online/podcastsearchdialog.cpp b/online/podcastsearchdialog.cpp
index d4b8e02e..254e20aa 100644
--- a/online/podcastsearchdialog.cpp
+++ b/online/podcastsearchdialog.cpp
@@ -174,10 +174,7 @@ void PodcastPage::fetch(const QUrl &url)
     cancel();
     tree->clear();
     spinner->start();
-    QNetworkRequest req(url);
-    req.setRawHeader("User-Agent", QString("%1 %2").arg(QCoreApplication::applicationName(),
-                                                        QCoreApplication::applicationVersion()).toUtf8());
-    job=NetworkAccessManager::self()->get(req);
+    job=NetworkAccessManager::self()->get(url);
     connect(job, SIGNAL(finished()), this, SLOT(jobFinished()));
 }
 

