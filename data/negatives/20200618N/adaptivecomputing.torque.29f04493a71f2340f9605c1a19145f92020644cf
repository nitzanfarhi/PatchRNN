commit 29f04493a71f2340f9605c1a19145f92020644cf
Author: knielson <knielson@adaptivecomputing.com>
Date:   Thu Sep 3 14:53:36 2015 -0600

    Fixed tmpdir problem at exit time when thead_unlink_calls is
    set to true.

diff --git a/src/resmom/mom_job_func.c b/src/resmom/mom_job_func.c
index c3fd05edd..6e2e2613c 100644
--- a/src/resmom/mom_job_func.c
+++ b/src/resmom/mom_job_func.c
@@ -635,15 +635,11 @@ static void job_init_wattr(
   }   /* END job_init_wattr() */
 
 
+void remove_tmpdir_file(
 
-
-
-void *delete_job_files(
-
-  void *vp)
+    job_file_delete_info *jfdi)
 
   {
-  job_file_delete_info *jfdi = (job_file_delete_info *)vp;
   char                  namebuf[MAXPATHLEN];
   int                   rc = 0;
 
@@ -666,6 +662,11 @@ void *delete_job_files(
       else
         {
         rc = remtree(namebuf);
+        if (rc != 0)
+          {
+          sprintf(log_buffer, "remtree failed: %s", strerror(errno));
+          log_err(errno, __func__, log_buffer);
+          }
         
         setuid_ext(pbsuser, TRUE);
         setegid(pbsgroup);
@@ -682,6 +683,20 @@ void *delete_job_files(
         }
       }
     } /* END code to remove temp dir */
+  }
+
+
+
+
+void *delete_job_files(
+
+  void *vp)
+
+  {
+  job_file_delete_info *jfdi = (job_file_delete_info *)vp;
+  char                  namebuf[MAXPATHLEN];
+  int                   rc = 0;
+
 
 #ifdef PENABLE_LINUX26_CPUSETS
   /* Delete the cpuset for the job. */
@@ -903,6 +918,8 @@ void mom_job_purge(
       }
     }
 
+  remove_tmpdir_file(jfdi);
+
   if (thread_unlink_calls == true)
     enqueue_threadpool_request(delete_job_files, jfdi, request_pool);
   else
diff --git a/src/resmom/mom_job_func.h b/src/resmom/mom_job_func.h
index 72f4b9e9e..fb1c8bfd7 100644
--- a/src/resmom/mom_job_func.h
+++ b/src/resmom/mom_job_func.h
@@ -19,6 +19,7 @@ int job_unlink_file(job *pjob, const char *name);
 /* static void job_init_wattr(job *pj); */
 
 void *delete_job_files(void *vp);
+void remove_tmpdir_files(void);
 
 void mom_job_purge(job *pjob);
 

