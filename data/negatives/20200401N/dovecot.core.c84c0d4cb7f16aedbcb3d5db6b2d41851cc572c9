commit c84c0d4cb7f16aedbcb3d5db6b2d41851cc572c9
Author: Timo Sirainen <tss@iki.fi>
Date:   Tue Mar 22 23:03:41 2011 +0200

    doveconf: Fixed showing plugin {} section.

diff --git a/src/config/config-request.c b/src/config/config-request.c
index de1c301fb..fe39ba4d4 100644
--- a/src/config/config-request.c
+++ b/src/config/config-request.c
@@ -286,6 +286,8 @@ settings_export(struct config_export_context *ctx,
 				break;
 			}
 			hash_table_insert(ctx->keys, key, key);
+			/* for doveconf -n to see this KEY_LIST */
+			ctx->callback(key, "", CONFIG_KEY_LIST, ctx->context);
 
 			strings = array_get(val, &count);
 			i_assert(count % 2 == 0);
diff --git a/src/config/doveconf.c b/src/config/doveconf.c
index a28fc2588..0ba8f26b4 100644
--- a/src/config/doveconf.c
+++ b/src/config/doveconf.c
@@ -191,12 +191,19 @@ config_dump_human_output(struct config_dump_human_context *ctx,
 	for (i = 0; i < count && strings[i][0] == LIST_KEY_PREFIX[0]; i++) T_BEGIN {
 		p = strchr(strings[i], '=');
 		i_assert(p != NULL);
-		/* string is in format: "list=0 1 2" */
-		for (args = t_strsplit(p + 1, " "); *args != NULL; args++) {
-			str = p_strdup_printf(ctx->pool, "%s/%s/",
-					      t_strcut(strings[i]+1, '='),
-					      *args);
+		if (p[1] == '\0') {
+			/* "strlist=" */
+			str = p_strdup_printf(ctx->pool, "%s/",
+					      t_strcut(strings[i]+1, '='));
 			array_append(&prefixes_arr, &str, 1);
+		} else {
+			/* string is in format: "list=0 1 2" */
+			for (args = t_strsplit(p + 1, " "); *args != NULL; args++) {
+				str = p_strdup_printf(ctx->pool, "%s/%s/",
+						      t_strcut(strings[i]+1, '='),
+						      *args);
+				array_append(&prefixes_arr, &str, 1);
+			}
 		}
 	} T_END;
 	prefixes = array_get(&prefixes_arr, &prefix_count);

