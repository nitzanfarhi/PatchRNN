commit eb0085281ab66651b0f60aece48b8c259e578caa
Author: Matthew Soffen <matt@soffen.com>
Date:   Thu Jul 15 15:32:49 2004 +0000

    Minor issues with compiling on FreeBSD ( no inline variable initializations ).
    
    CVS patchset: 3325
    CVS date: 2004/07/15 15:32:49
    
    Mercurial revision: 377f1d3d614190bcac0e76ebb71208032c9e0149

diff --git a/crm/pengine/color.c b/crm/pengine/color.c
index 44b8e211a..cafe50270 100644
--- a/crm/pengine/color.c
+++ b/crm/pengine/color.c
@@ -1,4 +1,4 @@
-/* $Id: color.c,v 1.10 2004/07/05 13:52:02 andrew Exp $ */
+/* $Id: color.c,v 1.11 2004/07/15 15:32:49 msoffen Exp $ */
 /* 
  * Copyright (C) 2004 Andrew Beekhof <andrew@beekhof.net>
  * 
@@ -16,6 +16,7 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
+#include <sys/param.h>
 #include <crm/crm.h>
 #include <crm/cib.h>
 #include <crm/msg_xml.h>
@@ -59,8 +60,12 @@ gboolean assign_color(resource_t *rsc, color_t *color);
 gboolean 
 apply_node_constraints(GListPtr constraints, GListPtr nodes)
 {
-	crm_verbose("Applying constraints...");
 	int lpc = 0;
+	int llpc = 0;
+	resource_t *rsc_lh = NULL;
+	GListPtr or_list = NULL;
+
+	crm_verbose("Applying constraints...");
 	slist_iter(
 		cons, rsc_to_node_t, constraints, lpc,
 		crm_debug_action(print_rsc_to_node("Applying", cons, FALSE));
@@ -75,7 +80,7 @@ apply_node_constraints(GListPtr constraints, GListPtr nodes)
 			continue;
 		}
     
-		resource_t *rsc_lh = cons->rsc_lh;
+		rsc_lh = cons->rsc_lh;
 		if(rsc_lh == NULL) {
 			crm_err("LHS of rsc_to_node (%s) is NULL", cons->id);
 			continue;
@@ -90,8 +95,8 @@ apply_node_constraints(GListPtr constraints, GListPtr nodes)
 		}
 		crm_debug_action(print_resource("before update", rsc_lh,TRUE));
 
-		int llpc = 0;
-		GListPtr or_list = node_list_or(
+		llpc = 0;
+		or_list = node_list_or(
 			rsc_lh->allowed_nodes, cons->node_list_rh, FALSE);
 		
 		pe_free_shallow(rsc_lh->allowed_nodes);
diff --git a/crm/pengine/pengine.c b/crm/pengine/pengine.c
index 70fdda41c..b7419b404 100755
--- a/crm/pengine/pengine.c
+++ b/crm/pengine/pengine.c
@@ -1,4 +1,4 @@
-/* $Id: pengine.c,v 1.37 2004/07/05 13:52:02 andrew Exp $ */
+/* $Id: pengine.c,v 1.38 2004/07/15 15:32:49 msoffen Exp $ */
 /* 
  * Copyright (C) 2004 Andrew Beekhof <andrew@beekhof.net>
  * 
@@ -16,6 +16,8 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
+#include <sys/param.h>
+
 #include <crm/crm.h>
 #include <crm/cib.h>
 #include <crm/msg_xml.h>
@@ -34,6 +36,8 @@ xmlNodePtr do_calculations(xmlNodePtr cib_object);
 gboolean
 process_pe_message(xmlNodePtr msg, IPC_Channel *sender)
 {
+	char *msg_buffer = NULL;
+	const char *sys_to = NULL;
 	const char *op = get_xml_attr (msg, XML_TAG_OPTIONS,
 				       XML_ATTR_OP, TRUE);
 
@@ -51,12 +55,12 @@ process_pe_message(xmlNodePtr msg, IPC_Channel *sender)
 		pemsg_strm = fopen("/tmp/pemsg.log", "w");
 	}
 
-	char *msg_buffer = dump_xml_node(msg, FALSE);
+	msg_buffer = dump_xml_node(msg, FALSE);
 	fprintf(pemsg_strm, "%s: %s\n", "[in ]", msg_buffer);
 	fflush(pemsg_strm);
 	crm_free(msg_buffer);
 	
-	const char *sys_to = xmlGetProp(msg, XML_ATTR_SYSTO);
+	sys_to = xmlGetProp(msg, XML_ATTR_SYSTO);
 
 	if(op == NULL){
 		// error
diff --git a/crm/pengine/stages.c b/crm/pengine/stages.c
index 0e47961f9..1ee767bdc 100644
--- a/crm/pengine/stages.c
+++ b/crm/pengine/stages.c
@@ -1,4 +1,4 @@
-/* $Id: stages.c,v 1.11 2004/07/05 13:52:03 andrew Exp $ */
+/* $Id: stages.c,v 1.12 2004/07/15 15:32:49 msoffen Exp $ */
 /* 
  * Copyright (C) 2004 Andrew Beekhof <andrew@beekhof.net>
  * 
@@ -16,6 +16,8 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
+#include <sys/param.h>
+
 #include <crm/crm.h>
 #include <crm/cib.h>
 #include <crm/msg_xml.h>
@@ -47,6 +49,7 @@ stage0(xmlNodePtr cib,
        GListPtr *stonith_list, GListPtr *shutdown_list)
 {
 //	int lpc;
+	int old_log = 0;
 	xmlNodePtr cib_nodes       = get_object_root(
 		XML_CIB_TAG_NODES,       cib);
 	xmlNodePtr cib_status      = get_object_root(
@@ -74,7 +77,6 @@ stage0(xmlNodePtr cib,
 	unpack_resources(safe_val(NULL, cib_resources, children),
 			 resources, actions, action_constraints, *nodes);
 
-	int old_log = 0;
 	old_log = set_crm_log_level(LOG_TRACE);
 	unpack_status(safe_val(NULL, cib_status, children),
 		      *nodes, *resources, actions, node_constraints);
@@ -228,8 +230,9 @@ gboolean
 stage5(GListPtr resources)
 {
 	
-	crm_verbose("filling in the nodes to perform the actions on");
 	int lpc = 0;
+
+	crm_verbose("filling in the nodes to perform the actions on");
 	slist_iter(
 		rsc, resource_t, resources, lpc,
 
@@ -470,8 +473,8 @@ stage8(GListPtr action_sets, xmlNodePtr *graph)
 		   }
 		);
 */
-	int lpc2;
 	slist_iter(action_set, GList, action_sets, lpc,
+	           int lpc2;
 		   crm_verbose("Processing Action Set %d", lpc);
 		   xml_action_set = create_xml_node(NULL, "actions");
 		   set_xml_property_copy(
diff --git a/crm/pengine/unpack.c b/crm/pengine/unpack.c
index e33fc8e8f..95c54ad92 100644
--- a/crm/pengine/unpack.c
+++ b/crm/pengine/unpack.c
@@ -1,4 +1,4 @@
-/* $Id: unpack.c,v 1.15 2004/07/05 09:51:39 andrew Exp $ */
+/* $Id: unpack.c,v 1.16 2004/07/15 15:32:49 msoffen Exp $ */
 /* 
  * Copyright (C) 2004 Andrew Beekhof <andrew@beekhof.net>
  * 
@@ -180,6 +180,8 @@ unpack_global_defaults(xmlNodePtr defaults)
 gboolean
 unpack_nodes(xmlNodePtr xml_nodes, GListPtr *nodes)
 {
+	node_t *new_node  = NULL;
+
 	crm_verbose("Begining unpack...");
 	while(xml_nodes != NULL) {
 		xmlNodePtr xml_obj = xml_nodes;
@@ -204,7 +206,7 @@ unpack_nodes(xmlNodePtr xml_nodes, GListPtr *nodes)
 			crm_err("Must specify type tag in <node>");
 			continue;
 		}
-		node_t *new_node  = crm_malloc(sizeof(node_t));
+		new_node  = crm_malloc(sizeof(node_t));
 		new_node->weight  = 1.0;
 		new_node->fixed   = FALSE;
 		new_node->details = (struct node_shared_s*)
@@ -244,10 +246,12 @@ unpack_resources(xmlNodePtr xml_resources,
 		 GListPtr *action_cons,
 		 GListPtr all_nodes)
 {
+	action_t *action_stop  = NULL;
+	action_t *action_start = NULL;
+	resource_t *new_rsc = NULL;
+
 	crm_verbose("Begining unpack...");
 	while(xml_resources != NULL) {
-		action_t *action_stop  = NULL;
-		action_t *action_start = NULL;
 		xmlNodePtr xml_obj     = xml_resources;
 		const char *id         = xmlGetProp(xml_obj, XML_ATTR_ID);
 		const char *stopfail   = xmlGetProp(xml_obj, "on_stopfail");
@@ -263,7 +267,7 @@ unpack_resources(xmlNodePtr xml_resources,
 			crm_err("Must specify id tag in <resource>");
 			continue;
 		}
-		resource_t *new_rsc = crm_malloc(sizeof(resource_t));
+		new_rsc = crm_malloc(sizeof(resource_t));
 		new_rsc->id		= id;
 		new_rsc->xml		= xml_obj;
 		new_rsc->agent		= crm_malloc(sizeof(lrm_agent_t));
@@ -317,10 +321,13 @@ unpack_constraints(xmlNodePtr xml_constraints,
 		   GListPtr *node_constraints,
 		   GListPtr *action_constraints)
 {
+	const char *id = NULL;
+	xmlNodePtr xml_obj = NULL;
+
 	crm_verbose("Begining unpack...");
 	while(xml_constraints != NULL) {
-		const char *id = xmlGetProp(xml_constraints, XML_ATTR_ID);
-		xmlNodePtr xml_obj = xml_constraints;
+		id = xmlGetProp(xml_constraints, XML_ATTR_ID);
+		xml_obj = xml_constraints;
 		xml_constraints = xml_constraints->next;
 		if(id == NULL) {
 			crm_err("Constraint must have an id");
@@ -766,13 +773,15 @@ gboolean
 rsc2rsc_new(const char *id, enum con_strength strength, enum rsc_con_type type,
 	    resource_t *rsc_lh, resource_t *rsc_rh)
 {
+	rsc_to_rsc_t *new_con      = NULL;
+	rsc_to_rsc_t *inverted_con = NULL;
+
 	if(rsc_lh == NULL || rsc_rh == NULL){
 		// error
 		return FALSE;
 	}
 
-	rsc_to_rsc_t *new_con      = crm_malloc(sizeof(rsc_to_rsc_t));
-	rsc_to_rsc_t *inverted_con = NULL;
+	new_con      = crm_malloc(sizeof(rsc_to_rsc_t));
 
 	new_con->id       = id;
 	new_con->rsc_lh   = rsc_lh;
@@ -830,6 +839,8 @@ unpack_rsc_to_rsc(xmlNodePtr xml_obj,
 
 	resource_t *rsc_lh   = pe_find_resource(rsc_list, id_lh);
 	resource_t *rsc_rh   = pe_find_resource(rsc_list, id_rh);
+
+	action_t *before, *after;
  
 	if(rsc_lh == NULL) {
 		crm_err("No resource (con=%s, rsc=%s)", id, id_lh);
@@ -871,7 +882,6 @@ unpack_rsc_to_rsc(xmlNodePtr xml_obj,
 	 *  the higher is started, otherwise they may be both running
 	 *  on the same node when the higher is replacing the lower
 	 */
-	action_t *before, *after;
 	if(rsc_lh->priority >= rsc_rh->priority) {
 		before = rsc_rh->stop;
 		after  = rsc_lh->start;
@@ -918,6 +928,12 @@ match_attrs(const char *attr, const char *op, const char *value,
 		
 		int cmp = 0;
 		const char *h_val = (const char*)g_hash_table_lookup(
+<<<<<<< unpack.c
+			node->details->attrs, name);
+			
+		if(h_val != NULL && value == NULL && invert == FALSE) {
+			accept = TRUE;
+=======
 			node->details->attrs, attr);
 
 
@@ -952,6 +968,7 @@ match_attrs(const char *attr, const char *op, const char *value,
 		
 		if(safe_str_eq(op, "exists")) {
 			if(h_val != NULL) accept = TRUE;	
+>>>>>>> 1.13
 
 		} else if(safe_str_eq(op, "notexists")) {
 			if(h_val == NULL) accept = TRUE;

