commit 3d87216ab9e766549bf1bfa01cbc2677a1e5b6dd
Author: Tom Lane <tgl@sss.pgh.pa.us>
Date:   Mon Oct 26 01:00:13 1998 +0000

    Get rid of some minor compiler warnings.
    (HP's cc doesn't like if you forward-declare a routine static,
    and then don't make it static in the actual definition...)

diff --git a/src/backend/commands/copy.c b/src/backend/commands/copy.c
index c6fcb958e5..51e91e7c8b 100644
--- a/src/backend/commands/copy.c
+++ b/src/backend/commands/copy.c
@@ -6,7 +6,7 @@
  *
  *
  * IDENTIFICATION
- *	  $Header: /cvsroot/pgsql/src/backend/commands/copy.c,v 1.62 1998/09/23 04:22:02 momjian Exp $
+ *	  $Header: /cvsroot/pgsql/src/backend/commands/copy.c,v 1.63 1998/10/26 00:59:21 tgl Exp $
  *
  *-------------------------------------------------------------------------
  */
@@ -961,7 +961,7 @@ inString(char c, char *s)
  * Reads input from fp until an end of line is seen.
  */
 
-void
+static void
 CopyReadNewline(FILE *fp, int *newline)
 {
 	if (!*newline)
diff --git a/src/backend/commands/variable.c b/src/backend/commands/variable.c
index 17728b35a3..47400beb0e 100644
--- a/src/backend/commands/variable.c
+++ b/src/backend/commands/variable.c
@@ -2,7 +2,7 @@
  * Routines for handling of 'SET var TO',
  *	'SHOW var' and 'RESET var' statements.
  *
- * $Id: variable.c,v 1.16 1998/10/14 05:09:58 momjian Exp $
+ * $Id: variable.c,v 1.17 1998/10/26 00:59:22 tgl Exp $
  *
  */
 
@@ -307,7 +307,7 @@ parse_cost_heap(const char *value)
 	return TRUE;
 }
 
-bool
+static bool
 show_cost_heap()
 {
 
@@ -344,7 +344,7 @@ parse_cost_index(const char *value)
 	return TRUE;
 }
 
-bool
+static bool
 show_cost_index()
 {
 
@@ -464,7 +464,7 @@ show_date()
 	return TRUE;
 }
 
-bool
+static bool
 reset_date()
 {
 	DateStyle = USE_POSTGRES_DATES;
@@ -550,7 +550,7 @@ show_timezone()
  * in a core dump (under Linux anyway).
  * - thomas 1998-01-26
  */
-bool
+static bool
 reset_timezone()
 {
 	/* no time zone has been set in this session? */
@@ -598,7 +598,8 @@ parse_query_limit(const char *value)
     reset_query_limit();
     return(TRUE);
   }
-  limit = pg_atoi(value, sizeof(int32), '\0');
+  /* why is pg_atoi's arg not declared "const char *" ? */
+  limit = pg_atoi((char *) value, sizeof(int32), '\0');
   if (limit <= -1) {
     elog(ERROR, "Bad value for # of query limit (%s)", value);
   }
@@ -766,7 +767,7 @@ show_ksqo()
 	return TRUE;
 }
 
-bool
+static bool
 reset_ksqo()
 {
 	_use_keyset_query_optimizer = false;
diff --git a/src/backend/storage/file/fd.c b/src/backend/storage/file/fd.c
index 3b0824dad4..d8b95b32f0 100644
--- a/src/backend/storage/file/fd.c
+++ b/src/backend/storage/file/fd.c
@@ -6,7 +6,7 @@
  * Copyright (c) 1994, Regents of the University of California
  *
  * IDENTIFICATION
- *	  $Id: fd.c,v 1.34 1998/09/01 04:31:45 momjian Exp $
+ *	  $Id: fd.c,v 1.35 1998/10/26 01:00:13 tgl Exp $
  *
  * NOTES:
  *
@@ -175,7 +175,7 @@ pg_fsync(int fd)
 
 #define fsync pg_fsync
 
-long
+static long
 pg_nofile(void)
 {
 	static long no_files = 0;

