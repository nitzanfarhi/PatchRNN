commit b1d16c495d9e6fe48e7df2e1d18cafc6555a116a
Author: Christian Ehrhardt <ehrhardt@linux.vnet.ibm.com>
Date:   Wed May 20 15:34:56 2009 +0200

    KVM: s390: fix signal handling
    
    If signal pending is true we exit without updating kvm_run, userspace
    currently just does nothing and jumps to kvm_run again.
    Since we did not set an exit_reason we might end up with a random one
    (whatever was the last exit). Therefore it was possible to e.g. jump to
    the psw position the last real interruption set.
    Setting the INTR exit reason ensures that no old psw data is swapped
    in on reentry.
    
    Signed-off-by: Christian Ehrhardt <ehrhardt@linux.vnet.ibm.com>
    Signed-off-by: Avi Kivity <avi@redhat.com>

diff --git a/arch/s390/kvm/kvm-s390.c b/arch/s390/kvm/kvm-s390.c
index 1d65f6277166..5c1c30259002 100644
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@ -527,8 +527,10 @@ int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu, struct kvm_run *kvm_run)
 	if (rc == SIE_INTERCEPT_RERUNVCPU)
 		goto rerun_vcpu;
 
-	if (signal_pending(current) && !rc)
+	if (signal_pending(current) && !rc) {
+		kvm_run->exit_reason = KVM_EXIT_INTR;
 		rc = -EINTR;
+	}
 
 	if (rc == -ENOTSUPP) {
 		/* intercept cannot be handled in-kernel, prepare kvm-run */

