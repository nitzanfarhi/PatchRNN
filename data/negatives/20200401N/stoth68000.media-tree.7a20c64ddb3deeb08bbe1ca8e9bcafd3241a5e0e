commit 7a20c64ddb3deeb08bbe1ca8e9bcafd3241a5e0e
Author: Sarangdhar Joshi <spjoshi@codeaurora.org>
Date:   Tue Jan 24 15:13:00 2017 -0800

    remoteproc: Reduce asynchronous request_firmware to auto-boot only
    
    The rproc_add_virtio_devices() requests firmware asynchronously and
    triggers boot if the auto_boot flag is set. However, this
    asynchronous call seems to be redundant for non auto-boot scenario
    since the rproc_boot() would call request_firmware() anyways. Move
    the auto_boot check to rproc_add() so that a redundant call to
    _request_firmware can be avoided for non auto-boot case.
    
    Signed-off-by: Sarangdhar Joshi <spjoshi@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>

diff --git a/drivers/remoteproc/remoteproc_core.c b/drivers/remoteproc/remoteproc_core.c
index a7ee05006cca..a112f5969d4a 100644
--- a/drivers/remoteproc/remoteproc_core.c
+++ b/drivers/remoteproc/remoteproc_core.c
@@ -972,9 +972,7 @@ static void rproc_fw_config_virtio(const struct firmware *fw, void *context)
 {
 	struct rproc *rproc = context;
 
-	/* if rproc is marked always-on, request it to boot */
-	if (rproc->auto_boot)
-		rproc_boot(rproc);
+	rproc_boot(rproc);
 
 	release_firmware(fw);
 }
@@ -1286,9 +1284,13 @@ int rproc_add(struct rproc *rproc)
 
 	/* create debugfs entries */
 	rproc_create_debug_dir(rproc);
-	ret = rproc_add_virtio_devices(rproc);
-	if (ret < 0)
-		return ret;
+
+	/* if rproc is marked always-on, request it to boot */
+	if (rproc->auto_boot) {
+		ret = rproc_add_virtio_devices(rproc);
+		if (ret < 0)
+			return ret;
+	}
 
 	/* expose to rproc_get_by_phandle users */
 	mutex_lock(&rproc_list_mutex);

