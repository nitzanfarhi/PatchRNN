commit a6d6da2befcb4e742198cf5e0cb9da18af9e9889
Author: Bogdan-Andrei Iancu <bogdan@voice-system.ro>
Date:   Mon Jun 26 08:18:54 2006 +0000

    - fixed bug introduced with the latest ACK fixup.
      reported by Andreas Granig <andreas.granig@inode.info>
    
    
    git-svn-id: https://openser.svn.sourceforge.net/svnroot/openser/trunk@925 689a6050-402a-0410-94f2-e92a70836424

diff --git a/modules_k/tm/t_funcs.c b/modules_k/tm/t_funcs.c
index b9aafe49c..5c81be91c 100644
--- a/modules_k/tm/t_funcs.c
+++ b/modules_k/tm/t_funcs.c
@@ -216,22 +216,25 @@ int t_relay_to( struct sip_msg  *p_msg , struct proxy_l *proxy, int replicate)
 
 	/* ACKs do not establish a transaction and are fwd-ed statelessly */
 	if ( p_msg->REQ_METHOD==METHOD_ACK) {
-		DBG("DEBUG:tm:t_relay: forwarding end2end ACK\n");
+		DBG("DEBUG:tm:t_relay: forwarding ACK\n");
 		t = get_tack();
-		/* to ensure unigueness acros time and space, compute the ACK branch
-		 * in the same maner as for INVITE, but put a t->branch value that 
-		 * cannot exist for that INVITE - as it is compute as an INVITE, it 
-		 * will not overlapp with other INVITEs or requests. But the faked
-		 * value for t->branch guarantee no overalap with corresponding
-		 * INVITE  --bogdan */
-		if (!t_calc_branch( t, t->nr_of_outgoings+1, p_msg->add_to_branch_s,
-		&p_msg->add_to_branch_len )) {
+		if (t) {
+			DBG("DEBUG:tm:t_relay: it's an end2end ACK\n");
+			/* to ensure unigueness acros time and space, compute the ACK branch
+			 * in the same maner as for INVITE, but put a t->branch value that 
+			 * cannot exist for that INVITE - as it is compute as an INVITE, it 
+			 * will not overlapp with other INVITEs or requests. But the faked
+			 * value for t->branch guarantee no overalap with corresponding
+			 * INVITE  --bogdan */
+			if (!t_calc_branch( t, t->nr_of_outgoings+1, p_msg->add_to_branch_s,
+			&p_msg->add_to_branch_len )) {
+				UNREF(t);
+				LOG(L_ERR, "ERROR:tm:t_relay: ACK branch computation failed\n");
+				ret = E_BAD_SERVER;
+				goto done;
+			}
 			UNREF(t);
-			LOG(L_ERR, "ERROR:tm:t_relay: ACK branch computation failed\n");
-			ret = E_BAD_SERVER;
-			goto done;
 		}
-		UNREF(t);
 
 		/* send it out */
 		if (proxy==0) {

