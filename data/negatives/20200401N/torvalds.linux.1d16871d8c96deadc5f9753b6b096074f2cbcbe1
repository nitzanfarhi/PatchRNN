commit 1d16871d8c96deadc5f9753b6b096074f2cbcbe1
Author: Namhyung Kim <namhyung@gmail.com>
Date:   Tue Mar 22 16:32:45 2011 -0700

    mm: batch-free pcp list if possible
    
    free_pcppages_bulk() frees pages from pcp lists in a round-robin fashion
    by keeping batch_free counter.  But it doesn't need to spin if there is
    only one non-empty list.  This can be checked by batch_free ==
    MIGRATE_PCPTYPES.
    
    [akpm@linux-foundation.org: fix comment]
    Signed-off-by: Namhyung Kim <namhyung@gmail.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Mel Gorman <mel@csn.ul.ie>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 36a168e383b5..426056aff12a 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -614,6 +614,10 @@ static void free_pcppages_bulk(struct zone *zone, int count,
 			list = &pcp->lists[migratetype];
 		} while (list_empty(list));
 
+		/* This is the only non-empty list. Free them all. */
+		if (batch_free == MIGRATE_PCPTYPES)
+			batch_free = to_free;
+
 		do {
 			page = list_entry(list->prev, struct page, lru);
 			/* must delete as __free_one_page list manipulates */

