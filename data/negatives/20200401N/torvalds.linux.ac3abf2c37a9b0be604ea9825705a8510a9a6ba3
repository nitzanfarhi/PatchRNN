commit ac3abf2c37a9b0be604ea9825705a8510a9a6ba3
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Mon Nov 8 23:20:27 2010 -0500

    PCI hotplug: ibmphp: Add check to prevent reading beyond mapped area
    
    While testing various randconfigs with ktest.pl, I hit the following panic:
    
    BUG: unable to handle kernel paging request at f7e54b03
    IP: [<c0d63409>] ibmphp_access_ebda+0x101/0x19bb
    
    Adding printks, I found that the loop that reads the ebda blocks
    can move out of the mapped section.
    
    ibmphp_access_ebda: start=f7e44c00 size=5120 end=f7e46000
    ibmphp_access_ebda: io_mem=f7e44d80 offset=384
    ibmphp_access_ebda: io_mem=f7e54b03 offset=65283
    
    The start of the iomap was at f7e44c00 and had a size of 5120,
    making the end f7e46000. We start with an offset of 0x180 or
    384, giving the first read at 0xf7e44d80. Reading that location
    yields 65283, which is much bigger than the 5120 that was allocated
    and makes the next read at f7e54b03 which is outside the mapped area.
    
    Perhaps this is a bug in the driver, or buggy hardware, but this patch
    is more about not crashing my box on start up and just giving a warning
    if it detects this error.
    
    This patch at least lets my box boot with just a warning.
    
    Cc: Chandru Siddalingappa <chandru@linux.vnet.ibm.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

diff --git a/drivers/pci/hotplug/ibmphp_ebda.c b/drivers/pci/hotplug/ibmphp_ebda.c
index 5becbdee4027..2850e64dedae 100644
--- a/drivers/pci/hotplug/ibmphp_ebda.c
+++ b/drivers/pci/hotplug/ibmphp_ebda.c
@@ -276,6 +276,12 @@ int __init ibmphp_access_ebda (void)
 
 	for (;;) {
 		offset = next_offset;
+
+		/* Make sure what we read is still in the mapped section */
+		if (WARN(offset > (ebda_sz * 1024 - 4),
+			 "ibmphp_ebda: next read is beyond ebda_sz\n"))
+			break;
+
 		next_offset = readw (io_mem + offset);	/* offset of next blk */
 
 		offset += 2;

