commit 3d6f1c7212d0823cbc056b1c184c7fe0cfef553a
Author: Stephen Boyd <sboyd@codeaurora.org>
Date:   Fri Jan 29 17:09:01 2016 -0800

    clk: axi-clkgen: Remove sometimes impossible check
    
    The size of unsigned long on 64-bit architectures is equal to the
    size of u64, so this check is impossible there. This throws off
    static checkers:
    
    drivers/clk/clk-axi-clkgen.c:331 axi_clkgen_recalc_rate() warn:
    impossible condition '(tmp > (~0)) => (0-u64max > u64max)'
    
    Let's change this code to use min_t() instead so that we
    get the same effect on architectures where sizeof(unsigned long)
    doesn't equal sizeof(u64).
    
    Cc: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>

diff --git a/drivers/clk/clk-axi-clkgen.c b/drivers/clk/clk-axi-clkgen.c
index 9a0744c9947c..3294db3b4e4e 100644
--- a/drivers/clk/clk-axi-clkgen.c
+++ b/drivers/clk/clk-axi-clkgen.c
@@ -328,10 +328,7 @@ static unsigned long axi_clkgen_recalc_rate(struct clk_hw *clk_hw,
 	tmp = (unsigned long long)(parent_rate / d) * m;
 	do_div(tmp, dout);
 
-	if (tmp > ULONG_MAX)
-		return ULONG_MAX;
-
-	return tmp;
+	return min_t(unsigned long long, tmp, ULONG_MAX);
 }
 
 static int axi_clkgen_enable(struct clk_hw *clk_hw)

