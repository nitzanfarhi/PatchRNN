commit a487a8f7b6947f6445e5a1aa876522916785d5ec
Author: Auke Kok <auke-jan.h.kok@intel.com>
Date:   Fri Jun 9 11:29:03 2006 -0700

    e1000: prevent statistics from garbling during bus resets
    
    If a PCI bus error/fault triggers a PCI bus reset, attempts to get
    the ethernet packet count statistics from the hardware will fail,
    returning garbage data upstream.  This patch skips statistics data
    collection if the PCI device is not on the bus.
    
    Signed-off-by: Linas Vepstas <linas@austin.ibm.com>
    Cc: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Acked-by: Auke Kok <auke-jan.h.kok@intel.com>

diff --git a/drivers/net/e1000/e1000_main.c b/drivers/net/e1000/e1000_main.c
index 56c7492e3e91..a373ccb308d8 100644
--- a/drivers/net/e1000/e1000_main.c
+++ b/drivers/net/e1000/e1000_main.c
@@ -3045,14 +3045,20 @@ void
 e1000_update_stats(struct e1000_adapter *adapter)
 {
 	struct e1000_hw *hw = &adapter->hw;
+	struct pci_dev *pdev = adapter->pdev;
 	unsigned long flags;
 	uint16_t phy_tmp;
 
 #define PHY_IDLE_ERROR_COUNT_MASK 0x00FF
 
-	/* Prevent stats update while adapter is being reset */
+	/*
+	 * Prevent stats update while adapter is being reset, or if the pci
+	 * connection is down.
+	 */
 	if (adapter->link_speed == 0)
 		return;
+	if (pdev->error_state && pdev->error_state != pci_channel_io_normal)
+		return;
 
 	spin_lock_irqsave(&adapter->stats_lock, flags);
 

