commit 1f2e98b62d62205de9d52e81aca78e78712af973
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Tue May 3 12:48:09 2011 -0600

    exec: Implement qemu_ram_free_from_ptr()
    
    Required for regions mapped via qemu_ram_alloc_from_ptr().  VFIO
    and ivshmem will make use of this to remove mappings when devices
    are hot unplugged.
    
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>

diff --git a/cpu-common.h b/cpu-common.h
index 151c32c1f2..9f5917224a 100644
--- a/cpu-common.h
+++ b/cpu-common.h
@@ -61,6 +61,7 @@ ram_addr_t qemu_ram_alloc_from_ptr(DeviceState *dev, const char *name,
                         ram_addr_t size, void *host);
 ram_addr_t qemu_ram_alloc(DeviceState *dev, const char *name, ram_addr_t size);
 void qemu_ram_free(ram_addr_t addr);
+void qemu_ram_free_from_ptr(ram_addr_t addr);
 void qemu_ram_remap(ram_addr_t addr, ram_addr_t length);
 /* This should only be used for ram local to a device.  */
 void *qemu_get_ram_ptr(ram_addr_t addr);
diff --git a/exec.c b/exec.c
index 8529390cb2..6f339efb10 100644
--- a/exec.c
+++ b/exec.c
@@ -2952,6 +2952,19 @@ ram_addr_t qemu_ram_alloc(DeviceState *dev, const char *name, ram_addr_t size)
     return qemu_ram_alloc_from_ptr(dev, name, size, NULL);
 }
 
+void qemu_ram_free_from_ptr(ram_addr_t addr)
+{
+    RAMBlock *block;
+
+    QLIST_FOREACH(block, &ram_list.blocks, next) {
+        if (addr == block->offset) {
+            QLIST_REMOVE(block, next);
+            qemu_free(block);
+            return;
+        }
+    }
+}
+
 void qemu_ram_free(ram_addr_t addr)
 {
     RAMBlock *block;

