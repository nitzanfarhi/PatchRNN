commit 36a8d169bcb955bed58f33a1eaba242fe17b79af
Author: Embedthis Software <dev@embedthis.com>
Date:   Tue Jun 17 11:35:40 2014 -0700

    FIX: trace for connections

diff --git a/src/paks/http/httpLib.c b/src/paks/http/httpLib.c
index 0e897c24d..d0f0abf07 100644
--- a/src/paks/http/httpLib.c
+++ b/src/paks/http/httpLib.c
@@ -4519,7 +4519,7 @@ PUBLIC void httpIOEvent(HttpConn *conn, MprEvent *event)
                 "secure=true, cipher=%s, peerName=\"%s\", subject=\"%s\", issuer=\"%s\"", 
                 sp->cipher, sp->peerName, sp->peerCert, sp->peerCertIssuer);
         } else {
-            httpTrace(conn, "connection", "Connection secured but without peer certificate", 
+            httpTrace(conn, "connection", "Connection secured without peer certificate", 
                 "secure=true, cipher=%s", sp->cipher);
         }
     }
@@ -13601,22 +13601,13 @@ static bool parseRequestLine(HttpConn *conn, HttpPacket *packet)
     conn->started = conn->http->now;
 
     if (httpTracing(conn)) {
-        /*
-            Trace either just the first line or the entire headers
-         */
-        if (!httpShouldTrace(conn, "headers")) {
-            traceRequired = 1;
-#if UNUSED
-            content = packet->content;
-            endp = strstr((char*) content->start, "\r\n");
-            len = (endp) ? (int) (endp - content->start + 2) : 0;
-            httpTraceContent(conn, "first", content->start, len, 0, "peer=%s", conn->ip);
-#endif
-        } else {
+        if (httpShouldTrace(conn, "headers")) {
             content = packet->content;
             endp = strstr((char*) content->start, "\r\n\r\n");
             len = (endp) ? (int) (endp - content->start + 2) : 0;
             httpTraceContent(conn, "headers", content->start, len, 0, "peer=%s", conn->ip);
+        } else {
+            traceRequired = 1;
         }
     }
     rx->originalMethod = rx->method = supper(getToken(conn, 0));

