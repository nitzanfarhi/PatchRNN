commit 797b608638c5ac7492e789563bcbed9feff0423d
Author: Halil Pasic <pasic@linux.vnet.ibm.com>
Date:   Thu Dec 10 12:55:06 2015 +0100

    virtio-ccw: Check the number of vqs in CCW_CMD_SET_IND
    
    We cannot support more than 64 virtqueues with the 64 bits provided by
    classic indicators. If a driver tries to setup classic indicators
    (which it is free to do even for virtio-1 devices) for a device with
    more than 64 virtqueues, we should reject the attempt so that the
    driver does not end up with an unusable device.
    
    This is in preparation for bumping the number of supported virtqueues
    on the ccw transport.
    
    Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>
    Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>

diff --git a/hw/s390x/virtio-ccw.c b/hw/s390x/virtio-ccw.c
index 613d8c6615..771411ea3c 100644
--- a/hw/s390x/virtio-ccw.c
+++ b/hw/s390x/virtio-ccw.c
@@ -35,6 +35,8 @@
 #include "trace.h"
 #include "hw/s390x/css-bridge.h"
 
+#define NR_CLASSIC_INDICATOR_BITS 64
+
 static void virtio_ccw_bus_new(VirtioBusState *bus, size_t bus_size,
                                VirtioCcwDevice *dev);
 
@@ -509,6 +511,11 @@ static int virtio_ccw_cb(SubchDev *sch, CCW1 ccw)
             ret = -ENOSYS;
             break;
         }
+        if (virtio_get_num_queues(vdev) > NR_CLASSIC_INDICATOR_BITS) {
+            /* More queues than indicator bits --> trigger a reject */
+            ret = -ENOSYS;
+            break;
+        }
         if (!ccw.cda) {
             ret = -EFAULT;
         } else {

