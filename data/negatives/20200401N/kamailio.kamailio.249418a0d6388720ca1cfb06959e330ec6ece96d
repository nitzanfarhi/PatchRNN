commit 249418a0d6388720ca1cfb06959e330ec6ece96d
Author: Jan Janak <jan@iptel.org>
Date:   Mon Apr 14 11:13:50 2003 +0000

    - enable_full_lr parameter added, disabled by default

diff --git a/modules_s/rr/record.c b/modules_s/rr/record.c
index 0de3e591d..3b8b454ba 100644
--- a/modules_s/rr/record.c
+++ b/modules_s/rr/record.c
@@ -48,6 +48,9 @@
 #define RR_LR_TERM ";lr>"
 #define RR_LR_TERM_LEN (sizeof(RR_LR_TERM)-1)
 
+#define RR_LR_FULL_TERM ";lr=on>"
+#define RR_LR_FULL_TERM_LEN (sizeof(RR_LR_FULL_TERM)-1)
+
 #define RR_SR_TERM ">"
 #define RR_SR_TERM_LEN (sizeof(RR_SR_TERM)-1)
 
@@ -104,7 +107,11 @@ static inline int build_rr(struct lump* _l, struct lump* _l2, int _lr, str* user
 
 	prefix_len = RR_PREFIX_LEN + (user->len ? (user->len + 1) : 0);
 	prefix = pkg_malloc(prefix_len);
-	suffix_len = (_lr ? RR_LR_TERM_LEN : RR_SR_TERM_LEN) + (tag->len ? (RR_FROMTAG_LEN + tag->len) : 0);
+	if (enable_full_lr) {
+		suffix_len = (_lr ? RR_LR_FULL_TERM_LEN : RR_SR_TERM_LEN) + (tag->len ? (RR_FROMTAG_LEN + tag->len) : 0);
+	} else {
+		suffix_len = (_lr ? RR_LR_TERM_LEN : RR_SR_TERM_LEN) + (tag->len ? (RR_FROMTAG_LEN + tag->len) : 0);
+	}
 	suffix = pkg_malloc(suffix_len);
 	
 	crlf = pkg_malloc(2);
@@ -129,9 +136,17 @@ static inline int build_rr(struct lump* _l, struct lump* _l2, int _lr, str* user
 	if (tag->len) {
 		memcpy(suffix, RR_FROMTAG, RR_FROMTAG_LEN);
 		memcpy(suffix + RR_FROMTAG_LEN, tag->s, tag->len);
-		memcpy(suffix + RR_FROMTAG_LEN + tag->len, _lr ? RR_LR_TERM : RR_SR_TERM, _lr ? RR_LR_TERM_LEN : RR_SR_TERM_LEN);
+		if (enable_full_lr) {
+			memcpy(suffix + RR_FROMTAG_LEN + tag->len, _lr ? RR_LR_FULL_TERM : RR_SR_TERM, _lr ? RR_LR_FULL_TERM_LEN : RR_SR_TERM_LEN);
+		} else {
+			memcpy(suffix + RR_FROMTAG_LEN + tag->len, _lr ? RR_LR_TERM : RR_SR_TERM, _lr ? RR_LR_TERM_LEN : RR_SR_TERM_LEN);
+		}
 	} else {
-		memcpy(suffix, _lr ? RR_LR_TERM : RR_SR_TERM, _lr ? RR_LR_TERM_LEN : RR_SR_TERM_LEN);
+		if (enable_full_lr) {
+			memcpy(suffix, _lr ? RR_LR_FULL_TERM : RR_SR_TERM, _lr ? RR_LR_FULL_TERM_LEN : RR_SR_TERM_LEN);
+		} else {
+			memcpy(suffix, _lr ? RR_LR_TERM : RR_SR_TERM, _lr ? RR_LR_TERM_LEN : RR_SR_TERM_LEN);
+		}
 	}
 	
 	memcpy(crlf, CRLF, 2);
@@ -300,7 +315,11 @@ int record_route_preset(struct sip_msg* _m, char* _data, char* _s2)
 		hdr_len += RR_FROMTAG_LEN + from->tag_value.len;
 	}
 	
-	hdr_len += RR_LR_TERM_LEN;
+	if (enable_full_lr) {
+		hdr_len += RR_LR_FULL_TERM_LEN;
+	} else {
+		hdr_len += RR_LR_TERM_LEN;
+	}
 
 	hdr_len += 2; /* CRLF */
 
@@ -329,8 +348,13 @@ int record_route_preset(struct sip_msg* _m, char* _data, char* _s2)
 		p += from->tag_value.len;
 	}
 
-	memcpy(p, RR_LR_TERM, RR_LR_TERM_LEN);
-	p += RR_LR_TERM_LEN;
+	if (enable_full_lr) {
+		memcpy(p, RR_LR_FULL_TERM, RR_LR_FULL_TERM_LEN);
+		p += RR_LR_FULL_TERM_LEN;
+	} else {
+		memcpy(p, RR_LR_TERM, RR_LR_TERM_LEN);
+		p += RR_LR_TERM_LEN;
+	}
 
 	memcpy(p, CRLF, 2);
 
diff --git a/modules_s/rr/rr_mod.c b/modules_s/rr/rr_mod.c
index c4453bd68..a335b7a64 100644
--- a/modules_s/rr/rr_mod.c
+++ b/modules_s/rr/rr_mod.c
@@ -32,6 +32,7 @@
  *  2003-03-16  flags export parameter added (janakj)
  *  2003-03-19  all mallocs/frees replaced w/ pkg_malloc/pkg_free (andrei)
  *  2003-04-01  Added record_route with ip address parameter (janakj)
+ *  2003-04-14  enable_full_lr parameter introduced (janakj)
  */
 
 
@@ -46,6 +47,7 @@
 
 int append_fromtag = 1;
 int enable_double_rr = 1; /* Enable using of 2 RR by default */
+int enable_full_lr = 0;   /* Disabled by default */
 
 static int mod_init(void);
 static int str_fixup(void** param, int param_no);
@@ -76,7 +78,8 @@ static cmd_export_t cmds[] = {
 static param_export_t params[] ={ 
 	{"append_fromtag",   INT_PARAM, &append_fromtag  },
 	{"enable_double_rr", INT_PARAM, &enable_double_rr},
-	{0, 0,0 }
+	{"enable_full_lr",   INT_PARAM, &enable_full_lr  },
+	{0, 0, 0 }
 };
 
 
diff --git a/modules_s/rr/rr_mod.h b/modules_s/rr/rr_mod.h
index 4b38c55b3..3ccd3ddb6 100644
--- a/modules_s/rr/rr_mod.h
+++ b/modules_s/rr/rr_mod.h
@@ -39,6 +39,7 @@
 
 extern int append_fromtag;
 extern int enable_double_rr;
+extern int enable_full_lr;
 
 
 #endif /* RR_MOD_H */

