commit bfcd10e276c0fec88a2301301465ddef9e4b5b42
Author: nicm <nicm@openbsd.org>
Date:   Thu Apr 17 14:45:49 2014 +0000

    Some more long lines.

diff --git a/usr.bin/tmux/cmd-find-window.c b/usr.bin/tmux/cmd-find-window.c
index cab9c7e6b67..6ff9e4098d8 100644
--- a/usr.bin/tmux/cmd-find-window.c
+++ b/usr.bin/tmux/cmd-find-window.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: cmd-find-window.c,v 1.25 2013/10/10 12:00:19 nicm Exp $ */
+/* $OpenBSD: cmd-find-window.c,v 1.26 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2009 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -84,7 +84,8 @@ cmd_find_window_match_flags(struct args *args)
 
 void
 cmd_find_window_match(struct cmd_find_window_data_list *find_list,
-    int match_flags, struct winlink *wl, const char *str, const char *searchstr)
+    int match_flags, struct winlink *wl, const char *str,
+    const char *searchstr)
 {
 	struct cmd_find_window_data	 find_data;
 	struct window_pane		*wp;
diff --git a/usr.bin/tmux/cmd-set-option.c b/usr.bin/tmux/cmd-set-option.c
index 86a659d9b4b..b688854ebca 100644
--- a/usr.bin/tmux/cmd-set-option.c
+++ b/usr.bin/tmux/cmd-set-option.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: cmd-set-option.c,v 1.68 2014/04/17 07:55:43 nicm Exp $ */
+/* $OpenBSD: cmd-set-option.c,v 1.69 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2007 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -267,7 +267,8 @@ cmd_set_option_user(struct cmd *self, struct cmd_q *cmdq, const char* optstr,
 /* Unset an option. */
 int
 cmd_set_option_unset(struct cmd *self, struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	struct args	*args = self->args;
 
@@ -287,7 +288,8 @@ cmd_set_option_unset(struct cmd *self, struct cmd_q *cmdq,
 /* Set an option. */
 int
 cmd_set_option_set(struct cmd *self, struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	struct options_entry	*o;
 
@@ -335,7 +337,8 @@ cmd_set_option_set(struct cmd *self, struct cmd_q *cmdq,
 /* Set a string option. */
 struct options_entry *
 cmd_set_option_string(struct cmd *self, unused struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	struct args		*args = self->args;
 	struct options_entry	*o;
@@ -356,7 +359,8 @@ cmd_set_option_string(struct cmd *self, unused struct cmd_q *cmdq,
 /* Set a number option. */
 struct options_entry *
 cmd_set_option_number(unused struct cmd *self, struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	long long	 ll;
 	const char     	*errstr;
@@ -373,7 +377,8 @@ cmd_set_option_number(unused struct cmd *self, struct cmd_q *cmdq,
 /* Set a key option. */
 struct options_entry *
 cmd_set_option_key(unused struct cmd *self, struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	int	key;
 
@@ -388,7 +393,8 @@ cmd_set_option_key(unused struct cmd *self, struct cmd_q *cmdq,
 /* Set a colour option. */
 struct options_entry *
 cmd_set_option_colour(unused struct cmd *self, struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	int	colour;
 
@@ -403,7 +409,8 @@ cmd_set_option_colour(unused struct cmd *self, struct cmd_q *cmdq,
 /* Set an attributes option. */
 struct options_entry *
 cmd_set_option_attributes(unused struct cmd *self, struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	int	attr;
 
@@ -418,7 +425,8 @@ cmd_set_option_attributes(unused struct cmd *self, struct cmd_q *cmdq,
 /* Set a flag option. */
 struct options_entry *
 cmd_set_option_flag(unused struct cmd *self, struct cmd_q *cmdq,
-    const struct options_table_entry *oe, struct options *oo, const char *value)
+    const struct options_table_entry *oe, struct options *oo,
+    const char *value)
 {
 	int	flag;
 
diff --git a/usr.bin/tmux/environ.c b/usr.bin/tmux/environ.c
index 7cbfa3566f1..936f9f0899f 100644
--- a/usr.bin/tmux/environ.c
+++ b/usr.bin/tmux/environ.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: environ.c,v 1.5 2012/07/10 11:53:01 nicm Exp $ */
+/* $OpenBSD: environ.c,v 1.6 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2009 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -137,7 +137,8 @@ environ_unset(struct environ *env, const char *name)
  * environment.
  */
 void
-environ_update(const char *vars, struct environ *srcenv, struct environ *dstenv)
+environ_update(const char *vars, struct environ *srcenv,
+    struct environ *dstenv)
 {
 	struct environ_entry	*envent;
 	char			*copyvars, *var, *next;
diff --git a/usr.bin/tmux/grid-view.c b/usr.bin/tmux/grid-view.c
index 6c2442df9cf..340e41993fd 100644
--- a/usr.bin/tmux/grid-view.c
+++ b/usr.bin/tmux/grid-view.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: grid-view.c,v 1.15 2014/03/31 21:42:27 nicm Exp $ */
+/* $OpenBSD: grid-view.c,v 1.16 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2008 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -131,7 +131,8 @@ grid_view_insert_lines(struct grid *gd, u_int py, u_int ny)
 
 /* Insert lines in region. */
 void
-grid_view_insert_lines_region(struct grid *gd, u_int rlower, u_int py, u_int ny)
+grid_view_insert_lines_region(struct grid *gd, u_int rlower, u_int py,
+    u_int ny)
 {
 	u_int	ny2;
 
@@ -160,7 +161,8 @@ grid_view_delete_lines(struct grid *gd, u_int py, u_int ny)
 
 /* Delete lines inside scroll region. */
 void
-grid_view_delete_lines_region(struct grid *gd, u_int rlower, u_int py, u_int ny)
+grid_view_delete_lines_region(struct grid *gd, u_int rlower, u_int py,
+    u_int ny)
 {
 	u_int	ny2;
 
diff --git a/usr.bin/tmux/layout-set.c b/usr.bin/tmux/layout-set.c
index 54299b26349..e7c1514d73d 100644
--- a/usr.bin/tmux/layout-set.c
+++ b/usr.bin/tmux/layout-set.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: layout-set.c,v 1.10 2011/11/09 12:02:07 nicm Exp $ */
+/* $OpenBSD: layout-set.c,v 1.11 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2009 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -23,8 +23,8 @@
 #include "tmux.h"
 
 /*
- * Set window layouts - predefined methods to arrange windows. These are one-off
- * and generate a layout tree.
+ * Set window layouts - predefined methods to arrange windows. These are
+ * one-off and generate a layout tree.
  */
 
 void	layout_set_even_h(struct window *);
diff --git a/usr.bin/tmux/screen-write.c b/usr.bin/tmux/screen-write.c
index 1d49428d5a8..3d3220a162d 100644
--- a/usr.bin/tmux/screen-write.c
+++ b/usr.bin/tmux/screen-write.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: screen-write.c,v 1.68 2014/01/28 23:07:09 nicm Exp $ */
+/* $OpenBSD: screen-write.c,v 1.69 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2007 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -65,7 +65,8 @@ screen_write_reset(struct screen_write_ctx *ctx)
 
 /* Write character. */
 void
-screen_write_putc(struct screen_write_ctx *ctx, struct grid_cell *gc, u_char ch)
+screen_write_putc(struct screen_write_ctx *ctx, struct grid_cell *gc,
+    u_char ch)
 {
 	grid_cell_one(gc, ch);
 	screen_write_cell(ctx, gc);
diff --git a/usr.bin/tmux/server-fn.c b/usr.bin/tmux/server-fn.c
index e3067807202..0580095c041 100644
--- a/usr.bin/tmux/server-fn.c
+++ b/usr.bin/tmux/server-fn.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: server-fn.c,v 1.75 2014/02/14 13:59:01 nicm Exp $ */
+/* $OpenBSD: server-fn.c,v 1.76 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2007 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -291,7 +291,8 @@ server_kill_window(struct window *w)
 
 int
 server_link_window(struct session *src, struct winlink *srcwl,
-    struct session *dst, int dstidx, int killflag, int selectflag, char **cause)
+    struct session *dst, int dstidx, int killflag, int selectflag,
+    char **cause)
 {
 	struct winlink		*dstwl;
 	struct session_group	*srcsg, *dstsg;
diff --git a/usr.bin/tmux/server.c b/usr.bin/tmux/server.c
index ce7ea727e65..3924159ae1b 100644
--- a/usr.bin/tmux/server.c
+++ b/usr.bin/tmux/server.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: server.c,v 1.111 2013/10/20 17:28:43 nicm Exp $ */
+/* $OpenBSD: server.c,v 1.112 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2007 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -216,7 +216,7 @@ server_loop(void)
 	}
 }
 
-/* Check if the server should be shutting down (no more clients or sessions). */
+/* Check if the server should exit (no more clients or sessions). */
 int
 server_should_shutdown(void)
 {
diff --git a/usr.bin/tmux/tty.c b/usr.bin/tmux/tty.c
index 9a16ebf0f8e..692f04d5353 100644
--- a/usr.bin/tmux/tty.c
+++ b/usr.bin/tmux/tty.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: tty.c,v 1.167 2014/04/17 12:57:28 nicm Exp $ */
+/* $OpenBSD: tty.c,v 1.168 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2007 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -548,8 +548,8 @@ tty_update_mode(struct tty *tty, int mode, struct screen *s)
 }
 
 void
-tty_emulate_repeat(
-    struct tty *tty, enum tty_code_code code, enum tty_code_code code1, u_int n)
+tty_emulate_repeat(struct tty *tty, enum tty_code_code code,
+    enum tty_code_code code1, u_int n)
 {
 	if (tty_term_has(tty->term, code))
 		tty_putcode1(tty, code, n);
diff --git a/usr.bin/tmux/utf8.c b/usr.bin/tmux/utf8.c
index 0e03aac80bb..85300f7ab90 100644
--- a/usr.bin/tmux/utf8.c
+++ b/usr.bin/tmux/utf8.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: utf8.c,v 1.9 2014/04/02 18:12:18 nicm Exp $ */
+/* $OpenBSD: utf8.c,v 1.10 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2008 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -247,8 +247,7 @@ utf8_append(struct utf8_data *utf8data, u_char ch)
 
 /* Check if two width tree entries overlap. */
 int
-utf8_overlap(
-    struct utf8_width_entry *item1, struct utf8_width_entry *item2)
+utf8_overlap(struct utf8_width_entry *item1, struct utf8_width_entry *item2)
 {
 	if (item1->first >= item2->first && item1->first <= item2->last)
 		return (1);
diff --git a/usr.bin/tmux/window-copy.c b/usr.bin/tmux/window-copy.c
index 32065cf5e12..d82042b8a68 100644
--- a/usr.bin/tmux/window-copy.c
+++ b/usr.bin/tmux/window-copy.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: window-copy.c,v 1.105 2014/04/11 19:35:54 nicm Exp $ */
+/* $OpenBSD: window-copy.c,v 1.106 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2007 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -2033,7 +2033,8 @@ window_copy_cursor_next_word(struct window_pane *wp, const char *separators)
 }
 
 void
-window_copy_cursor_next_word_end(struct window_pane *wp, const char *separators)
+window_copy_cursor_next_word_end(struct window_pane *wp,
+    const char *separators)
 {
 	struct window_copy_mode_data	*data = wp->modedata;
 	struct options			*oo = &wp->window->options;
@@ -2084,7 +2085,8 @@ window_copy_cursor_next_word_end(struct window_pane *wp, const char *separators)
 
 /* Move to the previous place where a word begins. */
 void
-window_copy_cursor_previous_word(struct window_pane *wp, const char *separators)
+window_copy_cursor_previous_word(struct window_pane *wp,
+    const char *separators)
 {
 	struct window_copy_mode_data	*data = wp->modedata;
 	u_int				 px, py;
diff --git a/usr.bin/tmux/window.c b/usr.bin/tmux/window.c
index e90d351e465..9f3944ba56d 100644
--- a/usr.bin/tmux/window.c
+++ b/usr.bin/tmux/window.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: window.c,v 1.107 2014/04/17 13:02:59 nicm Exp $ */
+/* $OpenBSD: window.c,v 1.108 2014/04/17 14:45:49 nicm Exp $ */
 
 /*
  * Copyright (c) 2007 Nicholas Marriott <nicm@users.sourceforge.net>
@@ -1162,7 +1162,8 @@ window_pane_visible(struct window_pane *wp)
 }
 
 char *
-window_pane_search(struct window_pane *wp, const char *searchstr, u_int *lineno)
+window_pane_search(struct window_pane *wp, const char *searchstr,
+    u_int *lineno)
 {
 	struct screen	*s = &wp->base;
 	char		*newsearchstr, *line, *msg;

