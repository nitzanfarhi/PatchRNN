commit 9f455d299328306ea0719a955de51c051b8319a1
Author: William A. Rowe Jr <wrowe@apache.org>
Date:   Thu Mar 27 23:34:06 2003 +0000

      Fix a serious bug where the 'next' generation of the server would open
      a brand new mutex.  This patch creates a single mutex in the first config
      phase that survives for the life of the server (server->process->pool).
    
      Now one server generation to the next will respect the same mutex between
      one another, while the previous generation is still mopping up.
    
    
    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@99095 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/modules/ssl/ssl_engine_mutex.c b/modules/ssl/ssl_engine_mutex.c
index 9e27cc98a5..4ff13e829f 100644
--- a/modules/ssl/ssl_engine_mutex.c
+++ b/modules/ssl/ssl_engine_mutex.c
@@ -73,8 +73,12 @@ int ssl_mutex_init(server_rec *s, apr_pool_t *p)
     if (mc->nMutexMode == SSL_MUTEXMODE_NONE) 
         return TRUE;
 
+    if (ssl_config_global_isfixed(mc)) {
+        return TRUE;
+    }
     if ((rv = apr_global_mutex_create(&mc->pMutex, mc->szMutexFile,
-                                mc->nMutexMech, p)) != APR_SUCCESS) {
+                                      mc->nMutexMech, s->process->pool))
+            != APR_SUCCESS) {
         if (mc->szMutexFile)
             ap_log_error(APLOG_MARK, APLOG_ERR, rv, s,
                          "Cannot create SSLMutex with file `%s'",

