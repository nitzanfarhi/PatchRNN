commit 32a1f050b3292478f3b130c16ad66f22e6eb25c8
Author: Manuel Nickschas <sputnick@quassel-irc.org>
Date:   Thu Feb 5 23:49:30 2009 +0100

    Emit signal on selection change, ensure currentIndex is first item in selectedItems()

diff --git a/src/uisupport/nickview.cpp b/src/uisupport/nickview.cpp
index 98fbee3b..1a1c4bba 100644
--- a/src/uisupport/nickview.cpp
+++ b/src/uisupport/nickview.cpp
@@ -48,7 +48,6 @@ NickView::NickView(QWidget *parent)
   setItemDelegate(newDelegate);
   delete oldDelegate;
 
-  
   setIndentation(10);
   setAnimated(true);
   header()->hide();
@@ -75,10 +74,16 @@ void NickView::init() {
 
   for(int i = 1; i < model()->columnCount(); i++)
     setColumnHidden(i, true);
+
+  connect(selectionModel(), SIGNAL(currentChanged(QModelIndex, QModelIndex)), SIGNAL(selectionUpdated()));
+  connect(selectionModel(), SIGNAL(selectionChanged(QItemSelection, QItemSelection)), SIGNAL(selectionUpdated()));
 }
 
-void NickView::setModel(QAbstractItemModel *model) {
-  QTreeView::setModel(model);
+void NickView::setModel(QAbstractItemModel *model_) {
+  if(model())
+    disconnect(model(), 0, this, 0);
+
+  QTreeView::setModel(model_);
   init();
 }
 
@@ -95,18 +100,22 @@ void NickView::setRootIndex(const QModelIndex &index) {
     QCoreApplication::postEvent(this, new ExpandAllEvent);
 }
 
-void NickView::showContextMenu(const QPoint & pos ) {
-  QModelIndex index = indexAt(pos);
-  if(index.data(NetworkModel::ItemTypeRole) != NetworkModel::IrcUserItemType)
-    return;
+QModelIndexList NickView::selectedIndexes() const {
+  QModelIndexList indexList = QTreeView::selectedIndexes();
 
-  QModelIndexList indexList = selectedIndexes();
   // make sure the item we clicked on is first
-  indexList.removeAll(index);
-  indexList.prepend(index);
+  Q_ASSERT(indexList.contains(currentIndex()));
+  indexList.removeAll(currentIndex());
+  indexList.prepend(currentIndex());
+
+  return indexList;
+}
+
+void NickView::showContextMenu(const QPoint &pos ) {
+  Q_UNUSED(pos);
 
   QMenu contextMenu(this);
-  GraphicalUi::contextMenuActionProvider()->addActions(&contextMenu, indexList);
+  GraphicalUi::contextMenuActionProvider()->addActions(&contextMenu, selectedIndexes());
   contextMenu.exec(QCursor::pos());
 }
 
diff --git a/src/uisupport/nickview.h b/src/uisupport/nickview.h
index 8a7972d0..d77f1786 100644
--- a/src/uisupport/nickview.h
+++ b/src/uisupport/nickview.h
@@ -35,6 +35,9 @@ protected:
   virtual void rowsInserted(const QModelIndex &parent, int start, int end);
   virtual void customEvent(QEvent *event);
 
+  //! This reimplementation ensures that the current index is first in list
+  virtual QModelIndexList selectedIndexes() const;
+
 public slots:
   virtual void setModel(QAbstractItemModel *model);
   virtual void setRootIndex(const QModelIndex &index);
@@ -42,6 +45,9 @@ public slots:
   void showContextMenu(const QPoint & pos);
   void startQuery(const QModelIndex & modelIndex);
 
+signals:
+  void selectionUpdated();
+
 private:
 
 };

