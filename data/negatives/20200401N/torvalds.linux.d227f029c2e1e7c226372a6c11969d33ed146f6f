commit d227f029c2e1e7c226372a6c11969d33ed146f6f
Author: Yi Zou <yi.zou@intel.com>
Date:   Fri Apr 20 12:16:49 2012 -0700

    [SCSI] libfcoe: fix VN2VN N_Port_ID Beacon source MAC
    
    FC-BB-6 v1.04 7.9.8.14 N_Port_ID Beacon:
    
    "A N_Port_ID Beacon is multicast and uses the VN_Port MAC address as source
    address."
    
    Currently, libfcoe is using ENode MAC, this seems ok and functionality wise
    not a problem in my back to back testing setup, however, just fix this to
    make libfcoe VN2VN support more spec compliant.
    
    Signed-off-by: Yi Zou <yi.zou@intel.com>
    Signed-off-by: Robert Love <robert.w.love@intel.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

diff --git a/drivers/scsi/fcoe/fcoe_ctlr.c b/drivers/scsi/fcoe/fcoe_ctlr.c
index 249a106888d9..5a4c7250aa77 100644
--- a/drivers/scsi/fcoe/fcoe_ctlr.c
+++ b/drivers/scsi/fcoe/fcoe_ctlr.c
@@ -1883,7 +1883,13 @@ static void fcoe_ctlr_vn_send(struct fcoe_ctlr *fip,
 	frame = (struct fip_frame *)skb->data;
 	memset(frame, 0, len);
 	memcpy(frame->eth.h_dest, dest, ETH_ALEN);
-	memcpy(frame->eth.h_source, fip->ctl_src_addr, ETH_ALEN);
+
+	if (sub == FIP_SC_VN_BEACON) {
+		hton24(frame->eth.h_source, FIP_VN_FC_MAP);
+		hton24(frame->eth.h_source + 3, fip->port_id);
+	} else {
+		memcpy(frame->eth.h_source, fip->ctl_src_addr, ETH_ALEN);
+	}
 	frame->eth.h_proto = htons(ETH_P_FIP);
 
 	frame->fip.fip_ver = FIP_VER_ENCAPS(FIP_VER);

