commit ff5f1be0fe7301f0090d22725b4c0e09e6546d25
Author: S.N. Hemanth Meenakshisundaram <smeenaks@ucsd.edu>
Date:   Sat Jul 17 18:55:56 2010 +0000

    Move the AV_PERM_* flags definition outside the AVFilterPicRef
    definition.
    
    This way it is easier to reference them in other structures, for
    example in the pending AVFilterSamplesRef struct.
    
    Patch by S.N. Hemanth Meenakshisundaram smeenaks AT ucsd DOT edu.
    
    Originally committed as revision 24294 to svn://svn.ffmpeg.org/ffmpeg/trunk

diff --git a/libavfilter/avfilter.h b/libavfilter/avfilter.h
index ac30b496e..3737d465a 100644
--- a/libavfilter/avfilter.h
+++ b/libavfilter/avfilter.h
@@ -83,6 +83,12 @@ typedef struct AVFilterBuffer
     void (*free)(struct AVFilterBuffer *buf);
 } AVFilterBuffer;
 
+#define AV_PERM_READ     0x01   ///< can read from the buffer
+#define AV_PERM_WRITE    0x02   ///< can write to the buffer
+#define AV_PERM_PRESERVE 0x04   ///< nobody else can overwrite the buffer
+#define AV_PERM_REUSE    0x08   ///< can output the buffer multiple times, with the same contents each time
+#define AV_PERM_REUSE2   0x10   ///< can output the buffer multiple times, modified each time
+
 /**
  * A reference to an AVFilterBuffer. Since filters can manipulate the origin of
  * a picture to, for example, crop image without any memcpy, the picture origin
@@ -104,12 +110,7 @@ typedef struct AVFilterPicRef
 
     AVRational pixel_aspect;    ///< pixel aspect ratio
 
-    int perms;                  ///< permissions
-#define AV_PERM_READ     0x01   ///< can read from the buffer
-#define AV_PERM_WRITE    0x02   ///< can write to the buffer
-#define AV_PERM_PRESERVE 0x04   ///< nobody else can overwrite the buffer
-#define AV_PERM_REUSE    0x08   ///< can output the buffer multiple times, with the same contents each time
-#define AV_PERM_REUSE2   0x10   ///< can output the buffer multiple times, modified each time
+    int perms;                  ///< permissions, see the AV_PERM_* flags
 
     int interlaced;             ///< is frame interlaced
     int top_field_first;

