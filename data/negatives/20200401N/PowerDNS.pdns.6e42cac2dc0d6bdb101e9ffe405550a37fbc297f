commit 6e42cac2dc0d6bdb101e9ffe405550a37fbc297f
Author: Ruben d'Arco <cyclops@prof-x.net>
Date:   Sun Mar 3 08:14:00 2013 +0100

    fix auth and ordername after replacing a record
    
    The replaceRRSet does not keep the auth & ordername fields.

diff --git a/pdns/rfc2136handler.cc b/pdns/rfc2136handler.cc
index 87c6c4c4a..75665b4e3 100755
--- a/pdns/rfc2136handler.cc
+++ b/pdns/rfc2136handler.cc
@@ -149,7 +149,31 @@ uint16_t PacketHandler::performUpdate(const string &msgPrefix, const DNSRecord *
           L<<Logger::Notice<<msgPrefix<<"Replacing record "<<rrLabel<<"|"<<rrType.getName()<<endl;
         }
       }
-    }
+
+      // ReplaceRRSet dumps our ordername and auth flag, so we need to correct it.
+      // We can take the auth flag from the first RR in the set, as the name is different, so should the auth be.
+      bool auth = rrset.front().auth;
+      if(haveNSEC3) {
+        string hashed;
+        if(!narrow) 
+          hashed=toLower(toBase32Hex(hashQNameWithSalt(ns3pr->d_iterations, ns3pr->d_salt, rrLabel)));
+        
+        di->backend->updateDNSSECOrderAndAuthAbsolute(di->id, rrLabel, hashed, auth);
+        if(!auth || rrType == QType::DS) {
+          di->backend->nullifyDNSSECOrderNameAndAuth(di->id, rrLabel, "NS");
+          di->backend->nullifyDNSSECOrderNameAndAuth(di->id, rrLabel, "A");
+          di->backend->nullifyDNSSECOrderNameAndAuth(di->id, rrLabel, "AAAA");
+        }
+
+      } else { // NSEC
+        di->backend->updateDNSSECOrderAndAuth(di->id, di->zone, rrLabel, auth);
+        if(!auth || rrType == QType::DS) {
+          di->backend->nullifyDNSSECOrderNameAndAuth(di->id, rrLabel, "A");
+          di->backend->nullifyDNSSECOrderNameAndAuth(di->id, rrLabel, "AAAA");
+        }
+      }
+
+    } // if (foundRecord)
 
     // If we haven't found a record that matches, we must add it.
     if (! foundRecord) {

