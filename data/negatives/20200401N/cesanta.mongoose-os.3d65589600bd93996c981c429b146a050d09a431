commit 3d65589600bd93996c981c429b146a050d09a431
Author: Marko Mikulicic <mkm@cesanta.com>
Date:   Tue Oct 25 11:27:07 2016 +0300

    Expose a non nul-terminated exec
    
    Requested in cesanta/v7#576
    
    PUBLISHED_FROM=f950c3ef6db3d69a54e1588544f6f84570584a66

diff --git a/v7/v7.c b/v7/v7.c
index cbdec1f7..09c47a49 100644
--- a/v7/v7.c
+++ b/v7/v7.c
@@ -5401,6 +5401,7 @@ extern "C" {
 /*
  * Execute JavaScript `js_code`. The result of evaluation is stored in
  * the `result` variable.
+ * The code can be either a JavaScript source or a precompiled bytecode.
  *
  * Return:
  *
@@ -5441,6 +5442,16 @@ struct v7_exec_opts {
 enum v7_err v7_exec_opt(struct v7 *v7, const char *js_code,
                         const struct v7_exec_opts *opts, v7_val_t *res);
 
+/*
+ * Like v7_exec but it expects an explicit length instead of treating the code
+ * as a null terminated string.
+ *
+ * The code can be either a JS source or a precompiled bytecode.
+ */
+WARN_UNUSED_RESULT
+enum v7_err v7_exec_buf(struct v7 *v7, const char *js_code, size_t len,
+                        v7_val_t *result);
+
 /*
  * Same as `v7_exec()`, but loads source code from `path` file.
  */
@@ -17597,6 +17608,12 @@ enum v7_err v7_exec_opt(struct v7 *v7, const char *js_code,
                 opts->is_json, 0, 0, res);
 }
 
+enum v7_err v7_exec_buf(struct v7 *v7, const char *js_code, size_t len,
+                        v7_val_t *res) {
+  return b_exec(v7, js_code, len, NULL, V7_UNDEFINED, V7_UNDEFINED,
+                V7_UNDEFINED, 0, 0, 0, res);
+}
+
 enum v7_err v7_parse_json(struct v7 *v7, const char *str, v7_val_t *res) {
   return b_exec(v7, str, strlen(str), NULL, V7_UNDEFINED, V7_UNDEFINED,
                 V7_UNDEFINED, 1, 0, 0, res);
diff --git a/v7/v7.h b/v7/v7.h
index 79966b00..6e46cf31 100644
--- a/v7/v7.h
+++ b/v7/v7.h
@@ -1731,6 +1731,7 @@ extern "C" {
 /*
  * Execute JavaScript `js_code`. The result of evaluation is stored in
  * the `result` variable.
+ * The code can be either a JavaScript source or a precompiled bytecode.
  *
  * Return:
  *
@@ -1771,6 +1772,16 @@ struct v7_exec_opts {
 enum v7_err v7_exec_opt(struct v7 *v7, const char *js_code,
                         const struct v7_exec_opts *opts, v7_val_t *res);
 
+/*
+ * Like v7_exec but it expects an explicit length instead of treating the code
+ * as a null terminated string.
+ *
+ * The code can be either a JS source or a precompiled bytecode.
+ */
+WARN_UNUSED_RESULT
+enum v7_err v7_exec_buf(struct v7 *v7, const char *js_code, size_t len,
+                        v7_val_t *result);
+
 /*
  * Same as `v7_exec()`, but loads source code from `path` file.
  */

