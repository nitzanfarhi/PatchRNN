commit 50246dd41ccbcb47beb06d6c1d9355f6b7137a11
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 16 08:14:51 2009 -0800

    Revert "PCI PM: Register power state of devices during initialization"
    
    This reverts commit 98e6e286d7b01deb7453b717aa38ebb69d6cefc0, as Yinghai
    Lu reports that it breaks kexec with at least the e1000 and e1000e
    drivers.  The reason is that the shutdown sequence puts the hardware
    into D3 sleep, and the commit causes us to claim that it then is in D0
    (running) state just because we don't understand the PM capabilities.
    
    Which then later makes "pci_set_power_state()" not do anything, and the
    device never wakes up properly and just returns 0xff to everything.
    
    Reported-by: Yinghai Lu <yinghai@kernel.org>
    Acked-by: From: Rafael J. Wysocki <rjw@sisk.pl>
    Cc: Jesse Barnes <jesse.barnes@intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index c12f6c790698..e491fdedf705 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -1260,15 +1260,14 @@ void pci_pm_init(struct pci_dev *dev)
 	/* find PCI PM capability in list */
 	pm = pci_find_capability(dev, PCI_CAP_ID_PM);
 	if (!pm)
-		goto Exit;
-
+		return;
 	/* Check device's ability to generate PME# */
 	pci_read_config_word(dev, pm + PCI_PM_PMC, &pmc);
 
 	if ((pmc & PCI_PM_CAP_VER_MASK) > 3) {
 		dev_err(&dev->dev, "unsupported PM cap regs version (%u)\n",
 			pmc & PCI_PM_CAP_VER_MASK);
-		goto Exit;
+		return;
 	}
 
 	dev->pm_cap = pm;
@@ -1307,9 +1306,6 @@ void pci_pm_init(struct pci_dev *dev)
 	} else {
 		dev->pme_support = 0;
 	}
-
- Exit:
-	pci_update_current_state(dev, PCI_D0);
 }
 
 /**

