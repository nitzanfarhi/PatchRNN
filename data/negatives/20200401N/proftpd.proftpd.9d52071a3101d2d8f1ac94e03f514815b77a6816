commit 9d52071a3101d2d8f1ac94e03f514815b77a6816
Author: TJ Saunders <tj@castaglia.org>
Date:   Fri Aug 12 20:40:06 2016 -0700

    Fix the handling of delayed compression for an SSH2 session in the face of
    rekeying.

diff --git a/contrib/mod_sftp/compress.c b/contrib/mod_sftp/compress.c
index 6a816b5d1..b5ed21b5b 100644
--- a/contrib/mod_sftp/compress.c
+++ b/contrib/mod_sftp/compress.c
@@ -169,7 +169,7 @@ int sftp_compress_set_read_algo(const char *algo) {
     idx = get_next_read_index();
   }
 
-  if (strncmp(algo, "zlib@openssh.com", 9) == 0) {
+  if (strncmp(algo, "zlib@openssh.com", 17) == 0) {
     read_compresses[idx].use_zlib = SFTP_COMPRESS_FL_AUTHENTICATED;
     return 0;
   }
@@ -362,7 +362,7 @@ int sftp_compress_set_write_algo(const char *algo) {
     idx = get_next_write_index();
   }
 
-  if (strncmp(algo, "zlib@openssh.com", 9) == 0) {
+  if (strncmp(algo, "zlib@openssh.com", 17) == 0) {
     write_compresses[idx].use_zlib = SFTP_COMPRESS_FL_AUTHENTICATED;
     return 0;
   }
diff --git a/contrib/mod_sftp/kex.c b/contrib/mod_sftp/kex.c
index 879ff8e9d..6489e5370 100644
--- a/contrib/mod_sftp/kex.c
+++ b/contrib/mod_sftp/kex.c
@@ -2324,6 +2324,7 @@ static int read_dh_init(struct ssh2_packet *pkt, struct sftp_kex *kex) {
 
 static int set_session_keys(struct sftp_kex *kex) {
   const char *k, *v;
+  int comp_read_flags, comp_write_flags;
 
   if (sftp_cipher_set_read_key(kex_pool, kex->hash, kex->k, kex->h,
       kex->hlen) < 0) {
@@ -2345,11 +2346,30 @@ static int set_session_keys(struct sftp_kex *kex) {
     return -1;
   }
 
-  if (sftp_compress_init_read(SFTP_COMPRESS_FL_NEW_KEY) < 0) {
+  comp_read_flags = comp_write_flags = SFTP_COMPRESS_FL_NEW_KEY;
+
+  /* If we are rekeying, AND the existing compression is "delayed", then
+   * we need to use slightly different compression flags.
+   */
+  if (kex_rekey_kex) {
+    const char *algo;
+
+    algo = sftp_compress_get_read_algo();
+    if (strncmp(algo, "zlib@openssh.com", 17) == 0) {
+      comp_read_flags = SFTP_COMPRESS_FL_AUTHENTICATED;
+    }
+
+    algo = sftp_compress_get_write_algo();
+    if (strncmp(algo, "zlib@openssh.com", 17) == 0) {
+      comp_write_flags = SFTP_COMPRESS_FL_AUTHENTICATED;
+    }
+  }
+
+  if (sftp_compress_init_read(comp_read_flags) < 0) {
     return -1;
   }
 
-  if (sftp_compress_init_write(SFTP_COMPRESS_FL_NEW_KEY) < 0) {
+  if (sftp_compress_init_write(comp_write_flags) < 0) {
     return -1;
   }
 

