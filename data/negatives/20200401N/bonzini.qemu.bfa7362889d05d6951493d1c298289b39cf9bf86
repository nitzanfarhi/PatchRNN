commit bfa7362889d05d6951493d1c298289b39cf9bf86
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Dec 22 08:51:57 2014 +0100

    serial: refine serial_thr_ipending_needed
    
    If the THR interrupt is disabled, there is no need to migrate thr_ipending
    because LSR.THRE will be sampled again when the interrupt is enabled.
    (This is the behavior that is not documented in the datasheet, but
    relied on by Windows!)
    
    Note that in this case IIR will never be 0x2 so, if thr_ipending were
    to be one, QEMU would produce the subsection.
    
    Reported-by: Igor Mammedov <imammedo@redhat.com>
    Cc: qemu-stable@nongnu.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

diff --git a/hw/char/serial.c b/hw/char/serial.c
index 6d522ff4f3..3aca87416d 100644
--- a/hw/char/serial.c
+++ b/hw/char/serial.c
@@ -645,8 +645,17 @@ static int serial_post_load(void *opaque, int version_id)
 static bool serial_thr_ipending_needed(void *opaque)
 {
     SerialState *s = opaque;
-    bool expected_value = ((s->iir & UART_IIR_ID) == UART_IIR_THRI);
-    return s->thr_ipending != expected_value;
+
+    if (s->ier & UART_IER_THRI) {
+        bool expected_value = ((s->iir & UART_IIR_ID) == UART_IIR_THRI);
+        return s->thr_ipending != expected_value;
+    } else {
+        /* LSR.THRE will be sampled again when the interrupt is
+         * enabled.  thr_ipending is not used in this case, do
+         * not migrate it.
+         */
+        return false;
+    }
 }
 
 const VMStateDescription vmstate_serial_thr_ipending = {

