commit 3da0a3ccc368ef0a2582daccb4a8082aa84cb269
Author: wm4 <wm4@nowhere>
Date:   Sun Mar 9 01:26:24 2014 +0100

    audio: don't write audio when paused
    
    This is probably "safer". Without it, we will play 1 sample, because the
    logic was written in a way to decode 1 sample if audio is paused. 1
    sample usually will initialize the audio PTS, but not play any real
    audio. Also see previous commit.
    
    In ancient times, this actually used 1 byte (instead of 1 sample), so
    clearly no sample was written, unless the audio was 8-bit mono.

diff --git a/player/audio.c b/player/audio.c
index c5c3e1e9d7..5d8d60ccd1 100644
--- a/player/audio.c
+++ b/player/audio.c
@@ -264,6 +264,8 @@ static int write_to_ao(struct MPContext *mpctx, struct mp_audio *data, int flags
 #if HAVE_ENCODING
     encode_lavc_set_audio_pts(mpctx->encode_lavc_ctx, mpctx->ao_pts);
 #endif
+    if (data->samples == 0)
+        return 0;
     double real_samplerate = out_format.rate / mpctx->opts->playback_speed;
     int played = ao_play(mpctx->ao, data->planes, data->samples, flags);
     assert(played <= data->samples);
@@ -456,6 +458,9 @@ int fill_audio_out_buffers(struct MPContext *mpctx, double endpts)
         }
     }
 
+    if (mpctx->paused)
+        playsize = 0;
+
     struct mp_audio data;
     mp_audio_buffer_peek(mpctx->ao_buffer, &data);
     data.samples = MPMIN(data.samples, playsize);

