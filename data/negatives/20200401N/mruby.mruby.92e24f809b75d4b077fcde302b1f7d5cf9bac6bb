commit 92e24f809b75d4b077fcde302b1f7d5cf9bac6bb
Author: Yukihiro "Matz" Matsumoto <matz@ruby-lang.org>
Date:   Sat Oct 28 21:44:56 2017 +0900

    Should check if `callinfo` stack is popped before updating the stack.
    
    This is a resurrection of 75c374c, which is accidentally removed by
    93f5f22; Fix #3507 #3512 #3518 #3521

diff --git a/src/vm.c b/src/vm.c
index b1e2b624..b050dfbe 100644
--- a/src/vm.c
+++ b/src/vm.c
@@ -1845,10 +1845,11 @@ RETRY_TRY_BLOCK:
       }
 
       if (mrb->exc) {
+        mrb_callinfo *ci0;
         mrb_value *stk;
 
       L_RAISE:
-        ci = mrb->c->ci;
+        ci0 = ci = mrb->c->ci;
         if (ci == mrb->c->cibase) {
           if (ci->ridx == 0) goto L_FTOP;
           goto L_RESCUE;
@@ -1900,7 +1901,9 @@ RETRY_TRY_BLOCK:
         irep = proc->body.irep;
         pool = irep->pool;
         syms = irep->syms;
-        mrb->c->stack = ci[1].stackent;
+        if (ci < ci0) {
+          mrb->c->stack = ci[1].stackent;
+        }
         stack_extend(mrb, irep->nregs);
         pc = mrb->c->rescue[--ci->ridx];
       }

