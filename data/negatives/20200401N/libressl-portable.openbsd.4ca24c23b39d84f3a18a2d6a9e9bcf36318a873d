commit 4ca24c23b39d84f3a18a2d6a9e9bcf36318a873d
Author: doug <>
Date:   Sun Jul 19 07:30:06 2015 +0000

    Fix symbol collision with libtls.
    
    Pointed out by guenther.
    
    ok guenther@

diff --git a/src/lib/libssl/s23_clnt.c b/src/lib/libssl/s23_clnt.c
index 00954777f..458eb37d5 100644
--- a/src/lib/libssl/s23_clnt.c
+++ b/src/lib/libssl/s23_clnt.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: s23_clnt.c,v 1.39 2015/07/19 06:31:32 doug Exp $ */
+/* $OpenBSD: s23_clnt.c,v 1.40 2015/07/19 07:30:06 doug Exp $ */
 /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
  * All rights reserved.
  *
@@ -120,7 +120,7 @@
 static const SSL_METHOD *ssl23_get_client_method(int ver);
 static int ssl23_client_hello(SSL *s);
 static int ssl23_get_server_hello(SSL *s);
-static const SSL_METHOD *tls_get_client_method(int ver);
+static const SSL_METHOD *tls_any_get_client_method(int ver);
 
 const SSL_METHOD SSLv23_client_method_data = {
 	.version = TLS1_2_VERSION,
@@ -160,7 +160,7 @@ const SSL_METHOD TLS_client_method_data = {
 	.ssl_clear = tls1_clear,
 	.ssl_free = tls1_free,
 	.ssl_accept = ssl_undefined_function,
-	.ssl_connect = tls_connect,
+	.ssl_connect = tls_any_connect,
 	.ssl_read = ssl23_read,
 	.ssl_peek = ssl23_peek,
 	.ssl_write = ssl23_write,
@@ -178,7 +178,7 @@ const SSL_METHOD TLS_client_method_data = {
 	.ssl_pending = ssl_undefined_const_function,
 	.num_ciphers = ssl3_num_ciphers,
 	.get_cipher = ssl3_get_cipher,
-	.get_ssl_method = tls_get_client_method,
+	.get_ssl_method = tls_any_get_client_method,
 	.get_timeout = ssl23_default_timeout,
 	.ssl3_enc = &ssl3_undef_enc_method,
 	.ssl_version = ssl_undefined_void_function,
@@ -586,7 +586,7 @@ TLS_client_method(void)
 }
 
 static const SSL_METHOD *
-tls_get_client_method(int ver)
+tls_any_get_client_method(int ver)
 {
 	if (ver == SSL3_VERSION)
 		return (NULL);
@@ -595,7 +595,7 @@ tls_get_client_method(int ver)
 }
 
 int
-tls_connect(SSL *s)
+tls_any_connect(SSL *s)
 {
 	int ret;
 	unsigned long old_options;
diff --git a/src/lib/libssl/s23_srvr.c b/src/lib/libssl/s23_srvr.c
index f1914e0e8..b52412468 100644
--- a/src/lib/libssl/s23_srvr.c
+++ b/src/lib/libssl/s23_srvr.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: s23_srvr.c,v 1.40 2015/07/19 06:31:32 doug Exp $ */
+/* $OpenBSD: s23_srvr.c,v 1.41 2015/07/19 07:30:06 doug Exp $ */
 /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
  * All rights reserved.
  *
@@ -119,7 +119,7 @@
 
 static const SSL_METHOD *ssl23_get_server_method(int ver);
 int ssl23_get_client_hello(SSL *s);
-static const SSL_METHOD *tls_get_server_method(int ver);
+static const SSL_METHOD *tls_any_get_server_method(int ver);
 
 const SSL_METHOD SSLv23_server_method_data = {
 	.version = TLS1_2_VERSION,
@@ -158,7 +158,7 @@ const SSL_METHOD TLS_server_method_data = {
 	.ssl_new = tls1_new,
 	.ssl_clear = tls1_clear,
 	.ssl_free = tls1_free,
-	.ssl_accept = tls_accept,
+	.ssl_accept = tls_any_accept,
 	.ssl_connect = ssl_undefined_function,
 	.ssl_read = ssl23_read,
 	.ssl_peek = ssl23_peek,
@@ -177,7 +177,7 @@ const SSL_METHOD TLS_server_method_data = {
 	.ssl_pending = ssl_undefined_const_function,
 	.num_ciphers = ssl3_num_ciphers,
 	.get_cipher = ssl3_get_cipher,
-	.get_ssl_method = tls_get_server_method,
+	.get_ssl_method = tls_any_get_server_method,
 	.get_timeout = ssl23_default_timeout,
 	.ssl3_enc = &ssl3_undef_enc_method,
 	.ssl_version = ssl_undefined_void_function,
@@ -611,7 +611,7 @@ TLS_server_method(void)
 }
 
 static const SSL_METHOD *
-tls_get_server_method(int ver)
+tls_any_get_server_method(int ver)
 {
 	if (ver == SSL3_VERSION)
 		return (NULL);
@@ -620,7 +620,7 @@ tls_get_server_method(int ver)
 }
 
 int
-tls_accept(SSL *s)
+tls_any_accept(SSL *s)
 {
 	int ret;
 	unsigned long old_options;
diff --git a/src/lib/libssl/src/ssl/s23_clnt.c b/src/lib/libssl/src/ssl/s23_clnt.c
index 00954777f..458eb37d5 100644
--- a/src/lib/libssl/src/ssl/s23_clnt.c
+++ b/src/lib/libssl/src/ssl/s23_clnt.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: s23_clnt.c,v 1.39 2015/07/19 06:31:32 doug Exp $ */
+/* $OpenBSD: s23_clnt.c,v 1.40 2015/07/19 07:30:06 doug Exp $ */
 /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
  * All rights reserved.
  *
@@ -120,7 +120,7 @@
 static const SSL_METHOD *ssl23_get_client_method(int ver);
 static int ssl23_client_hello(SSL *s);
 static int ssl23_get_server_hello(SSL *s);
-static const SSL_METHOD *tls_get_client_method(int ver);
+static const SSL_METHOD *tls_any_get_client_method(int ver);
 
 const SSL_METHOD SSLv23_client_method_data = {
 	.version = TLS1_2_VERSION,
@@ -160,7 +160,7 @@ const SSL_METHOD TLS_client_method_data = {
 	.ssl_clear = tls1_clear,
 	.ssl_free = tls1_free,
 	.ssl_accept = ssl_undefined_function,
-	.ssl_connect = tls_connect,
+	.ssl_connect = tls_any_connect,
 	.ssl_read = ssl23_read,
 	.ssl_peek = ssl23_peek,
 	.ssl_write = ssl23_write,
@@ -178,7 +178,7 @@ const SSL_METHOD TLS_client_method_data = {
 	.ssl_pending = ssl_undefined_const_function,
 	.num_ciphers = ssl3_num_ciphers,
 	.get_cipher = ssl3_get_cipher,
-	.get_ssl_method = tls_get_client_method,
+	.get_ssl_method = tls_any_get_client_method,
 	.get_timeout = ssl23_default_timeout,
 	.ssl3_enc = &ssl3_undef_enc_method,
 	.ssl_version = ssl_undefined_void_function,
@@ -586,7 +586,7 @@ TLS_client_method(void)
 }
 
 static const SSL_METHOD *
-tls_get_client_method(int ver)
+tls_any_get_client_method(int ver)
 {
 	if (ver == SSL3_VERSION)
 		return (NULL);
@@ -595,7 +595,7 @@ tls_get_client_method(int ver)
 }
 
 int
-tls_connect(SSL *s)
+tls_any_connect(SSL *s)
 {
 	int ret;
 	unsigned long old_options;
diff --git a/src/lib/libssl/src/ssl/s23_meth.c b/src/lib/libssl/src/ssl/s23_meth.c
index 93a398d70..04152eda4 100644
--- a/src/lib/libssl/src/ssl/s23_meth.c
+++ b/src/lib/libssl/src/ssl/s23_meth.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: s23_meth.c,v 1.18 2015/07/19 06:31:32 doug Exp $ */
+/* $OpenBSD: s23_meth.c,v 1.19 2015/07/19 07:30:06 doug Exp $ */
 /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
  * All rights reserved.
  *
@@ -63,7 +63,7 @@
 #include "ssl_locl.h"
 
 static const SSL_METHOD *ssl23_get_method(int ver);
-static const SSL_METHOD *tls_get_method(int ver);
+static const SSL_METHOD *tls_any_get_method(int ver);
 
 const SSL_METHOD SSLv23_method_data = {
 	.version = TLS1_2_VERSION,
@@ -122,8 +122,8 @@ const SSL_METHOD TLS_method_data = {
 	.ssl_new = tls1_new,
 	.ssl_clear = tls1_clear,
 	.ssl_free = tls1_free,
-	.ssl_accept = tls_accept,
-	.ssl_connect = tls_connect,
+	.ssl_accept = tls_any_accept,
+	.ssl_connect = tls_any_connect,
 	.ssl_read = ssl23_read,
 	.ssl_peek = ssl23_peek,
 	.ssl_write = ssl23_write,
@@ -141,7 +141,7 @@ const SSL_METHOD TLS_method_data = {
 	.ssl_pending = ssl_undefined_const_function,
 	.num_ciphers = ssl3_num_ciphers,
 	.get_cipher = ssl3_get_cipher,
-	.get_ssl_method = tls_get_method,
+	.get_ssl_method = tls_any_get_method,
 	.get_timeout = ssl23_default_timeout,
 	.ssl3_enc = &ssl3_undef_enc_method,
 	.ssl_version = ssl_undefined_void_function,
@@ -156,7 +156,7 @@ TLS_method(void)
 }
 
 static const SSL_METHOD *
-tls_get_method(int ver)
+tls_any_get_method(int ver)
 {
 	if (ver == SSL3_VERSION)
 		return (NULL);
diff --git a/src/lib/libssl/src/ssl/s23_srvr.c b/src/lib/libssl/src/ssl/s23_srvr.c
index f1914e0e8..b52412468 100644
--- a/src/lib/libssl/src/ssl/s23_srvr.c
+++ b/src/lib/libssl/src/ssl/s23_srvr.c
@@ -1,4 +1,4 @@
-/* $OpenBSD: s23_srvr.c,v 1.40 2015/07/19 06:31:32 doug Exp $ */
+/* $OpenBSD: s23_srvr.c,v 1.41 2015/07/19 07:30:06 doug Exp $ */
 /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
  * All rights reserved.
  *
@@ -119,7 +119,7 @@
 
 static const SSL_METHOD *ssl23_get_server_method(int ver);
 int ssl23_get_client_hello(SSL *s);
-static const SSL_METHOD *tls_get_server_method(int ver);
+static const SSL_METHOD *tls_any_get_server_method(int ver);
 
 const SSL_METHOD SSLv23_server_method_data = {
 	.version = TLS1_2_VERSION,
@@ -158,7 +158,7 @@ const SSL_METHOD TLS_server_method_data = {
 	.ssl_new = tls1_new,
 	.ssl_clear = tls1_clear,
 	.ssl_free = tls1_free,
-	.ssl_accept = tls_accept,
+	.ssl_accept = tls_any_accept,
 	.ssl_connect = ssl_undefined_function,
 	.ssl_read = ssl23_read,
 	.ssl_peek = ssl23_peek,
@@ -177,7 +177,7 @@ const SSL_METHOD TLS_server_method_data = {
 	.ssl_pending = ssl_undefined_const_function,
 	.num_ciphers = ssl3_num_ciphers,
 	.get_cipher = ssl3_get_cipher,
-	.get_ssl_method = tls_get_server_method,
+	.get_ssl_method = tls_any_get_server_method,
 	.get_timeout = ssl23_default_timeout,
 	.ssl3_enc = &ssl3_undef_enc_method,
 	.ssl_version = ssl_undefined_void_function,
@@ -611,7 +611,7 @@ TLS_server_method(void)
 }
 
 static const SSL_METHOD *
-tls_get_server_method(int ver)
+tls_any_get_server_method(int ver)
 {
 	if (ver == SSL3_VERSION)
 		return (NULL);
@@ -620,7 +620,7 @@ tls_get_server_method(int ver)
 }
 
 int
-tls_accept(SSL *s)
+tls_any_accept(SSL *s)
 {
 	int ret;
 	unsigned long old_options;
diff --git a/src/lib/libssl/src/ssl/ssl_locl.h b/src/lib/libssl/src/ssl/ssl_locl.h
index 1c78770df..d05ef600e 100644
--- a/src/lib/libssl/src/ssl/ssl_locl.h
+++ b/src/lib/libssl/src/ssl/ssl_locl.h
@@ -1,4 +1,4 @@
-/* $OpenBSD: ssl_locl.h,v 1.98 2015/07/19 06:31:32 doug Exp $ */
+/* $OpenBSD: ssl_locl.h,v 1.99 2015/07/19 07:30:06 doug Exp $ */
 /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
  * All rights reserved.
  *
@@ -757,8 +757,8 @@ int ssl23_accept(SSL *s);
 int ssl23_connect(SSL *s);
 int ssl23_read_bytes(SSL *s, int n);
 int ssl23_write_bytes(SSL *s);
-int tls_accept(SSL *s);
-int tls_connect(SSL *s);
+int tls_any_accept(SSL *s);
+int tls_any_connect(SSL *s);
 
 int tls1_new(SSL *s);
 void tls1_free(SSL *s);
diff --git a/src/lib/libssl/ssl_locl.h b/src/lib/libssl/ssl_locl.h
index 1c78770df..d05ef600e 100644
--- a/src/lib/libssl/ssl_locl.h
+++ b/src/lib/libssl/ssl_locl.h
@@ -1,4 +1,4 @@
-/* $OpenBSD: ssl_locl.h,v 1.98 2015/07/19 06:31:32 doug Exp $ */
+/* $OpenBSD: ssl_locl.h,v 1.99 2015/07/19 07:30:06 doug Exp $ */
 /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)
  * All rights reserved.
  *
@@ -757,8 +757,8 @@ int ssl23_accept(SSL *s);
 int ssl23_connect(SSL *s);
 int ssl23_read_bytes(SSL *s, int n);
 int ssl23_write_bytes(SSL *s);
-int tls_accept(SSL *s);
-int tls_connect(SSL *s);
+int tls_any_accept(SSL *s);
+int tls_any_connect(SSL *s);
 
 int tls1_new(SSL *s);
 void tls1_free(SSL *s);

