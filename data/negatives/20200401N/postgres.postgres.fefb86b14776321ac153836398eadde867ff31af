commit fefb86b14776321ac153836398eadde867ff31af
Author: Tom Lane <tgl@sss.pgh.pa.us>
Date:   Fri Jan 27 08:33:58 2017 -0500

    Orthography fixes for new castNode() macro.
    
    Clean up hastily-composed comment.  Normalize whitespace.
    
    Erik Rijkers and myself

diff --git a/src/include/nodes/nodes.h b/src/include/nodes/nodes.h
index b462a5ffde..95dd8baadd 100644
--- a/src/include/nodes/nodes.h
+++ b/src/include/nodes/nodes.h
@@ -559,23 +559,23 @@ extern PGDLLIMPORT Node *newNodeMacroHolder;
 #define IsA(nodeptr,_type_)		(nodeTag(nodeptr) == T_##_type_)
 
 /*
- * castNode(type, ptr) casts ptr to type and, if cassert is enabled, verifies
- * that the the c actually has the appropriate type (using it's nodeTag()).
+ * castNode(type, ptr) casts ptr to "type *", and if assertions are enabled,
+ * verifies that the node has the appropriate type (using its nodeTag()).
  *
  * Use an inline function when assertions are enabled, to avoid multiple
  * evaluations of the ptr argument (which could e.g. be a function call).
  */
 #ifdef USE_ASSERT_CHECKING
-static inline Node*
-castNodeImpl(enum NodeTag type, void *ptr)
+static inline Node *
+castNodeImpl(NodeTag type, void *ptr)
 {
 	Assert(ptr == NULL || nodeTag(ptr) == type);
-	return ptr;
+	return (Node *) ptr;
 }
 #define castNode(_type_, nodeptr) ((_type_ *) castNodeImpl(T_##_type_, nodeptr))
 #else
-#define castNode(_type_,nodeptr)  ((_type_ *)(nodeptr))
-#endif
+#define castNode(_type_, nodeptr) ((_type_ *) (nodeptr))
+#endif   /* USE_ASSERT_CHECKING */
 
 
 /* ----------------------------------------------------------------

