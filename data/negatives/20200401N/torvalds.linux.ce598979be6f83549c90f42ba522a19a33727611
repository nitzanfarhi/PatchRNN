commit ce598979be6f83549c90f42ba522a19a33727611
Author: Mark Fasheh <mfasheh@suse.com>
Date:   Tue Jul 26 11:32:23 2011 -0700

    btrfs: Don't BUG_ON errors from btrfs_create_subvol_root()
    
    This is called from only one place - create_subvol() which passes errors
    safely back out to it's caller, btrfs_mksubvol where they are handled.
    
    Additionally, btrfs_create_subvol_root() itself bug's needlessly from error
    return of btrfs_update_inode(). Since create_subvol() was fixed to catch
    errors we can bubble this one up too.
    
    Signed-off-by: Mark Fasheh <mfasheh@suse.com>

diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 593a2c3a27ab..41132339e2ea 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -6734,10 +6734,9 @@ int btrfs_create_subvol_root(struct btrfs_trans_handle *trans,
 	btrfs_i_size_write(inode, 0);
 
 	err = btrfs_update_inode(trans, new_root, inode);
-	BUG_ON(err);
 
 	iput(inode);
-	return 0;
+	return err;
 }
 
 struct inode *btrfs_alloc_inode(struct super_block *sb)
diff --git a/fs/btrfs/ioctl.c b/fs/btrfs/ioctl.c
index 4e5149461435..de25e4255aeb 100644
--- a/fs/btrfs/ioctl.c
+++ b/fs/btrfs/ioctl.c
@@ -430,6 +430,11 @@ static noinline int create_subvol(struct btrfs_root *root,
 	btrfs_record_root_in_trans(trans, new_root);
 
 	ret = btrfs_create_subvol_root(trans, new_root, new_dirid);
+	if (ret) {
+		/* We potentially lose an unused inode item here */
+		goto fail;
+	}
+
 	/*
 	 * insert the directory item
 	 */

