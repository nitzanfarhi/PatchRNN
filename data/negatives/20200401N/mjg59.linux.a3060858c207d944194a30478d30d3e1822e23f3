commit a3060858c207d944194a30478d30d3e1822e23f3
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri May 11 16:30:46 2012 +0000

    e1000: look in the page and not in skb->data for the last byte
    
    The code seems to want to look at the last byte where the HW puts some
    information. Since the skb->data area is never seen by the HW I guess it
    does not work as expected. We pass the page address to the HW so I
    *think* in order to get to the last byte where the information might be
    one should use the page buffer and take a look.
    This is of course not more than just compile tested.
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/e1000/e1000_main.c b/drivers/net/ethernet/intel/e1000/e1000_main.c
index fefbf4d66e18..37b7d1c90723 100644
--- a/drivers/net/ethernet/intel/e1000/e1000_main.c
+++ b/drivers/net/ethernet/intel/e1000/e1000_main.c
@@ -4066,7 +4066,11 @@ static bool e1000_clean_jumbo_rx_irq(struct e1000_adapter *adapter,
 		/* errors is only valid for DD + EOP descriptors */
 		if (unlikely((status & E1000_RXD_STAT_EOP) &&
 		    (rx_desc->errors & E1000_RXD_ERR_FRAME_ERR_MASK))) {
-			u8 last_byte = *(skb->data + length - 1);
+			u8 *mapped;
+			u8 last_byte;
+
+			mapped = page_address(buffer_info->page);
+			last_byte = *(mapped + length - 1);
 			if (TBI_ACCEPT(hw, status, rx_desc->errors, length,
 				       last_byte)) {
 				spin_lock_irqsave(&adapter->stats_lock,

