commit c79d92bda80c09c9d8d0d6b60ed0dd8408e1a4f7
Author: Badhri Jagan Sridharan <Badhri@google.com>
Date:   Thu Aug 10 21:15:45 2017 -0700

    staging: typec: tcpm: Check cc status before entering SRC_TRY_DEBOUCE
    
    [  130.893355] state change SNK_DEBOUNCED -> SRC_TRY
    [  130.893363] cc:=3
    [  130.893490] pending state change SRC_TRY -> SNK_TRYWAIT @ 100 ms
    [  130.895602] CC1: 3 -> 0, CC2: 0 -> 0 [state SRC_TRY, polarity 0, disconnected]
    [  130.895613] state change SRC_TRY -> SRC_TRY_DEBOUNCE
    [  130.895621] pending state change SRC_TRY_DEBOUNCE -> SRC_ATTACHED @ 20 ms
    [  130.916843] state change SRC_TRY_DEBOUNCE -> SRC_ATTACHED [delayed 20 ms]
    
    Although the CC state was changing to TYPEC_CC_OPEN, the port entered
    SRC_TRY_DEBOUNCE from SRC_TRY. The port must enter SRC_TRY_DEBOUNCE only
    if the CC state is TYPEC_CC_RD.
    
    Signed-off-by: Badhri Jagan Sridharan <Badhri@google.com>
    [groeck: Wording]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/typec/tcpm.c b/drivers/staging/typec/tcpm.c
index a15256c190e7..6df72f648de0 100644
--- a/drivers/staging/typec/tcpm.c
+++ b/drivers/staging/typec/tcpm.c
@@ -2897,7 +2897,8 @@ static void _tcpm_cc_change(struct tcpm_port *port, enum typec_cc_status cc1,
 		break;
 
 	case SRC_TRY:
-		tcpm_set_state(port, SRC_TRY_DEBOUNCE, 0);
+		if (tcpm_port_is_source(port))
+			tcpm_set_state(port, SRC_TRY_DEBOUNCE, 0);
 		break;
 	case SRC_TRY_DEBOUNCE:
 		tcpm_set_state(port, SRC_TRY, 0);

