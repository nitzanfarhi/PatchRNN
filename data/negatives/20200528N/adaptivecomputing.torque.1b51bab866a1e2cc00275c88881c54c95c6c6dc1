commit 1b51bab866a1e2cc00275c88881c54c95c6c6dc1
Author: dbeer <dbeer@8f940c70-5916-0410-ac46-d1fa2fa6ea29>
Date:   Mon Jul 23 22:19:05 2012 +0000

    Add the exec_with_exec option to allow users to have their shell exec their script instead of piping to to the stdin of the shell. This makes catching signals from the job much easier.

diff --git a/src/resmom/mom_main.c b/src/resmom/mom_main.c
index f5aa6dcea..21e82bf0a 100644
--- a/src/resmom/mom_main.c
+++ b/src/resmom/mom_main.c
@@ -181,6 +181,7 @@ tlist_head svr_newjobs; /* jobs being sent to MOM */
 tlist_head svr_alljobs; /* all jobs under MOM's control */
 tlist_head mom_varattrs; /* variable attributes */
 int  termin_child = 0;  /* boolean - one or more children need to be terminated this iteration */
+int  exec_with_exec = 0;
 time_t  time_now = 0;
 time_t  last_poll_time = 0;
 extern tlist_head svr_requests;
@@ -389,6 +390,7 @@ static unsigned long setmempressdur(char *);
 #endif
 static unsigned long setreduceprologchecks(char *);
 static unsigned long setextpwdretry(char *);
+static unsigned long setexecwithexec(char *);
 static unsigned long setmaxupdatesbeforesending(char *);
 static unsigned long setthreadunlinkcalls(char *);
 static unsigned long setapbasilpath(char *);
@@ -468,6 +470,7 @@ static struct specials
   { "thread_unlink_calls", setthreadunlinkcalls },
   { "attempt_to_make_dir", setattempttomakedir },
   { "ext_pwd_retry",       setextpwdretry },
+  { "exec_with_exec",      setexecwithexec },
   { "max_updates_before_sending", setmaxupdatesbeforesending },
   { "apbasil_path",        setapbasilpath },
   { "reject_job_submission", setrejectjobsubmission },
@@ -1752,6 +1755,24 @@ static u_long settmpdir(
   return(1);
   }
 
+static u_long setexecwithexec(
+
+  char *value)
+
+  {
+  static char *id = "setexecwithexec";
+
+  log_record(PBSEVENT_SYSTEM, PBS_EVENTCLASS_SERVER, id, value);
+
+  if (!strncasecmp(value, "t", 1) || (value[0] == '1') || !strcasecmp(value, "on") )
+    exec_with_exec = 1;
+  else
+    exec_with_exec = 0;
+
+  return(1);
+  } /* END setexecwithexec() */
+
+
 static u_long setxauthpath(
 
   char *Value)
diff --git a/src/resmom/start_exec.c b/src/resmom/start_exec.c
index 2dff2ebff..3d80cb387 100644
--- a/src/resmom/start_exec.c
+++ b/src/resmom/start_exec.c
@@ -184,6 +184,7 @@ typedef enum
 /* Global Variables */
 
 
+extern int            exec_with_exec;
 extern int            attempttomakedir;
 extern int            spoolasfinalname;
 extern int            num_var_env;
@@ -2325,6 +2326,15 @@ int TMomFinalizeJob2(
   if (TJE->is_interactive == FALSE)
     {
     int k;
+
+    if (exec_with_exec)
+      {
+      if (strlen(buf)+5 <= MAXPATHLEN) 
+        {
+        memmove(buf + 5, buf, strlen(buf) + 1);
+        strncpy(buf, "exec ", 5);
+        }
+      }
     
     /* pass name of shell script on pipe */
     /* will be stdin of shell  */
@@ -4071,7 +4081,7 @@ int TMomFinalizeChild(
       arg[aindex] = calloc(1,
                           strlen(path_jobs) +
                           strlen(pjob->ji_qs.ji_fileprefix) +
-                          strlen(JOB_SCRIPT_SUFFIX) + 1);
+                          strlen(JOB_SCRIPT_SUFFIX) + 6);
 
       if (arg[aindex] == NULL)
         {
@@ -4084,7 +4094,14 @@ int TMomFinalizeChild(
         return(-1);
         }
 
-      strcpy(arg[aindex], path_jobs);
+      if (exec_with_exec)
+        {
+        strcpy(arg[aindex], "exec ");
+        strcat(arg[aindex], path_jobs);
+        }
+      else
+        strcpy(argg[aindex], path_jobs);
+
       strcat(arg[aindex], pjob->ji_qs.ji_fileprefix);
       strcat(arg[aindex], JOB_SCRIPT_SUFFIX);
 

