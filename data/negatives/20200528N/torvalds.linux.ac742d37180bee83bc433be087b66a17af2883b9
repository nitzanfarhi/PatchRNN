commit ac742d37180bee83bc433be087b66a17af2883b9
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Wed Sep 9 23:36:40 2015 +0200

    futex: Force hot variables into a single cache line
    
    futex_hash() references two global variables: the base pointer
    futex_queues and the size of the array futex_hashsize. The latter is
    marked __read_mostly, while the former is not, so they are likely to
    end up very far from each other. This means that futex_hash() is
    likely to encounter two cache misses.
    
    We could mark futex_queues as __read_mostly as well, but that doesn't
    guarantee they'll end up next to each other (and even if they do, they
    may still end up in different cache lines). So put the two variables
    in a small singleton struct with sufficient alignment and mark that as
    __read_mostly.
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: kbuild test robot <fengguang.wu@intel.com>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Link: http://lkml.kernel.org/r/1441834601-13633-1-git-send-email-linux@rasmusvillemoes.dk
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

diff --git a/kernel/futex.c b/kernel/futex.c
index 6e443efc65f4..dfc86e93c31d 100644
--- a/kernel/futex.c
+++ b/kernel/futex.c
@@ -255,9 +255,18 @@ struct futex_hash_bucket {
 	struct plist_head chain;
 } ____cacheline_aligned_in_smp;
 
-static unsigned long __read_mostly futex_hashsize;
+/*
+ * The base of the bucket array and its size are always used together
+ * (after initialization only in hash_futex()), so ensure that they
+ * reside in the same cacheline.
+ */
+static struct {
+	struct futex_hash_bucket *queues;
+	unsigned long            hashsize;
+} __futex_data __read_mostly __aligned(2*sizeof(long));
+#define futex_queues   (__futex_data.queues)
+#define futex_hashsize (__futex_data.hashsize)
 
-static struct futex_hash_bucket *futex_queues;
 
 /*
  * Fault injections for futexes.

