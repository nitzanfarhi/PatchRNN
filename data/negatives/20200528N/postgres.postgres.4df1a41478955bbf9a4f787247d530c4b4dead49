commit 4df1a41478955bbf9a4f787247d530c4b4dead49
Author: Marc G. Fournier <scrappy@hub.org>
Date:   Thu Oct 31 10:20:09 1996 +0000

    more removals of PORTNAME_*

diff --git a/src/backend/storage/file/fd.c b/src/backend/storage/file/fd.c
index 674abe21aa..380fe0e49f 100644
--- a/src/backend/storage/file/fd.c
+++ b/src/backend/storage/file/fd.c
@@ -6,7 +6,7 @@
  * Copyright (c) 1994, Regents of the University of California
  *
  * IDENTIFICATION
- *    $Id: fd.c,v 1.5 1996/09/22 01:30:52 scrappy Exp $
+ *    $Id: fd.c,v 1.6 1996/10/31 10:19:59 scrappy Exp $
  *
  * NOTES:
  *
@@ -49,7 +49,7 @@
 #include "miscadmin.h"	/* for DataDir */
 #include "utils/palloc.h"
 
-#ifdef PORTNAME_sparc
+#ifdef sparc
 /*
  * the SunOS 4 NOFILE is a lie, because the default limit is *not* the
  * maximum number of file descriptors you can have open.
@@ -60,13 +60,13 @@
 #include <sys/user.h>
 #undef NOFILE
 #define NOFILE NOFILE_IN_U
-#endif /* PORTNAME_sparc */
+#endif /* sparc */
 
-#if defined(PORTNAME_sparc_solaris) || defined(PORTNAME_i386_solaris)
+#if defined(sparc_solaris) || defined(i386_solaris)
 #include <sys/user.h>
 #undef NOFILE
 #define NOFILE 64
-#endif /* PORTNAME_sparc_solaris || PORTNAME_i386_solaris */
+#endif /* sparc_solaris || i386_solaris */
 
 /*
  * Problem: Postgres does a system(ld...) to do dynamic loading.  This
diff --git a/src/backend/storage/ipc/ipc.c b/src/backend/storage/ipc/ipc.c
index cf0f58472b..f74e964482 100644
--- a/src/backend/storage/ipc/ipc.c
+++ b/src/backend/storage/ipc/ipc.c
@@ -7,7 +7,7 @@
  *
  *
  * IDENTIFICATION
- *    $Header: /cvsroot/pgsql/src/backend/storage/ipc/ipc.c,v 1.4 1996/08/14 05:01:53 scrappy Exp $
+ *    $Header: /cvsroot/pgsql/src/backend/storage/ipc/ipc.c,v 1.5 1996/10/31 10:20:06 scrappy Exp $
  *
  * NOTES
  *
@@ -41,7 +41,7 @@
 #include "utils/memutils.h"
 #include "utils/elog.h"
 
-#if defined(PORTNAME_bsd44)
+#if defined(bsd44)
 int UsePrivateMemory = 1;
 #else
 int UsePrivateMemory = 0;
diff --git a/src/backend/storage/ipc/s_lock.c b/src/backend/storage/ipc/s_lock.c
index df8aa514e4..3fcc8d6c5d 100644
--- a/src/backend/storage/ipc/s_lock.c
+++ b/src/backend/storage/ipc/s_lock.c
@@ -7,7 +7,7 @@
  *
  *
  * IDENTIFICATION
- *    $Header: /cvsroot/pgsql/src/backend/storage/ipc/Attic/s_lock.c,v 1.4 1996/07/22 23:00:03 scrappy Exp $
+ *    $Header: /cvsroot/pgsql/src/backend/storage/ipc/Attic/s_lock.c,v 1.5 1996/10/31 10:20:09 scrappy Exp $
  *
  *-------------------------------------------------------------------------
  */
@@ -45,7 +45,7 @@
 
 #if defined(HAS_TEST_AND_SET)
 
-#if defined (PORTNAME_next)
+#if defined (next)
 /*
  * NEXTSTEP (mach)
  * slock_t is defined as a struct mutex.
@@ -74,11 +74,11 @@ int
  	return (lock->lock == 0);
 }
 
-#endif /* PORTNAME_next */
+#endif /* next */
 
 
 
-#if defined(PORTNAME_irix5)
+#if defined(irix5)
 /*
  * SGI IRIX 5
  * slock_t is defined as a struct abilock_t, which has a single unsigned long 
@@ -115,7 +115,7 @@ S_LOCK_FREE(slock_t *lock)
 	return(stat_lock(lock)==UNLOCKED); 
 }
 
-#endif /* PORTNAME_irix5 */
+#endif /* irix5 */
 
 
 /*
@@ -125,7 +125,7 @@ S_LOCK_FREE(slock_t *lock)
  * (see storage/ipc.h).
  */
 
-#if defined(PORTNAME_alpha)
+#if defined(alpha)
 
 void
 S_LOCK(slock_t *lock)
@@ -152,14 +152,14 @@ S_LOCK_FREE(slock_t *lock)
     return(lock->msem_state ? 0 : 1);
 }
 
-#endif /* PORTNAME_alpha */
+#endif /* alpha */
 
 /*
  * Solaris 2
  */
 
-#if defined(PORTNAME_i386_solaris) || \
-    defined(PORTNAME_sparc_solaris)
+#if defined(i386_solaris) || \
+    defined(sparc_solaris)
 
 /* for xxxxx_solaris, this is defined in port/.../tas.s */
 extern int tas(slock_t *lock);
@@ -183,7 +183,7 @@ S_INIT_LOCK(slock_t *lock)
     S_UNLOCK(lock);
 }
 
-#endif /* PORTNAME_i86pc_solaris || PORTNAME_sparc_solaris */
+#endif /* i86pc_solaris || sparc_solaris */
 
 /*
  * AIX (POWER)
@@ -192,7 +192,7 @@ S_INIT_LOCK(slock_t *lock)
  * (see storage/ipc.h).
  */
 
-#if defined(PORTNAME_aix)
+#if defined(aix)
 
 void
 S_LOCK(slock_t *lock)
@@ -213,7 +213,7 @@ S_INIT_LOCK(slock_t *lock)
     S_UNLOCK(lock);
 }
 
-#endif /* PORTNAME_aix */
+#endif /* aix */
 
 /*
  * HP-UX (PA-RISC)
@@ -222,7 +222,7 @@ S_INIT_LOCK(slock_t *lock)
  * (see storage/ipc.h).
  */
 
-#if defined(PORTNAME_hpux)
+#if defined(hpux)
 
 /* defined in port/.../tas.s */
 extern int tas(slock_t *lock);
@@ -260,7 +260,7 @@ S_LOCK_FREE(slock_t *lock)
     return(*lock_word != 0);
 }
 
-#endif /* PORTNAME_hpux */
+#endif /* hpux */
 
 /*
  * sun3
@@ -313,7 +313,7 @@ tas_dummy()
  * SPARC (SunOS 4)
  */
 
-#if defined(PORTNAME_sparc)
+#if defined(sparc)
 
 /* if we're using -ansi w/ gcc, use __asm__ instead of asm */
 #if defined(__STRICT_ANSI__)
@@ -375,16 +375,16 @@ S_INIT_LOCK(unsigned char *addr)
     *addr = 0;
 }
 
-#endif /* PORTNAME_sparc */
+#endif /* sparc */
 
 /*
  * Linux and friends
  */
 
-#if defined(PORTNAME_BSD44_derived) || \
-    defined(PORTNAME_bsdi) || \
-    defined(PORTNAME_bsdi_2_1) || \
-    defined(PORTNAME_linux)
+#if defined(BSD44_derived) || \
+    defined(bsdi) || \
+    defined(bsdi_2_1) || \
+    defined(linux)
 
 int
 tas(slock_t *m)

