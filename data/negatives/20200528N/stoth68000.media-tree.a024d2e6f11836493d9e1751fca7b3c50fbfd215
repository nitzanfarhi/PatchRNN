commit a024d2e6f11836493d9e1751fca7b3c50fbfd215
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Sep 10 18:16:54 2014 +0300

    drm/i915: vlv: fix gunit HW state corruption during S4 suspend
    
    During S4 freeze we don't call intel_suspend_complete(), which would
    save the gunit HW state, but during S4 thaw/restore events we call
    intel_resume_prepare() which restores it, thus ending up in a corrupted
    HW state.
    
    Fix this by calling intel_suspend_complete() from the corresponding
    freeze_late event handler.
    
    The issue was introduced in
    commit 016970beb05da6285c2f3ed2bee1c676cb75972e
    Author: Sagar Kamble <sagar.a.kamble@intel.com>
    Date:   Wed Aug 13 23:07:06 2014 +0530
    
    CC: Sagar Kamble <sagar.a.kamble@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>

diff --git a/drivers/gpu/drm/i915/i915_drv.c b/drivers/gpu/drm/i915/i915_drv.c
index 055d5e7fbf12..2318b4c7a8f8 100644
--- a/drivers/gpu/drm/i915/i915_drv.c
+++ b/drivers/gpu/drm/i915/i915_drv.c
@@ -986,6 +986,15 @@ static int i915_pm_freeze(struct device *dev)
 	return i915_drm_freeze(drm_dev);
 }
 
+static int i915_pm_freeze_late(struct device *dev)
+{
+	struct pci_dev *pdev = to_pci_dev(dev);
+	struct drm_device *drm_dev = pci_get_drvdata(pdev);
+	struct drm_i915_private *dev_priv = drm_dev->dev_private;
+
+	return intel_suspend_complete(dev_priv);
+}
+
 static int i915_pm_thaw_early(struct device *dev)
 {
 	struct pci_dev *pdev = to_pci_dev(dev);
@@ -1570,6 +1579,7 @@ static const struct dev_pm_ops i915_pm_ops = {
 	.resume_early = i915_pm_resume_early,
 	.resume = i915_pm_resume,
 	.freeze = i915_pm_freeze,
+	.freeze_late = i915_pm_freeze_late,
 	.thaw_early = i915_pm_thaw_early,
 	.thaw = i915_pm_thaw,
 	.poweroff = i915_pm_poweroff,

