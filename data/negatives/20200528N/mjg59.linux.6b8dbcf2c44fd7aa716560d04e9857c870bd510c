commit 6b8dbcf2c44fd7aa716560d04e9857c870bd510c
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Oct 24 21:32:42 2013 +0200

    bridge: netfilter: orphan skb before invoking ip netfilter hooks
    
    Pekka Pietikäinen reports xt_socket behavioural change after commit
    00028aa37098o (netfilter: xt_socket: use IP early demux).
    
    Reason is xt_socket now no longer does an unconditional sk lookup -
    it re-uses existing skb->sk if possible, assuming ->sk was set by
    ip early demux.
    
    However, when netfilter is invoked via bridge, this can cause 'bogus'
    sockets to be examined by the match, e.g. a 'tun' device socket.
    
    bridge netfilter should orphan the skb just like the routing path
    before invoking ipv4/ipv6 netfilter hooks to avoid this.
    
    Reported-and-tested-by: Pekka Pietikäinen <pp@ee.oulu.fi>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

diff --git a/net/bridge/br_netfilter.c b/net/bridge/br_netfilter.c
index f87736270eaa..3d553120ff04 100644
--- a/net/bridge/br_netfilter.c
+++ b/net/bridge/br_netfilter.c
@@ -559,6 +559,8 @@ static struct net_device *setup_pre_routing(struct sk_buff *skb)
 	else if (skb->protocol == htons(ETH_P_PPP_SES))
 		nf_bridge->mask |= BRNF_PPPoE;
 
+	/* Must drop socket now because of tproxy. */
+	skb_orphan(skb);
 	return skb->dev;
 }
 

