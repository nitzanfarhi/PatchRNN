commit b05f3a9b473c87a4827978f678f7c098717ec1a7
Author: Paul Wouters <paul@libreswan.org>
Date:   Wed Jun 27 15:06:08 2012 -0400

    XAUTH: fixup previous maxlength fix. mova hardcoded to defines

diff --git a/include/pluto_constants.h b/include/pluto_constants.h
index ffdee8f44..8b4d15e7d 100644
--- a/include/pluto_constants.h
+++ b/include/pluto_constants.h
@@ -666,5 +666,8 @@ enum PrivateKeyKind {
     PPK_XAUTH=5,
 };
 
+#define XAUTH_PROMPT_TRIES 3
+#define XAUTH_MAX_NAME_LENGTH 128
+#define XAUTH_MAX_PASS_LENGTH 128
 
 
diff --git a/lib/libipsecconf/starterwhack.c b/lib/libipsecconf/starterwhack.c
index 2c2d3c658..54a7952cd 100644
--- a/lib/libipsecconf/starterwhack.c
+++ b/lib/libipsecconf/starterwhack.c
@@ -75,8 +75,8 @@ send_reply(int sock, char *buf, ssize_t len)
 }
 
 int starter_whack_read_reply(int sock,
-			     char xauthname[128],
-			     char xauthpass[128],
+			     char xauthname[XAUTH_MAX_NAME_LENGTH],
+			     char xauthpass[XAUTH_MAX_PASS_LENGTH],
 			     int xauthnamelen,
 			     int xauthpasslen)
 {
@@ -145,11 +145,11 @@ int starter_whack_read_reply(int sock,
 			case RC_ENTERSECRET:
 				if(xauthpasslen==0) {
 					xauthpasslen = whack_get_secret(xauthpass
-								  , sizeof(xauthpass));
+								  , XAUTH_MAX_PASS_LENGTH);
 				}
-				if (xauthpasslen > 128) {
-					xauthpasslen = 128;
-					starter_log(LOG_LEVEL_ERR, "xauth password cannot be > 128 chars");
+				if (xauthpasslen > XAUTH_MAX_PASS_LENGTH) { /* for input >= 128, xauthpasslen would be 129 */
+					xauthpasslen = XAUTH_MAX_PASS_LENGTH;
+					starter_log(LOG_LEVEL_ERR, "xauth password cannot be >= %d chars", XAUTH_MAX_PASS_LENGTH);
 				}
 				ret=send_reply(sock, xauthpass, xauthpasslen);
 				if(ret!=0) return ret;
@@ -158,11 +158,11 @@ int starter_whack_read_reply(int sock,
 			case RC_XAUTHPROMPT:
 				if(xauthnamelen==0) {
 					xauthnamelen = whack_get_value(xauthname
-								 , sizeof(xauthname));
-					if (xauthnamelen > 128) {
-						xauthnamelen = 128;
-						starter_log(LOG_LEVEL_ERR, "xauth name cannot be > 128 chars");
-					}
+								 , XAUTH_MAX_NAME_LENGTH);
+				}
+				if (xauthnamelen > XAUTH_MAX_NAME_LENGTH) { /* for input >= 128, xauthnamelen would be 129 */
+					xauthnamelen = XAUTH_MAX_NAME_LENGTH;
+					starter_log(LOG_LEVEL_ERR, "xauth name cannot be >= %s chars", XAUTH_MAX_NAME_LENGTH);
 				}
 				ret=send_reply(sock, xauthname, xauthnamelen);
 				if(ret!=0) return ret;
@@ -241,8 +241,8 @@ static int send_whack_msg (struct whack_message *msg, char *ctlbase)
 	 * read reply
 	 */
 	{
-		char xauthname[128];
-		char xauthpass[128];
+		char xauthname[XAUTH_MAX_NAME_LENGTH];
+		char xauthpass[XAUTH_MAX_PASS_LENGTH];
 			
 		ret = starter_whack_read_reply(sock, xauthname,xauthpass,0,0);
 		close(sock);
diff --git a/programs/pluto/xauth.h b/programs/pluto/xauth.h
index 3b7a42ff8..072142c41 100644
--- a/programs/pluto/xauth.h
+++ b/programs/pluto/xauth.h
@@ -55,6 +55,3 @@ extern stf_status xauth_inI1(struct msg_digest *md);
 extern oakley_auth_t xauth_calcbaseauth(oakley_auth_t baseauth);
 extern stf_status modecfg_send_request(struct state *st);
 
-/* How many times can remote users try to login ? */
-#define XAUTH_PROMPT_TRIES 3
-

