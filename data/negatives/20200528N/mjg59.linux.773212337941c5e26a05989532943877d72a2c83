commit 773212337941c5e26a05989532943877d72a2c83
Author: Roland Dreier <rdreier@cisco.com>
Date:   Tue Jul 1 10:22:45 2008 -0700

    pasemi_mac: Access iph->tot_len with correct endianness
    
    iph->tot_len is stored in network byte order, so access it using
    ntohs().  This doesn't have any real world impact on pasemi_mac, since
    the device only exists as part of a big-endian system-on-chip, but
    fixing this gets rid of a sparse warning and avoids having a bad example
    in the tree.
    
    Signed-off-by: Roland Dreier <rolandd@cisco.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>

diff --git a/drivers/net/pasemi_mac.c b/drivers/net/pasemi_mac.c
index 3b2a6c598088..993d87c9296f 100644
--- a/drivers/net/pasemi_mac.c
+++ b/drivers/net/pasemi_mac.c
@@ -277,7 +277,7 @@ static int get_skb_hdr(struct sk_buff *skb, void **iphdr,
 	*tcph = tcp_hdr(skb);
 
 	/* check if ip header and tcp header are complete */
-	if (iph->tot_len < ip_len + tcp_hdrlen(skb))
+	if (ntohs(iph->tot_len) < ip_len + tcp_hdrlen(skb))
 		return -1;
 
 	*hdr_flags = LRO_IPV4 | LRO_TCP;

