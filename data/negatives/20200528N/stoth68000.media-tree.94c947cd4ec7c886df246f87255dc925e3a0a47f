commit 94c947cd4ec7c886df246f87255dc925e3a0a47f
Author: Omar Ramirez Luna <omar.ramirez@copitl.com>
Date:   Thu Jan 10 03:36:59 2013 -0600

    staging: tidspbridge: fix memory corruption on long string names
    
    The value allocated doesn't match the one that is meant to be
    stored, resulting in corruption of memory for longer strings
    that can't be held in such space.
    
    Fix by allocating the correct byte value for the string meant to
    be stored.
    
    Signed-off-by: Omar Ramirez Luna <omar.ramirez@copitl.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/tidspbridge/rmgr/dbdcd.c b/drivers/staging/tidspbridge/rmgr/dbdcd.c
index 9d52c3cb92f0..3d2a26f1efe5 100644
--- a/drivers/staging/tidspbridge/rmgr/dbdcd.c
+++ b/drivers/staging/tidspbridge/rmgr/dbdcd.c
@@ -852,8 +852,7 @@ int dcd_register_object(struct dsp_uuid *uuid_obj,
 				goto func_end;
 			}
 
-			dcd_key->path = kmalloc(strlen(sz_reg_key) + 1,
-								GFP_KERNEL);
+			dcd_key->path = kmalloc(dw_path_size, GFP_KERNEL);
 
 			if (!dcd_key->path) {
 				kfree(dcd_key);

