commit c308efe63a875eb0d839f7490e69e58e4595466c
Author: Peter Maydell <peter.maydell@linaro.org>
Date:   Wed Aug 1 14:35:47 2012 +0100

    exec.c: Remove out of date comment
    
    Remove an out of date comment: this comment used to be attached to
    cpu_register_physical_memory_log(), before commit 0f0cb164 accidentally
    inserted a couple of other functions between the comment and its function.
    It is in any case obsolete since (a) the function arguments it refers
    to have been replaced with a single MemoryRegionSection* argument and
    (b) the inability to handle regions whose offset_within_address_space
    and offset_within_region aren't equally aligned was fixed as part of
    the rewrite of this code.
    
    Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
    Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>

diff --git a/exec.c b/exec.c
index e6ac3e7065..a42a0b5b78 100644
--- a/exec.c
+++ b/exec.c
@@ -2240,14 +2240,6 @@ static void phys_sections_clear(void)
     phys_sections_nb = 0;
 }
 
-/* register physical memory.
-   For RAM, 'size' must be a multiple of the target page size.
-   If (phys_offset & ~TARGET_PAGE_MASK) != 0, then it is an
-   io memory page.  The address used when calling the IO function is
-   the offset from the start of the region, plus region_offset.  Both
-   start_addr and region_offset are rounded down to a page boundary
-   before calculating this offset.  This should not be a problem unless
-   the low bits of start_addr and region_offset differ.  */
 static void register_subpage(MemoryRegionSection *section)
 {
     subpage_t *subpage;

