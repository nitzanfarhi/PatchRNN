commit 3869c4aa18835c8c61b44bd0f3ace36e9d3b5bd0
Author: venkatesh.pallipadi@intel.com <venkatesh.pallipadi@intel.com>
Date:   Thu Apr 9 14:26:50 2009 -0700

    x86, PAT: Changing memtype to WC ensuring no WB alias
    
    As per SDM, there should not be any aliasing of a WC with any cacheable
    type across CPUs. That is if one CPU is changing the identity map
    memtype to _WC, no other CPU at the time of this change should not have a
    TLB for this page that carries a WB attribute. SDM suggests to make the
    page not present. But for that we will have to handle any page faults
    that can potentially happen due to these pages being not present.
    
    Other way to deal with this without having any WB mapping is to change
    the page first to UC and then to WC. This ensures that we meet the SDM
    requirement of no cacheable alais to WC page. This also has same or
    lower overhead than marking the page not present and making it present
    later.
    
    Signed-off-by: Venkatesh Pallipadi <venkatesh.pallipadi@intel.com>
    Signed-off-by: Suresh Siddha <suresh.b.siddha@intel.com>
    LKML-Reference: <20090409212708.797481000@intel.com>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

diff --git a/arch/x86/mm/pageattr.c b/arch/x86/mm/pageattr.c
index 985eef80c552..797f9f107cb6 100644
--- a/arch/x86/mm/pageattr.c
+++ b/arch/x86/mm/pageattr.c
@@ -1000,8 +1000,15 @@ EXPORT_SYMBOL(set_memory_array_uc);
 
 int _set_memory_wc(unsigned long addr, int numpages)
 {
-	return change_page_attr_set(&addr, numpages,
+	int ret;
+	ret = change_page_attr_set(&addr, numpages,
+				    __pgprot(_PAGE_CACHE_UC_MINUS), 0);
+
+	if (!ret) {
+		ret = change_page_attr_set(&addr, numpages,
 				    __pgprot(_PAGE_CACHE_WC), 0);
+	}
+	return ret;
 }
 
 int set_memory_wc(unsigned long addr, int numpages)

