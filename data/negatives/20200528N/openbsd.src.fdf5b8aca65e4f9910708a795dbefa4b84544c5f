commit fdf5b8aca65e4f9910708a795dbefa4b84544c5f
Author: kstailey <kstailey@openbsd.org>
Date:   Wed Jul 23 21:11:27 1997 +0000

    tabify + trailing blanks

diff --git a/lib/libc/gmon/gmon.c b/lib/libc/gmon/gmon.c
index 64c41686d41..d722ba3dbc0 100644
--- a/lib/libc/gmon/gmon.c
+++ b/lib/libc/gmon/gmon.c
@@ -32,7 +32,7 @@
  */
 
 #if !defined(lint) && defined(LIBC_SCCS)
-static char rcsid[] = "$OpenBSD: gmon.c,v 1.7 1996/09/15 09:31:12 tholo Exp $";
+static char rcsid[] = "$OpenBSD: gmon.c,v 1.8 1997/07/23 21:11:27 kstailey Exp $";
 #endif
 
 #include <sys/param.h>
@@ -109,7 +109,7 @@ monstartup(lowpc, highpc)
 		s_scale = ((float)p->kcountsize / o ) * SCALE_1_TO_1;
 #else /* avoid floating point */
 		int quot = o / p->kcountsize;
-		
+
 		if (quot >= 0x10000)
 			s_scale = 1;
 		else if (quot >= 0x100)
@@ -173,12 +173,12 @@ _mcleanup()
 		pid_t pid;
 		long divisor;
 
-		/* If PROFDIR contains a null value, no profiling 
+		/* If PROFDIR contains a null value, no profiling
 		   output is produced */
 		if (*profdir == '\0') {
 			return;
 		}
-		
+
 		limit = buf + sizeof buf - 1 - 10 - 1 -
 		    strlen(__progname) - 1;
 		t = buf;
@@ -189,8 +189,8 @@ _mcleanup()
 		}
 		*t++ = '/';
 
-		/* 
-		 * Copy and convert pid from a pid_t to a string.  For 
+		/*
+		 * Copy and convert pid from a pid_t to a string.  For
 		 * best performance, divisor should be initialized to
 		 * the largest power of 10 less than PID_MAX.
 		 */
@@ -291,7 +291,7 @@ static int
 hertz()
 {
 	struct itimerval tim;
-	
+
 	tim.it_interval.tv_sec = 0;
 	tim.it_interval.tv_usec = 1;
 	tim.it_value.tv_sec = 0;
diff --git a/lib/libc/gmon/mcount.c b/lib/libc/gmon/mcount.c
index b81962d0b0a..88b6e516875 100644
--- a/lib/libc/gmon/mcount.c
+++ b/lib/libc/gmon/mcount.c
@@ -32,7 +32,7 @@
  */
 
 #if !defined(lint) && !defined(_KERNEL) && defined(LIBC_SCCS)
-static char rcsid[] = "$OpenBSD: mcount.c,v 1.5 1997/01/30 05:05:00 deraadt Exp $";
+static char rcsid[] = "$OpenBSD: mcount.c,v 1.6 1997/07/23 21:11:27 kstailey Exp $";
 #endif
 
 #include <sys/param.h>
@@ -48,7 +48,7 @@ static char rcsid[] = "$OpenBSD: mcount.c,v 1.5 1997/01/30 05:05:00 deraadt Exp
  * _mcount updates data structures that represent traversals of the
  * program's call graph edges.  frompc and selfpc are the return
  * address and function address that represents the given call graph edge.
- * 
+ *
  * Note: the original BSD code used the same variable (frompcindex) for
  * both frompcindex and frompc.  Any reasonable, modern compiler will
  * perform this optimization.
@@ -162,7 +162,6 @@ _MCOUNT_DECL(frompc, selfpc)	/* _mcount; may be static, inline, etc */
 			*frompcindex = toindex;
 			goto done;
 		}
-		
 	}
 done:
 #ifdef _KERNEL
diff --git a/lib/libc/hash/rmd160.c b/lib/libc/hash/rmd160.c
index 720c9665c47..8e5afe21d98 100644
--- a/lib/libc/hash/rmd160.c
+++ b/lib/libc/hash/rmd160.c
@@ -3,11 +3,11 @@
  *      FILE:     rmd160.c
  *
  *      CONTENTS: A sample C-implementation of the RIPEMD-160
- *                hash-function.
+ *		  hash-function.
  *      TARGET:   any computer with an ANSI C compiler
  *
  *      AUTHOR:   Antoon Bosselaers, ESAT-COSIC
- *                (Arranged for libc by Todd C. Miller)
+ *		  (Arranged for libc by Todd C. Miller)
  *      DATE:     1 March 1996
  *      VERSION:  1.0
  *
diff --git a/lib/libc/hash/sha1.c b/lib/libc/hash/sha1.c
index 56df23605eb..7b11732e925 100644
--- a/lib/libc/hash/sha1.c
+++ b/lib/libc/hash/sha1.c
@@ -1,10 +1,10 @@
-/*	$OpenBSD: sha1.c,v 1.8 1997/07/15 01:54:24 millert Exp $	*/
+/*	$OpenBSD: sha1.c,v 1.9 1997/07/23 21:12:32 kstailey Exp $	*/
 
 /*
  * SHA-1 in C
  * By Steve Reid <steve@edmweb.com>
  * 100% Public Domain
- * 
+ *
  * Test Vectors (from FIPS PUB 180-1)
  * "abc"
  *   A9993E36 4706816A BA3E2571 7850C26C 9CD0D89D
@@ -140,11 +140,11 @@ void SHA1Update(context, data, len)
 	context->count[1] += (len>>29)+1;
     j = (j >> 3) & 63;
     if ((j + len) > 63) {
-        (void)memcpy(&context->buffer[j], data, (i = 64-j));
-        SHA1Transform(context->state, context->buffer);
-        for ( ; i + 63 < len; i += 64)
-            SHA1Transform(context->state, &data[i]);
-        j = 0;
+	(void)memcpy(&context->buffer[j], data, (i = 64-j));
+	SHA1Transform(context->state, context->buffer);
+	for ( ; i + 63 < len; i += 64)
+	    SHA1Transform(context->state, &data[i]);
+	j = 0;
     } else {
 	i = 0;
     }
@@ -163,12 +163,12 @@ void SHA1Final(digest, context)
     u_char finalcount[8];
 
     for (i = 0; i < 8; i++) {
-        finalcount[i] = (u_char)((context->count[(i >= 4 ? 0 : 1)]
-         >> ((3-(i & 3)) * 8) ) & 255);  /* Endian independent */
+	finalcount[i] = (u_char)((context->count[(i >= 4 ? 0 : 1)]
+	 >> ((3-(i & 3)) * 8) ) & 255);	 /* Endian independent */
     }
     SHA1Update(context, (u_char *)"\200", 1);
     while ((context->count[0] & 504) != 448)
-        SHA1Update(context, (u_char *)"\0", 1);
+	SHA1Update(context, (u_char *)"\0", 1);
     SHA1Update(context, finalcount, 8);  /* Should cause a SHA1Transform() */
 
     if (digest) {
diff --git a/lib/libc/locale/_def_messages.c b/lib/libc/locale/_def_messages.c
index 81cc26c4d87..cff748b6be0 100644
--- a/lib/libc/locale/_def_messages.c
+++ b/lib/libc/locale/_def_messages.c
@@ -4,13 +4,13 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char rcsid[] = "$OpenBSD: _def_messages.c,v 1.2 1996/08/19 08:28:12 tholo Exp $";
+static char rcsid[] = "$OpenBSD: _def_messages.c,v 1.3 1997/07/23 21:14:38 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <sys/localedef.h>
 #include <locale.h>
 
-const _MessagesLocale _DefaultMessagesLocale = 
+const _MessagesLocale _DefaultMessagesLocale =
 {
 	"^[Yn]",
 	"^[Nn]",
diff --git a/lib/libc/locale/_def_monetary.c b/lib/libc/locale/_def_monetary.c
index 3ed225a25f2..653424309a9 100644
--- a/lib/libc/locale/_def_monetary.c
+++ b/lib/libc/locale/_def_monetary.c
@@ -4,14 +4,14 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char rcsid[] = "$OpenBSD: _def_monetary.c,v 1.2 1996/08/19 08:28:14 tholo Exp $";
+static char rcsid[] = "$OpenBSD: _def_monetary.c,v 1.3 1997/07/23 21:14:38 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <sys/localedef.h>
 #include <limits.h>
 #include <locale.h>
 
-const _MonetaryLocale _DefaultMonetaryLocale = 
+const _MonetaryLocale _DefaultMonetaryLocale =
 {
 	"",
 	"",
diff --git a/lib/libc/locale/_def_numeric.c b/lib/libc/locale/_def_numeric.c
index 558b02ee902..26320ebd8b0 100644
--- a/lib/libc/locale/_def_numeric.c
+++ b/lib/libc/locale/_def_numeric.c
@@ -4,13 +4,13 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char rcsid[] = "$OpenBSD: _def_numeric.c,v 1.2 1996/08/19 08:28:16 tholo Exp $";
+static char rcsid[] = "$OpenBSD: _def_numeric.c,v 1.3 1997/07/23 21:14:39 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <sys/localedef.h>
 #include <locale.h>
 
-const _NumericLocale _DefaultNumericLocale = 
+const _NumericLocale _DefaultNumericLocale =
 {
 	".",
 	"",
diff --git a/lib/libc/locale/_def_time.c b/lib/libc/locale/_def_time.c
index 613fc3ecb9c..99cc4011fce 100644
--- a/lib/libc/locale/_def_time.c
+++ b/lib/libc/locale/_def_time.c
@@ -4,13 +4,13 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char rcsid[] = "$OpenBSD: _def_time.c,v 1.2 1996/08/19 08:28:18 tholo Exp $";
+static char rcsid[] = "$OpenBSD: _def_time.c,v 1.3 1997/07/23 21:14:40 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <sys/localedef.h>
 #include <locale.h>
 
-const _TimeLocale _DefaultTimeLocale = 
+const _TimeLocale _DefaultTimeLocale =
 {
 	{
 		"Sun","Mon","Tue","Wed","Thu","Fri","Sat",
diff --git a/lib/libc/locale/localeconv.c b/lib/libc/locale/localeconv.c
index f5ddb39a0b7..93d708bb434 100644
--- a/lib/libc/locale/localeconv.c
+++ b/lib/libc/locale/localeconv.c
@@ -4,19 +4,19 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char *rcsid = "$OpenBSD: localeconv.c,v 1.2 1996/08/19 08:28:20 tholo Exp $";
+static char *rcsid = "$OpenBSD: localeconv.c,v 1.3 1997/07/23 21:14:40 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <sys/localedef.h>
 #include <locale.h>
 
-/* 
+/*
  * The localeconv() function constructs a struct lconv from the current
  * monetary and numeric locales.
  *
  * Because localeconv() may be called many times (especially by library
- * routines like printf() & strtod()), the approprate members of the 
- * lconv structure are computed only when the monetary or numeric 
+ * routines like printf() & strtod()), the approprate members of the
+ * lconv structure are computed only when the monetary or numeric
  * locale has been changed.
  */
 int __mlocale_changed = 1;
diff --git a/lib/libc/locale/nl_langinfo.c b/lib/libc/locale/nl_langinfo.c
index 0c432303fb0..42e31f37704 100644
--- a/lib/libc/locale/nl_langinfo.c
+++ b/lib/libc/locale/nl_langinfo.c
@@ -4,7 +4,7 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char *rcsid = "$OpenBSD: nl_langinfo.c,v 1.2 1996/08/19 08:28:23 tholo Exp $";
+static char *rcsid = "$OpenBSD: nl_langinfo.c,v 1.3 1997/07/23 21:14:41 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <sys/localedef.h>
@@ -21,7 +21,7 @@ nl_langinfo(item)
 	switch (item) {
 	case D_T_FMT:
 		s = _CurrentTimeLocale->d_t_fmt;
-		break;	
+		break;
 	case D_FMT:
 		s = _CurrentTimeLocale->d_fmt;
 		break;
diff --git a/lib/libc/md/md4c.c b/lib/libc/md/md4c.c
index c1af994a56d..75e84d52384 100644
--- a/lib/libc/md/md4c.c
+++ b/lib/libc/md/md4c.c
@@ -22,7 +22,7 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char rcsid[] = "$OpenBSD: md4c.c,v 1.10 1997/07/03 23:30:20 provos Exp $";
+static char rcsid[] = "$OpenBSD: md4c.c,v 1.11 1997/07/23 21:17:55 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <string.h>
@@ -51,7 +51,7 @@ static void MD4Transform __P ((u_int32_t [4], const unsigned char [64]));
 
 #if BYTE_ORDER == LITTLE_ENDIAN
 #define Encode memcpy
-#define Decode memcpy                       
+#define Decode memcpy
 #else /* BIG_ENDIAN */
 static void Encode __P ((void *, const void *, size_t));
 static void Decode __P ((void *, const void *, size_t));
@@ -130,7 +130,7 @@ size_t len;
 /* MD4 initialization. Begins an MD4 operation, writing a new context.
  */
 void MD4Init (context)
-MD4_CTX *context;                                        /* context */
+MD4_CTX *context;					 /* context */
 {
   context->count = 0;
 
@@ -147,9 +147,9 @@ MD4_CTX *context;                                        /* context */
      context.
  */
 void MD4Update (context, input, inputLen)
-MD4_CTX *context;                                        /* context */
-const unsigned char *input;                                /* input block */
-size_t inputLen;                     /* length of input block */
+MD4_CTX *context;				/* context */
+const unsigned char *input;			/* input block */
+size_t inputLen;				/* length of input block */
 {
   unsigned int i, index, partLen;
 
@@ -184,8 +184,8 @@ size_t inputLen;                     /* length of input block */
      the message digest and zeroizing the context.
  */
 void MD4Final (digest, context)
-unsigned char digest[16];                         /* message digest */
-MD4_CTX *context;                                        /* context */
+unsigned char digest[16];			  /* message digest */
+MD4_CTX *context;					 /* context */
 {
   unsigned char bits[8];
   unsigned int index, padLen;
diff --git a/lib/libc/md/md5c.c b/lib/libc/md/md5c.c
index 520ef87bc90..0407ba03afc 100644
--- a/lib/libc/md/md5c.c
+++ b/lib/libc/md/md5c.c
@@ -23,7 +23,7 @@ documentation and/or software.
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char rcsid[] = "$OpenBSD: md5c.c,v 1.10 1997/07/03 23:30:21 provos Exp $";
+static char rcsid[] = "$OpenBSD: md5c.c,v 1.11 1997/07/23 21:17:56 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <string.h>
@@ -103,7 +103,7 @@ Rotation is separate from addition to prevent recomputation.
  (a) += (b); \
   }
 
-#if BYTE_ORDER != LITTLE_ENDIAN        
+#if BYTE_ORDER != LITTLE_ENDIAN
 /* Encodes input (u_int32_t) into output (unsigned char). Assumes len is
   a multiple of 4.
  */
@@ -145,7 +145,7 @@ size_t len;
 /* MD5 initialization. Begins an MD5 operation, writing a new context.
  */
 void MD5Init (context)
-MD5_CTX *context;                                        /* context */
+MD5_CTX *context;					 /* context */
 {
   context->count = 0;
   /* Load magic initialization constants. */
@@ -160,9 +160,9 @@ MD5_CTX *context;                                        /* context */
   context.
  */
 void MD5Update (context, input, inputLen)
-MD5_CTX *context;                                        /* context */
-const unsigned char *input;                                /* input block */
-size_t inputLen;                     /* length of input block */
+MD5_CTX *context;					/* context */
+const unsigned char *input;				/* input block */
+size_t inputLen;		     /* length of input block */
 {
   unsigned int i, index, partLen;
 
@@ -195,8 +195,8 @@ size_t inputLen;                     /* length of input block */
   the message digest and zeroizing the context.
  */
 void MD5Final (digest, context)
-unsigned char digest[16];                         /* message digest */
-MD5_CTX *context;                                       /* context */
+unsigned char digest[16];			  /* message digest */
+MD5_CTX *context;					/* context */
 {
   unsigned char bits[8];
   unsigned int index;
diff --git a/lib/libc/md/mdXhl.c b/lib/libc/md/mdXhl.c
index 20e477e4217..d26424df993 100644
--- a/lib/libc/md/mdXhl.c
+++ b/lib/libc/md/mdXhl.c
@@ -8,7 +8,7 @@
  */
 
 #if defined(LIBC_SCCS) && !defined(lint)
-static char rcsid[] = "$OpenBSD: mdXhl.c,v 1.7 1997/07/12 20:30:57 millert Exp $";
+static char rcsid[] = "$OpenBSD: mdXhl.c,v 1.8 1997/07/23 21:17:56 kstailey Exp $";
 #endif /* LIBC_SCCS and not lint */
 
 #include <stdlib.h>
@@ -32,7 +32,7 @@ MDXEnd(ctx, buf)
     static const char hex[]="0123456789abcdef";
 
     if (!p)
-        p = malloc(33);
+	p = malloc(33);
     if (!p)
 	return 0;
     MDXFinal(digest,ctx);

