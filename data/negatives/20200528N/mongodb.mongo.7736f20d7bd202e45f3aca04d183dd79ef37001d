commit 7736f20d7bd202e45f3aca04d183dd79ef37001d
Author: Kyle Suarez <ksuarz@gmail.com>
Date:   Tue Apr 12 13:32:31 2016 -0400

    SERVER-23655 invalidate CollectionInfoCache on index build
    
    This forces a rebuild of a collection's info cache once an index build has
    started, rather than waiting until the build has completed. This way,
    updates occurring while a background index build is in progress correctly know
    that the index will be affected and perform the update accordingly.

diff --git a/src/mongo/db/catalog/index_catalog.cpp b/src/mongo/db/catalog/index_catalog.cpp
index 32139f520a..d04765c9fd 100644
--- a/src/mongo/db/catalog/index_catalog.cpp
+++ b/src/mongo/db/catalog/index_catalog.cpp
@@ -366,6 +366,11 @@ Status IndexCatalog::IndexBuildBlock::init() {
     const bool initFromDisk = false;
     _entry = _catalog->_setupInMemoryStructures(_txn, descriptorCleaner.release(), initFromDisk);
 
+    // Register this index with the CollectionInfoCache to regenerate the cache. This way, updates
+    // occurring while an index is being build in the background will be aware of whether or not
+    // they need to modify any indexes.
+    _collection->infoCache()->addedIndex(_txn, descriptor);
+
     return Status::OK();
 }
 
@@ -414,8 +419,6 @@ void IndexCatalog::IndexBuildBlock::success() {
     });
 
     entry->setIsReady(true);
-
-    collection->infoCache()->addedIndex(_txn, desc);
 }
 
 namespace {

