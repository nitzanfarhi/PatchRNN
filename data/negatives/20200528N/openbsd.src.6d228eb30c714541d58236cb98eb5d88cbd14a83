commit 6d228eb30c714541d58236cb98eb5d88cbd14a83
Author: mglocker <mglocker@openbsd.org>
Date:   Wed Dec 17 08:39:01 2008 +0000

    Backout anonymous union fix, since it breaks V4L ports.  we try to fix
    this upstream instead.
    
    OK deraadt@

diff --git a/sys/dev/usb/uvideo.c b/sys/dev/usb/uvideo.c
index 8e65824a101..cb2bd5382c1 100644
--- a/sys/dev/usb/uvideo.c
+++ b/sys/dev/usb/uvideo.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: uvideo.c,v 1.108 2008/12/14 07:38:41 ray Exp $ */
+/*	$OpenBSD: uvideo.c,v 1.109 2008/12/17 08:39:01 mglocker Exp $ */
 
 /*
  * Copyright (c) 2008 Robert Nagy <robert@openbsd.org>
@@ -2537,15 +2537,15 @@ uvideo_enum_fsizes(void *v, struct v4l2_frmsizeenum *fsizes)
 	if (sc->sc_fmtgrp[idx].frame[i]->bFrameIntervalType == 0) {
 		/* TODO */
 		fsizes->type = V4L2_FRMSIZE_TYPE_CONTINUOUS;
-		fsizes->size.stepwise.min_width = 0;
-		fsizes->size.stepwise.min_height = 0;
-		fsizes->size.stepwise.max_width = 0;
-		fsizes->size.stepwise.max_height = 0;
+		fsizes->stepwise.min_width = 0;
+		fsizes->stepwise.min_height = 0;
+		fsizes->stepwise.max_width = 0;
+		fsizes->stepwise.max_height = 0;
 	} else {
 		fsizes->type = V4L2_FRMSIZE_TYPE_DISCRETE;
-		fsizes->size.discrete.width =
+		fsizes->discrete.width =
 		    UGETW(sc->sc_fmtgrp[idx].frame[i]->wWidth);
-		fsizes->size.discrete.height =
+		fsizes->discrete.height =
 		    UGETW(sc->sc_fmtgrp[idx].frame[i]->wHeight);
 	}
 
diff --git a/sys/sys/videoio.h b/sys/sys/videoio.h
index 55fa70d1760..f9e77845107 100644
--- a/sys/sys/videoio.h
+++ b/sys/sys/videoio.h
@@ -1,4 +1,4 @@
-/*	$OpenBSD: videoio.h,v 1.2 2008/12/14 07:38:41 ray Exp $	*/
+/*	$OpenBSD: videoio.h,v 1.3 2008/12/17 08:39:01 mglocker Exp $	*/
 /*
  *  Video for Linux Two header file
  *
@@ -394,7 +394,7 @@ struct v4l2_frmsizeenum {
 	union {			/* Frame size */
 		struct v4l2_frmsize_discrete discrete;
 		struct v4l2_frmsize_stepwise stepwise;
-	} size;
+	};
 
 	__u32           reserved[2];	/* Reserved space for future use */
 };
@@ -424,7 +424,7 @@ struct v4l2_frmivalenum {
 	union {			/* Frame interval */
 		struct v4l2_fract discrete;
 		struct v4l2_frmival_stepwise stepwise;
-	} interval;
+	};
 
 	__u32           reserved[2];	/* Reserved space for future use */
 };
@@ -873,7 +873,7 @@ struct v4l2_ext_control {
 		__s32           value;
 		__s64           value64;
 		void           *reserved;
-	} value;
+	};
 }               __attribute__((packed));
 
 struct v4l2_ext_controls {
@@ -1273,7 +1273,7 @@ struct v4l2_encoder_cmd {
 		struct {
 			__u32           data[8];
 		}               raw;
-	} raw;
+	};
 };
 
 #endif

