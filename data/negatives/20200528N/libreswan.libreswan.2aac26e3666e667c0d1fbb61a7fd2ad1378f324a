commit 2aac26e3666e667c0d1fbb61a7fd2ad1378f324a
Author: Andrew Cagney <cagney@gnu.org>
Date:   Wed Feb 1 14:02:21 2017 -0500

    pluto: IKEv1 IKE: when emitting proposal, add missing keylen when !.keylen_omitted
    
    Instead of using hardwired crypto_req_keysize(CRK_IKEv1).
    
    Since key lengths should have been added during proposal construction,
    pexpect() the code to never be executed.

diff --git a/programs/pluto/ikev1_spdb_struct.c b/programs/pluto/ikev1_spdb_struct.c
index 606b1343c..011345959 100644
--- a/programs/pluto/ikev1_spdb_struct.c
+++ b/programs/pluto/ikev1_spdb_struct.c
@@ -638,9 +638,34 @@ bool ikev1_out_sa(pb_stream *outs,
 
 					if (oakley_mode) {
 						if (!oakley_keysize && a->type.oakley == OAKLEY_ENCRYPTION_ALGORITHM) {
-							int defkeysize = crypto_req_keysize(CRK_IKEv1, a->val);
-
-							if (defkeysize != 0) {
+							const struct encrypt_desc *enc = ikev1_get_ike_encrypt_desc(a->val);
+							passert(enc); /* algorithm known */
+							/*
+							 * Since
+							 * spdb_struct.c
+							 * should have
+							 * added
+							 * default
+							 * keys when
+							 * needed, the
+							 * only way
+							 * this path
+							 * can be
+							 * executed is
+							 * when the
+							 * length
+							 * should be
+							 * omitted
+							 * (i.e.,
+							 * 3des).
+							 * i.e., this
+							 * code path
+							 * is dead.
+							 */
+							pexpect(enc->keylen_omitted);
+							if (!enc->keylen_omitted) {
+								int defkeysize = enc->keydeflen;
+								passert(defkeysize); /* never ike=NULL */
 								DBG(DBG_CONTROLMORE, DBG_log("inserting default oakley key length attribute payload of %d bits",
 									defkeysize));
 								if (!out_attr(OAKLEY_KEY_LENGTH,

