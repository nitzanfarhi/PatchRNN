commit 96b02d78a7e47cd189f6b307c5513fec6b2155dc
Author: Márton Németh <nm127@freemail.hu>
Date:   Sat Nov 21 23:10:15 2009 +0100

    perf_event: Remove redundant zero fill
    
    The buffer is first zeroed out by memset(). Then strncpy() is
    used to fill the content. The strncpy() function also pads the
    string till the end of the specified length, which is redundant.
    The strncpy() does not ensures that the string will be properly
    closed with 0. Use strlcpy() instead.
    
    The semantic match that finds this kind of pattern is as
    follows: (http://coccinelle.lip6.fr/)
    
    // <smpl>
    @@
    expression buffer;
    expression size;
    expression str;
    @@
            memset(buffer, 0, size);
            ...
    -       strncpy(
    +       strlcpy(
            buffer, str, sizeof(buffer)
            );
    @@
    expression buffer;
    expression size;
    expression str;
    @@
            memset(&buffer, 0, size);
            ...
    -       strncpy(
    +       strlcpy(
            &buffer, str, sizeof(buffer));
    @@
    expression buffer;
    identifier field;
    expression size;
    expression str;
    @@
            memset(buffer, 0, size);
            ...
    -       strncpy(
    +       strlcpy(
            buffer->field, str, sizeof(buffer->field)
            );
    @@
    expression buffer;
    identifier field;
    expression size;
    expression str;
    @@
            memset(&buffer, 0, size);
            ...
    -       strncpy(
    +       strlcpy(
            buffer.field, str, sizeof(buffer.field));
    // </smpl>
    
    On strncpy() vs strlcpy() see
    http://www.gratisoft.us/todd/papers/strlcpy.html .
    
    Signed-off-by: Márton Németh <nm127@freemail.hu>
    Cc: Julia Lawall <julia@diku.dk>
    Cc: cocci@diku.dk
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Paul Mackerras <paulus@samba.org>
    LKML-Reference: <4B086547.5040100@freemail.hu>
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

diff --git a/kernel/perf_event.c b/kernel/perf_event.c
index aba822722300..b26cb03c1914 100644
--- a/kernel/perf_event.c
+++ b/kernel/perf_event.c
@@ -3391,7 +3391,7 @@ static void perf_event_comm_event(struct perf_comm_event *comm_event)
 	char comm[TASK_COMM_LEN];
 
 	memset(comm, 0, sizeof(comm));
-	strncpy(comm, comm_event->task->comm, sizeof(comm));
+	strlcpy(comm, comm_event->task->comm, sizeof(comm));
 	size = ALIGN(strlen(comm)+1, sizeof(u64));
 
 	comm_event->comm = comm;

