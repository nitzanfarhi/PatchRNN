commit 0ae15132a4f5c758a6ffcde74495641dc3f62ba1
Author: Glauber Costa <glommer@redhat.com>
Date:   Wed Nov 19 15:36:33 2008 -0800

    mm: vmalloc search restart fix
    
    Current vmalloc restart search for a free area in case we can't find one.
    The reason is there are areas which are lazily freed, and could be
    possibly freed now.  However, current implementation start searching the
    tree from the last failing address, which is pretty much by definition at
    the end of address space.  So, we fail.
    
    The proposal of this patch is to restart the search from the beginning of
    the requested vstart address.  This fixes the regression in running KVM
    virtual machines for me, described in http://lkml.org/lkml/2008/10/28/349,
    caused by commit db64fe02258f1507e13fe5212a989922323685ce.
    
    Signed-off-by: Glauber Costa <glommer@redhat.com>
    Signed-off-by: Nick Piggin <npiggin@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/vmalloc.c b/mm/vmalloc.c
index 04f5e320e744..30f826d484f0 100644
--- a/mm/vmalloc.c
+++ b/mm/vmalloc.c
@@ -324,14 +324,14 @@ static struct vmap_area *alloc_vmap_area(unsigned long size,
 
 	BUG_ON(size & ~PAGE_MASK);
 
-	addr = ALIGN(vstart, align);
-
 	va = kmalloc_node(sizeof(struct vmap_area),
 			gfp_mask & GFP_RECLAIM_MASK, node);
 	if (unlikely(!va))
 		return ERR_PTR(-ENOMEM);
 
 retry:
+	addr = ALIGN(vstart, align);
+
 	spin_lock(&vmap_area_lock);
 	/* XXX: could have a last_hole cache */
 	n = vmap_area_root.rb_node;

