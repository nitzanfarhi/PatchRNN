commit 60824f6ac4a578b99a878caa3b12cd7f4bd7fbfe
Author: Jan Janak <jan@iptel.org>
Date:   Fri Nov 24 10:48:27 2006 +0000

    - return codes extended so that we could detect malformed digest credentials
      (proposed by Monica Sarbu)
      closes SER-136

diff --git a/modules_s/auth/api.c b/modules_s/auth/api.c
index 9d1bf1935..cc38ee63a 100644
--- a/modules_s/auth/api.c
+++ b/modules_s/auth/api.c
@@ -82,7 +82,7 @@ auth_result_t pre_auth(struct sip_msg* msg, str* realm, hdr_types_t hftype,
 	     /* Check credentials correctness here */
 	if (check_dig_cred(&(c->digest)) != E_DIG_OK) {
 		LOG(L_ERR, "auth:pre_auth: Credentials are not filled properly\n");
-		return ERROR;
+		return BAD_CREDENTIALS;
 	}
 
 	if (check_nonce(&c->digest.nonce, &secret, msg) != 0) {
diff --git a/modules_s/auth/api.h b/modules_s/auth/api.h
index 574b91d24..fdf12af1e 100644
--- a/modules_s/auth/api.h
+++ b/modules_s/auth/api.h
@@ -42,7 +42,8 @@ typedef enum auth_result {
 	ERROR = -2 ,        /* Error occurred, a reply has been sent out -> return 0 to the ser core */
 	NOT_AUTHENTICATED,  /* Don't perform authentication, credentials missing */
 	DO_AUTHENTICATION,  /* Perform digest authentication */
-        AUTHENTICATED       /* Authenticated by default, no digest authentication necessary */
+        AUTHENTICATED,      /* Authenticated by default, no digest authentication necessary */
+	BAD_CREDENTIALS     /* Digest credentials are malformed */
 } auth_result_t;
 
 
diff --git a/modules_s/auth_db/authorize.c b/modules_s/auth_db/authorize.c
index 6fa08f1d7..240c5936c 100644
--- a/modules_s/auth_db/authorize.c
+++ b/modules_s/auth_db/authorize.c
@@ -247,6 +247,7 @@ static inline int authenticate(struct sip_msg* msg, str* realm, str* table, hdr_
     
     switch(auth_api.pre_auth(msg, realm, hftype, &h)) {
     case ERROR:
+    case BAD_CREDENTIALS:
 	ret = -3;
 	goto end;
 	
@@ -290,7 +291,8 @@ static inline int authenticate(struct sip_msg* msg, str* realm, str* table, hdr_
 	 /* Recalculate response, it must be same to authorize successfully */
     if (!check_response(&(cred->digest), &msg->first_line.u.request.method, ha1)) {
 	switch(auth_api.post_auth(msg, h)) {
-	case ERROR: 
+	case ERROR:
+	case BAD_CREDENTIALS:
 	    ret = -2; 
 	    break;
 	    
diff --git a/modules_s/auth_radius/authorize.c b/modules_s/auth_radius/authorize.c
index 46bf1d948..2c40aa59a 100644
--- a/modules_s/auth_radius/authorize.c
+++ b/modules_s/auth_radius/authorize.c
@@ -90,7 +90,9 @@ static inline int authorize(struct sip_msg* _msg, str* _realm,
 	ret = auth_api.pre_auth(_msg, &domain, _hftype, &h);
 	
 	switch(ret) {
-	case ERROR:             return 0;
+	case ERROR:             
+	case BAD_CREDENTIALS:
+	    return 0;
 	case NOT_AUTHENTICATED: return -1;
 	case DO_AUTHENTICATION: break;
 	case AUTHENTICATED:     return 1;
@@ -121,7 +123,10 @@ static inline int authorize(struct sip_msg* _msg, str* _realm,
 	if (res == 1) {
 		ret = auth_api.post_auth(_msg, h);
 		switch(ret) {
-		case ERROR:             return 0;
+		case ERROR:             
+		case BAD_CREDENTIALS:
+		    return 0;
+		case BAD_CREDENTIALS:   return 0;
 		case NOT_AUTHENTICATED: return -1;
 		case AUTHENTICATED:     return 1;
 		default:                return -1;

