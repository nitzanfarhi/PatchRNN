commit 20fddebf52d6de7ce63657981c80cfbabcaab7f2
Author: lklots <lklots@2248de34-8caa-4a3c-bc55-5e52d9d7b73a>
Date:   Wed Jul 28 08:13:13 2010 -0700

    RFC: Content-MD5 header removal
    
    Summary:
    Replace any Content-MD5 header with a corrected one when
    compression is enabled (which would otherwise invalidate
    the MD5)
    
    Test Plan:
    fast_tests, slow_tests
    
    DiffCamp Revision: 138209
    Reviewed By: hzhao
    Commenters: dwei,mathewsb,erling,mwilliams
    CC: hphp-diffs@lists
    Revert Plan: Ok

diff --git a/src/runtime/base/server/transport.cpp b/src/runtime/base/server/transport.cpp
index caefa621ef..4bd558720b 100644
--- a/src/runtime/base/server/transport.cpp
+++ b/src/runtime/base/server/transport.cpp
@@ -22,6 +22,7 @@
 #include <util/compression.h>
 #include <util/util.h>
 #include <util/logger.h>
+#include <runtime/base/string_util.h>
 #include <runtime/base/time/datetime.h>
 #include <runtime/base/zend/zend_url.h>
 #include <runtime/base/runtime_option.h>
@@ -523,7 +524,7 @@ bool Transport::setCookie(CStrRef name, CStrRef value, int expire /* = 0 */,
 
 ///////////////////////////////////////////////////////////////////////////////
 
-void Transport::prepareHeaders(bool compressed) {
+void Transport::prepareHeaders(bool compressed, const void *data, int size) {
   FiberReadLock lock(this);
   for (HeaderMap::const_iterator iter = m_responseHeaders.begin();
        iter != m_responseHeaders.end(); ++iter) {
@@ -541,7 +542,12 @@ void Transport::prepareHeaders(bool compressed) {
   if (compressed) {
     addHeaderImpl("Content-Encoding", "gzip");
     removeHeaderImpl("Content-Length");
-    removeHeaderImpl("Content-MD5");
+    if (m_responseHeaders.find("Content-MD5") != m_responseHeaders.end()) {
+      String response((const char *)data, size, AttachLiteral);
+      replaceHeader("Content-MD5",
+                    StringUtil::Base64Encode(
+                      StringUtil::MD5(response, true)).c_str());
+    }
   }
 
   if (m_responseHeaders.find("Content-Type") == m_responseHeaders.end()) {
@@ -631,7 +637,7 @@ void Transport::sendRaw(void *data, int size, int code /* = 200 */,
 
   // HTTP header handling
   if (!m_headerSent) {
-    prepareHeaders(compressed);
+    prepareHeaders(compressed, data, size);
     m_headerSent = true;
   }
 
diff --git a/src/runtime/base/server/transport.h b/src/runtime/base/server/transport.h
index bf683a0862..f5a463b849 100644
--- a/src/runtime/base/server/transport.h
+++ b/src/runtime/base/server/transport.h
@@ -333,7 +333,7 @@ protected:
   static void urlUnescape(char *value);
   bool splitHeader(CStrRef header, String &name, const char *&value);
 
-  void prepareHeaders(bool compressed);
+  void prepareHeaders(bool compressed, const void *data, int size);
   String prepareResponse(const void *data, int size, bool &compressed,
                          bool last);
 };

