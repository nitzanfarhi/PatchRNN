commit d921e5e049ded4d29982c004a323334ea49fc0c4
Author: Andrew Beekhof <andrew@beekhof.net>
Date:   Wed Jun 18 18:33:14 2008 +0200

    Medium: PE: Bug LF:1886 - Create a resource and operation 'defaults' config section
    
    Mercurial revision: 026ebeba54653348f8a029e22cfb775889260636

diff --git a/lib/crm/pengine/complex.c b/lib/crm/pengine/complex.c
index 7e0b66b94..388bffa75 100644
--- a/lib/crm/pengine/complex.c
+++ b/lib/crm/pengine/complex.c
@@ -23,6 +23,7 @@
 #include <crm/msg_xml.h>
 #include <clplumbing/cl_misc.h>
 
+extern xmlNode *get_object_root(const char *object_type,xmlNode *the_root);
 void populate_hash(xmlNode *nvpair_list, GHashTable *hash,
 		   const char **attrs, int attrs_length);
 
@@ -101,10 +102,14 @@ get_meta_attributes(GHashTable *meta_hash, resource_t *rsc,
 		    node_t *node, pe_working_set_t *data_set)
 {
 	GHashTable *node_hash = NULL;
+	xmlNode *defaults = get_object_root(XML_CIB_TAG_RSCCONFIG, data_set->input);
 	if(node) {
 		node_hash = node->details->attrs;
 	}
 	
+	unpack_instance_attributes(defaults, XML_TAG_META_SETS, node_hash,
+				   meta_hash, NULL, FALSE, data_set->now);
+	
 	xml_prop_iter(rsc->xml, prop_name, prop_value,
 		      add_hash_param(meta_hash, prop_name, prop_value);
 		);
diff --git a/lib/crm/pengine/utils.c b/lib/crm/pengine/utils.c
index bbf4a99d0..83a34b390 100644
--- a/lib/crm/pengine/utils.c
+++ b/lib/crm/pengine/utils.c
@@ -26,6 +26,7 @@
 #include <crm/pengine/rules.h>
 #include <utils.h>
 
+extern xmlNode *get_object_root(const char *object_type,xmlNode *the_root);
 void print_str_str(gpointer key, gpointer value, gpointer user_data);
 gboolean ghash_free_str_str(gpointer key, gpointer value, gpointer user_data);
 void unpack_operation(
@@ -616,14 +617,31 @@ unpack_operation(
 	const char *class = NULL;
 	const char *value = NULL;
 	const char *field = NULL;
-	
+	GHashTable *meta = NULL;
+	xmlNode *defaults = get_object_root(XML_CIB_TAG_OPCONFIG, data_set->input);
+
 	CRM_CHECK(action->rsc != NULL, return);
-	class = g_hash_table_lookup(action->rsc->meta, "class");
+
+	unpack_instance_attributes(defaults, XML_TAG_META_SETS, NULL,
+				   action->meta, NULL, FALSE, data_set->now);
+
+	xml_prop_iter(xml_obj, name, value,
+		      if(value != NULL && g_hash_table_lookup(meta, name) == NULL) {
+			  g_hash_table_insert(meta, crm_strdup(name), crm_strdup(value));
+		      }
+	    );
 	
-	if(xml_obj != NULL) {
-		value = crm_element_value(xml_obj, "prereq");
-	}
+	unpack_instance_attributes(xml_obj, XML_TAG_META_SETS,
+				   NULL, action->meta, NULL, FALSE, data_set->now);
+	
+	unpack_instance_attributes(xml_obj, XML_TAG_ATTR_SETS,
+				   NULL, action->meta, NULL, FALSE, data_set->now);
+	
+	g_hash_table_remove(action->meta, "id");	
+
+	class = g_hash_table_lookup(action->rsc->meta, "class");
 	
+	value = g_hash_table_lookup(meta, "prereq");
 	if(value == NULL && safe_str_neq(action->task, CRMD_ACTION_START)) {
 		/* todo: integrate stop as an option? */
 		action->needs = rsc_req_nothing;
@@ -663,10 +681,7 @@ unpack_operation(
 	}
 	crm_debug_3("\tAction %s requires: %s", action->task, value);
 
-	value = NULL;
-	if(xml_obj != NULL) {
-		value = crm_element_value(xml_obj, XML_OP_ATTR_ON_FAIL);
-	}
+	value = g_hash_table_lookup(meta, XML_OP_ATTR_ON_FAIL);
 	if(value == NULL) {
 
 	} else if(safe_str_eq(value, "block")) {
@@ -733,7 +748,7 @@ unpack_operation(
 
 	value = NULL;
 	if(xml_obj != NULL) {
-		value = crm_element_value(xml_obj, "role_after_failure");
+		value = g_hash_table_lookup(meta, "role_after_failure");
 	}
 	if(value != NULL && action->fail_role == RSC_ROLE_UNKNOWN) {
 		action->fail_role = text2role(value);
@@ -747,24 +762,7 @@ unpack_operation(
 		}
 	}
 	crm_debug_3("\t%s failure results in: %s",
-		    action->task, role2text(action->fail_role));
-	
-	if(xml_obj != NULL) {
-		xml_prop_iter(xml_obj, p_name, p_value,
-			      if(p_value != NULL) {
-				      g_hash_table_insert(action->meta, crm_strdup(p_name),
-							  crm_strdup(p_value));
-			      }
-			);
-
-		g_hash_table_remove(action->meta, "id");
-		
-		unpack_instance_attributes(xml_obj, XML_TAG_META_SETS,
-					   NULL, action->meta, NULL, FALSE, data_set->now);
-		
-		unpack_instance_attributes(xml_obj, XML_TAG_ATTR_SETS,
-					   NULL, action->meta, NULL, FALSE, data_set->now);
-	}
+		    action->task, role2text(action->fail_role));	
 
 	field = XML_LRM_ATTR_INTERVAL;
 	value = g_hash_table_lookup(action->meta, field);

