commit 5bb29cfaeb816cb9ded52e688c02eaf53d5d96e5
Author: Sterling Hughes <sterling@php.net>
Date:   Sat May 31 18:31:28 2003 +0000

    revert the function call caching patch until a new solution is decided
    upon.

diff --git a/Zend/zend_compile.c b/Zend/zend_compile.c
index 8ebfbcb2ac..1efdd76a4e 100644
--- a/Zend/zend_compile.c
+++ b/Zend/zend_compile.c
@@ -1245,8 +1245,6 @@ void zend_do_begin_dynamic_function_call(znode *function_name TSRMLS_DC)
 	opline->opcode = ZEND_INIT_FCALL_BY_NAME;
 	opline->op2 = *function_name;
 	opline->extended_value = 0;
-	opline->result.u.var = get_temporary_variable(CG(active_op_array));
-	opline->result.op_type = IS_TMP_VAR;
 
 	SET_UNUSED(opline->op1);
 
diff --git a/Zend/zend_execute.c b/Zend/zend_execute.c
index 3aee58f3dc..da2fed83b5 100644
--- a/Zend/zend_execute.c
+++ b/Zend/zend_execute.c
@@ -2562,10 +2562,7 @@ int zend_init_fcall_by_name_handler(ZEND_OPCODE_HANDLER_ARGS)
 
 	is_const = (EX(opline)->op2.op_type == IS_CONST);
 
-	if (EX_T(EX(opline)->result.u.var).tmp_var.type == IS_LONG) {
-		function = (zend_function *) EX_T(EX(opline)->result.u.var).tmp_var.value.lval;
-		goto looked_up_fcall;
-	} else if (is_const) {
+	if (is_const) {
 		function_name_strval = EX(opline)->op2.u.constant.value.str.val;
 		function_name_strlen = EX(opline)->op2.u.constant.value.str.len;
 	} else {
@@ -2585,12 +2582,8 @@ int zend_init_fcall_by_name_handler(ZEND_OPCODE_HANDLER_ARGS)
 	if (!is_const) {
 		efree(function_name_strval);
 		FREE_OP(EX(Ts), &EX(opline)->op2, EG(free_op2));
-	} else {
-		EX_T(EX(opline)->result.u.var).tmp_var.type = IS_LONG;
-		EX_T(EX(opline)->result.u.var).tmp_var.value.lval = (long) function;
-	}
+	} 
 
-looked_up_fcall:
 	EX(calling_scope) = function->common.scope;
 	EX(object) = NULL;
 	

