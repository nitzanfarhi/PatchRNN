commit 91350ed49bf3613e243c2e216228cd4ae8f32516
Author: Dave Jones <davej@redhat.com>
Date:   Tue May 31 19:03:45 2005 -0700

    [CPUFREQ] Recalibrate cpu_khz [1/2]
    
    We have to recalibrate cpu_khz in order to use the current FID instead the max
    FID since some BIOS do not put the processor at maximum frequency at POST.
    Also, some BIOS will change the processor frequency at our back after cpu_khz
    was calibrate.  Finally, this will fix a long standing bug when we do
    something like this:
    
    # rmmod powernow-k7
    # modprobe powernow-k7
    
    Signed-off-by: Bruno Ducrot <ducrot@poupinou.org>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Dave Jones <davej@redhat.com>

diff --git a/arch/i386/kernel/cpu/cpufreq/powernow-k7.c b/arch/i386/kernel/cpu/cpufreq/powernow-k7.c
index 80f01b00bada..5c530064eb74 100644
--- a/arch/i386/kernel/cpu/cpufreq/powernow-k7.c
+++ b/arch/i386/kernel/cpu/cpufreq/powernow-k7.c
@@ -23,6 +23,7 @@
 #include <linux/dmi.h>
 
 #include <asm/msr.h>
+#include <asm/timer.h>
 #include <asm/timex.h>
 #include <asm/io.h>
 #include <asm/system.h>
@@ -586,8 +587,12 @@ static int __init powernow_cpu_init (struct cpufreq_policy *policy)
 
 	rdmsrl (MSR_K7_FID_VID_STATUS, fidvidstatus.val);
 
-	/* A K7 with powernow technology is set to max frequency by BIOS */
-	fsb = (10 * cpu_khz) / fid_codes[fidvidstatus.bits.MFID];
+	/* recalibrate cpu_khz */
+	result = recalibrate_cpu_khz();
+	if (result)
+		return result;
+
+	fsb = (10 * cpu_khz) / fid_codes[fidvidstatus.bits.CFID];
 	if (!fsb) {
 		printk(KERN_WARNING PFX "can not determine bus frequency\n");
 		return -EINVAL;

