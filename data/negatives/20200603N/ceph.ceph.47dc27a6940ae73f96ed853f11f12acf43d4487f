commit 47dc27a6940ae73f96ed853f11f12acf43d4487f
Author: Sage Weil <sage.weil@dreamhost.com>
Date:   Tue Jan 25 15:04:06 2011 -0800

    osd: avoid extraneous send_boot() calls
    
    Only send_boot() on osdmap update if we are restarting.  Otherwise we can
    end up with too many MOSDBoot messages in flight and the monitor may
    apply an old one instead of a new one.  For example:
    
    - cosd starts
    - send_boot with address set A
    - get an osdmap update
    - send_boot again with address set A
    - get an osdmap update.  now we're up.
    - get osdmap update, now we're marked down,
    - bind to address set B
    - send_boot with address set B
    
    and the monitor may apply the second MOSDBoot (with adddress set A).
    
    This results in an online OSD using a cluster address that differs from
    that in the OSDMap.  Which causes problems with peering, among other
    things.
    
    Signed-off-by: Sage Weil <sage@newdream.net>

diff --git a/src/osd/OSD.cc b/src/osd/OSD.cc
index 777e8bd720..5c9e33cfde 100644
--- a/src/osd/OSD.cc
+++ b/src/osd/OSD.cc
@@ -2740,6 +2740,7 @@ void OSD::handle_osd_map(MOSDMap *m)
   }
 
   bool do_shutdown = false;
+  bool do_restart = false;
   if (osdmap->get_epoch() > 0 &&
       state == STATE_ACTIVE) {
     if (!osdmap->exists(whoami)) {
@@ -2753,6 +2754,7 @@ void OSD::handle_osd_map(MOSDMap *m)
       
       state = STATE_BOOTING;
       up_epoch = 0;
+      do_restart = true;
 
       int cport = cluster_messenger->get_myaddr().get_port();
       int hbport = heartbeat_messenger->get_myaddr().get_port();
@@ -2803,7 +2805,7 @@ void OSD::handle_osd_map(MOSDMap *m)
   m->put();
 
 
-  if (is_booting())
+  if (do_restart)
     send_boot();
   if (do_shutdown)
     shutdown();

