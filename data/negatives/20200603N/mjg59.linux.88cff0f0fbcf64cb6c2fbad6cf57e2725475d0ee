commit 88cff0f0fbcf64cb6c2fbad6cf57e2725475d0ee
Author: hujianyang <hujianyang@huawei.com>
Date:   Tue Feb 10 11:28:57 2015 +0800

    UBIFS: return -EINVAL if log head is empty
    
    CS node is recognized as a sign in UBIFS log replay mechanism.
    Log relaying during mount should find the CS node in log head
    at beginning and then replay the following uncommitted buds.
    
    Here is a bug in log replay path: If the log head, which is
    indicated by @log_lnum in mst_node, is empty, current UBIFS
    replay nothing and directly mount the partition without any
    warning. This action will put filesystem in an abnormal state,
    e.g. space management in LPT area is incorrect to the real
    space usage in main area.
    
    We reproduced this bug by fault injection: turn log head leb
    into all 0xFF. UBIFS driver mount the polluted partition
    normally. But errors occur while running fs_stress on this
    mount:
    
    [89068.055183] UBI error: ubi_io_read: error -74 (ECC error) while reading 59 bytes from PEB 711:33088, read 59 bytes
    [89068.179877] UBIFS error (pid 10517): ubifs_check_node: bad magic 0x101031, expected 0x6101831
    [89068.179882] UBIFS error (pid 10517): ubifs_check_node: bad node at LEB 591:28992
    [89068.179891] Not a node, first 24 bytes:
    [89068.179892] 00000000: 31 10 10 00 37 84 64 04 10 04 00 00 00 00 00 00 20 00 00 00 02 01 00 00                          1...7.d......... .......
    [89068.180282] UBIFS error (pid 10517): ubifs_read_node: expected node type 2
    
    This patch fix the problem by checking *lnum* to guarantee
    the empty leb is not log head leb and return an error if the
    log head leb is incorrectly empty. After this, we could catch
    *log head empty* error in place.
    
    Signed-off-by: hujianyang <hujianyang@huawei.com>
    Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>

diff --git a/fs/ubifs/replay.c b/fs/ubifs/replay.c
index 3187925e9879..9b40a1c5e160 100644
--- a/fs/ubifs/replay.c
+++ b/fs/ubifs/replay.c
@@ -1028,9 +1028,22 @@ int ubifs_replay_journal(struct ubifs_info *c)
 
 	do {
 		err = replay_log_leb(c, lnum, 0, c->sbuf);
-		if (err == 1)
-			/* We hit the end of the log */
-			break;
+		if (err == 1) {
+			if (lnum != c->lhead_lnum)
+				/* We hit the end of the log */
+				break;
+
+			/*
+			 * The head of the log must always start with the
+			 * "commit start" node on a properly formatted UBIFS.
+			 * But we found no nodes at all, which means that
+			 * someting went wrong and we cannot proceed mounting
+			 * the file-system.
+			 */
+			ubifs_err("no UBIFS nodes found at the log head LEB %d:%d, possibly corrupted",
+				  lnum, 0);
+			err = -EINVAL;
+		}
 		if (err)
 			goto out;
 		lnum = ubifs_next_log_lnum(c, lnum);

