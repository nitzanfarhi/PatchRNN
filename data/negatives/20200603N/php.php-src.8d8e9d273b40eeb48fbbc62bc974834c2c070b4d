commit 8d8e9d273b40eeb48fbbc62bc974834c2c070b4d
Author: Ilia Alshanetsky <iliaa@php.net>
Date:   Sun Apr 6 15:21:24 2008 +0000

    Fixed bug #44603 (Order issues with Content-Type/Length headers on POST)

diff --git a/ext/standard/http_fopen_wrapper.c b/ext/standard/http_fopen_wrapper.c
index f96be7c221..aaeea74bc9 100644
--- a/ext/standard/http_fopen_wrapper.c
+++ b/ext/standard/http_fopen_wrapper.c
@@ -105,6 +105,7 @@ php_stream *php_stream_url_wrap_http_ex(php_stream_wrapper *wrapper, char *path,
 	char *protocol_version = NULL;
 	int protocol_version_len = 3; /* Default: "1.0" */
 	struct timeval timeout;
+	char *user_headers = NULL;
 
 	tmp_line[0] = '\0';
 
@@ -351,10 +352,8 @@ php_stream *php_stream_url_wrap_http_ex(php_stream_wrapper *wrapper, char *path,
 				efree(tmp);
 				tmp = tmp_c;
 			}
-		
-			/* Output trimmed headers with \r\n at the end */
-			php_stream_write(stream, tmp, strlen(tmp));
-			php_stream_write(stream, "\r\n", sizeof("\r\n") - 1);
+
+			user_headers = estrdup(tmp);
 
 			/* Make lowercase for easy comparison against 'standard' headers */
 			php_strtolower(tmp, strlen(tmp));
@@ -452,6 +451,27 @@ php_stream *php_stream_url_wrap_http_ex(php_stream_wrapper *wrapper, char *path,
 		}	
 	}
 
+	if (user_headers) {
+		/* A bit weird, but some servers require that Content-Length be sent prior to Content-Type for POST
+		 * see bug #44603 for details. Since Content-Type maybe part of user's headers we need to do this check first.
+		 */
+		if (
+				header_init &&
+				context &&
+				!(have_header & HTTP_HEADER_CONTENT_LENGTH) &&
+				php_stream_context_get_option(context, "http", "content", &tmpzval) == SUCCESS &&
+				Z_TYPE_PP(tmpzval) == IS_STRING && Z_STRLEN_PP(tmpzval) > 0
+		) {
+			scratch_len = slprintf(scratch, scratch_len, "Content-Length: %d\r\n", Z_STRLEN_PP(tmpzval));
+			php_stream_write(stream, scratch, scratch_len);
+			have_header |= HTTP_HEADER_CONTENT_LENGTH;
+		}
+
+		php_stream_write(stream, user_headers, strlen(user_headers));
+		php_stream_write(stream, "\r\n", sizeof("\r\n")-1);
+		efree(user_headers);
+	}
+
 	/* Request content, such as for POST requests */
 	if (header_init && context &&
 		php_stream_context_get_option(context, "http", "content", &tmpzval) == SUCCESS &&

