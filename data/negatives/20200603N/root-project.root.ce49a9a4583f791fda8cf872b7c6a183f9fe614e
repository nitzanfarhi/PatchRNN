commit ce49a9a4583f791fda8cf872b7c6a183f9fe614e
Author: Ivana Hrivnacova <ihrivnac@mail.cern.ch>
Date:   Fri Jul 9 09:53:22 2010 +0000

    In vmc:
    - Adding warning in the implementation of the recently added new functions:
      TVirtualMC::SetCollectTracks() and TVirtualMC::IsCollectTracks()
    - Removed default implementation of TVirtualMC::SetUserParameters()
    - Adding process codes kPPhotoNuclear, kPUserDefined in TMCProcess.h
      (needed in Geant4)
    
    
    git-svn-id: http://root.cern.ch/svn/root/trunk@34359 27541ba8-7e3a-0410-8455-c3a389f83636

diff --git a/montecarlo/vmc/inc/TMCProcess.h b/montecarlo/vmc/inc/TMCProcess.h
index 0ec84162a2..0e9d03515c 100644
--- a/montecarlo/vmc/inc/TMCProcess.h
+++ b/montecarlo/vmc/inc/TMCProcess.h
@@ -17,7 +17,7 @@
 //
 #include "Rtypes.h"
 
-const Int_t kMaxMCProcess = 45;
+const Int_t kMaxMCProcess = 47;
 
 enum TMCProcess
 {
@@ -53,6 +53,7 @@ enum TMCProcess
   kPMuonNuclear,        // muon nuclear interaction
   kPElectronNuclear,    // electron nuclear interaction
   kPPositronNuclear,    // positron nuclear interaction
+  kPPhotoNuclear,       // photo nuclear interaction
 
   kPTOFlimit,           // exceeded time of flight cut
   kPPhotoFission,       // nuclear photofission
@@ -77,6 +78,7 @@ enum TMCProcess
   kPScintillation,      // scintillation
 
   kPTransportation,     // Transportation
+  kPUserDefined,        // User defined process
 
   kPNoProcess           // unknown process
 };
@@ -110,6 +112,7 @@ static const char * const TMCProcessName[kMaxMCProcess] = {
   "Muon nuclear interaction",
   "Electron nuclear interaction",
   "Positron nuclear interaction",
+  "Photo nuclear interaction",
   "Time of flight limit",
   "Nuclear photofission",
   "Rayleigh effect",
@@ -126,6 +129,7 @@ static const char * const TMCProcessName[kMaxMCProcess] = {
   "Synchrotron radiation",
   "Scintillation",
   "Transportation",
+  "User defined process",
   "Unknown process"
 };
 
diff --git a/montecarlo/vmc/inc/TVirtualMC.h b/montecarlo/vmc/inc/TVirtualMC.h
index c54d01c374..7dc21bbc21 100644
--- a/montecarlo/vmc/inc/TVirtualMC.h
+++ b/montecarlo/vmc/inc/TVirtualMC.h
@@ -426,7 +426,7 @@ public:
    // (DEEMAX, STMIN, STEMAX), which are, be default, ignored.
    // In Geant4 case, only STEMAX is taken into account.
    // In FLUKA, all tracking media parameters are ignored.
-   virtual void SetUserParameters(Bool_t isUserParameters);
+   virtual void SetUserParameters(Bool_t isUserParameters) = 0;
 
    //
    // get methods
@@ -592,11 +592,6 @@ public:
 
    // Return VMC type of the particle specified by pdg.
    virtual TMCParticleType ParticleMCType(Int_t pdg) const = 0;
-   
-   // Activate collecting tracks (working only with TGeant3TGeo)
-   virtual void SetCollectTracks(Bool_t) {}
-   virtual Bool_t IsCollectTracks() const {return kFALSE;}
-
    //
    // ------------------------------------------------
    // methods for step management
@@ -856,9 +851,15 @@ public:
 
    // Set switches for lego transport
    virtual void InitLego() = 0;
+   
+   // (In)Activate collecting TGeo tracks 
+   virtual void SetCollectTracks(Bool_t collectTracks);
+
+   // Return the info if collecting tracks is activated
+   virtual Bool_t IsCollectTracks() const;
 
    //
-    // ------------------------------------------------
+   // ------------------------------------------------
    // Set methods
    // ------------------------------------------------
    //
@@ -893,7 +894,6 @@ public:
     // Return the magnetic field
     virtual TVirtualMagField*  GetMagField() const  { return fMagField; }
 
-
 protected:
    TVirtualMCApplication* fApplication; //! User MC application
 
@@ -913,12 +913,16 @@ private:
 
 // new functions
 
-inline void TVirtualMC::SetUserParameters(Bool_t /*isUserParameters*/) {
-   // Activate the parameters defined in tracking media
-   // (DEEMAX, STMIN, STEMAX), which are, be default, ignored.
-   // In Geant4 case, only STEMAX is taken into account.
-   // In FLUKA, all tracking media parameters are ignored.
-   Warning("SetUserParameters", "New function - not yet implemented.");
+inline void TVirtualMC::SetCollectTracks(Bool_t /*collectTracks*/) {   
+   // Activate collecting tracks 
+   // Currently working only with TGeant3TGeo
+   Warning("SetCollectTracks", "New function - not yet implemented.");
+}
+
+inline Bool_t TVirtualMC::IsCollectTracks() const {
+    // Return the info if collecting tracks is activated
+   Warning("IsCollectTracks", "New function - not yet implemented.");
+   return kFALSE;
 }
 
 R__EXTERN TVirtualMC *gMC;

