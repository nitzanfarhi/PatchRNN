commit 047a66d4bb24aaf19f41d620f8f0534c2153cd0b
Author: David Gibson <dwg@au1.ibm.com>
Date:   Sat Oct 21 10:24:13 2006 -0700

    [PATCH] ibmveth: Fix index increment calculation
    
    The recent commit 751ae21c6cd1493e3d0a4935b08fb298b9d89773 introduced a bug
    in the producer/consumer index calculation in the ibmveth driver -
    incautious use of the post-increment ++ operator resulted in an increment
    being immediately reverted.  This patch corrects the logic.
    
    Without this patch, the driver oopses almost immediately after activation
    on at least some machines.
    
    Signed-off-by: David Gibson <dwg@au1.ibm.com>
    Acked-by: Santiago Leon <santil@us.ibm.com>
    Cc: Jeff Garzik <jeff@garzik.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Andy Whitcroft <apw@shadowen.org>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/drivers/net/ibmveth.c b/drivers/net/ibmveth.c
index 2802db23d3cb..44c9f993dcc4 100644
--- a/drivers/net/ibmveth.c
+++ b/drivers/net/ibmveth.c
@@ -212,8 +212,8 @@ static void ibmveth_replenish_buffer_pool(struct ibmveth_adapter *adapter, struc
 			break;
 		}
 
-		free_index = pool->consumer_index++ % pool->size;
-		pool->consumer_index = free_index;
+		free_index = pool->consumer_index;
+		pool->consumer_index = (pool->consumer_index + 1) % pool->size;
 		index = pool->free_map[free_index];
 
 		ibmveth_assert(index != IBM_VETH_INVALID_MAP);
@@ -329,8 +329,10 @@ static void ibmveth_remove_buffer_from_pool(struct ibmveth_adapter *adapter, u64
 			 adapter->rx_buff_pool[pool].buff_size,
 			 DMA_FROM_DEVICE);
 
-	free_index = adapter->rx_buff_pool[pool].producer_index++ % adapter->rx_buff_pool[pool].size;
-	adapter->rx_buff_pool[pool].producer_index = free_index;
+	free_index = adapter->rx_buff_pool[pool].producer_index;
+	adapter->rx_buff_pool[pool].producer_index
+		= (adapter->rx_buff_pool[pool].producer_index + 1)
+		% adapter->rx_buff_pool[pool].size;
 	adapter->rx_buff_pool[pool].free_map[free_index] = index;
 
 	mb();

