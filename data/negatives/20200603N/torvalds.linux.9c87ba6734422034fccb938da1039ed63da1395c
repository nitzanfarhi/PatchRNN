commit 9c87ba6734422034fccb938da1039ed63da1395c
Author: Jouni Malinen <j@w1.fi>
Date:   Sun Feb 28 12:13:46 2010 +0200

    mac80211: Fix reassociation processing (within ESS roaming)
    
    Commit e1dd33f60ced091114e4aacf141e0d03b88d3e13 changed cfg80211 to
    allow association commands while in associated state to enable support
    for roaming within an ESS. However, this was not enough to resolve all
    cases with mac80211 which needs some additional handling of the
    reassociation case to clear internal state with the BSS that was in use
    previously.
    
    This patch makes ieee80211_mgd_assoc() accept a valid reassociation
    command and clean the association state with the previous BSS. This
    fixes roaming between BSSes in an ESS when using wpa_supplicant with
    -Dnl80211.
    
    Signed-off-by: Jouni Malinen <j@w1.fi>
    Cc: stable@kernel.org
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index 41812a15eea0..5a268761e4c5 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -1893,8 +1893,20 @@ int ieee80211_mgd_assoc(struct ieee80211_sub_if_data *sdata,
 
 	mutex_lock(&ifmgd->mtx);
 	if (ifmgd->associated) {
-		mutex_unlock(&ifmgd->mtx);
-		return -EALREADY;
+		if (!req->prev_bssid ||
+		    memcmp(req->prev_bssid, ifmgd->associated->bssid,
+			   ETH_ALEN)) {
+			/*
+			 * We are already associated and the request was not a
+			 * reassociation request from the current BSS, so
+			 * reject it.
+			 */
+			mutex_unlock(&ifmgd->mtx);
+			return -EALREADY;
+		}
+
+		/* Trying to reassociate - clear previous association state */
+		ieee80211_set_disassoc(sdata);
 	}
 	mutex_unlock(&ifmgd->mtx);
 

