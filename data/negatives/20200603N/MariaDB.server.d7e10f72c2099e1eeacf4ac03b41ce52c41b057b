commit d7e10f72c2099e1eeacf4ac03b41ce52c41b057b
Author: vasil <Unknown>
Date:   Fri Sep 21 13:35:00 2007 +0000

    snprintf() should always return non-negative result. According to
    Microsoft documentation about _vscprintf():
    
      If format is a null pointer, the invalid parameter handler is invoked,
      as described in Parameter Validation. If execution is allowed to
      continue, the functions return -1 and set errno to EINVAL.
    
    The UNIX variant of snprintf() segfaults if format is a NULL pointer
    (similar to strlen(NULL) for example), so it is better to conform to
    this behavior and crash our custom Windows version instead of
    returning -1. Noone would expect -1 to be returned from snprintf().
    
    Cosmetic: Add a space after typecast.
    
    Approved by:    Marko

diff --git a/ut/ut0ut.c b/ut/ut0ut.c
index b2f7df5d210..8fd69354af6 100644
--- a/ut/ut0ut.c
+++ b/ut/ut0ut.c
@@ -528,15 +528,12 @@ ut_snprintf(
 	va_start(ap2, fmt);
 
 	res = _vscprintf(fmt, ap1);
-
-	if (res == -1) {
-		return(-1);
-	}
+	ut_a(res != -1);
 
 	if (size > 0) {
 		_vsnprintf(str, size, fmt, ap2);
 
-		if ((size_t)res >= size) {
+		if ((size_t) res >= size) {
 			str[size - 1] = '\0';
 		}
 	}

