commit 00fdc6bbef77844ce397a7de7acfaf25e8e2e4eb
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Tue Mar 13 18:20:11 2012 -0700

    iscsi-target: Fix reservation conflict -EBUSY response handling bug
    
    This patch addresses a iscsi-target specific bug related to reservation conflict
    handling in iscsit_handle_scsi_cmd() that has been causing reservation conflicts
    to complete and not fail as expected due to incorrect errno checking.  The problem
    occured with the change to return -EBUSY from transport_generic_cmd_sequencer() ->
    transport_generic_allocate_tasks() failures, that broke iscsit_handle_scsi_cmd()
    checking for -EINVAL in order to invoke a non GOOD status response.
    
    This was manifesting itself as data corruption with legacy SPC-2 reservations,
    but also effects iscsi-target LUNs with SPC-3 persistent reservations.
    
    This bug was originally introduced in lio-core commit:
    
    commit 03e98c9eb916f3f0868c1dc344dde2a60287ff72
    Author: Nicholas Bellinger <nab@linux-iscsi.org>
    Date:   Fri Nov 4 02:36:16 2011 -0700
    
        target: Address legacy PYX_TRANSPORT_* return code breakage
    
    Reported-by: Martin Svec <martin.svec@zoner.cz>
    Cc: Martin Svec <martin.svec@zoner.cz>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>

diff --git a/drivers/target/iscsi/iscsi_target.c b/drivers/target/iscsi/iscsi_target.c
index 44262908def5..501b27c18145 100644
--- a/drivers/target/iscsi/iscsi_target.c
+++ b/drivers/target/iscsi/iscsi_target.c
@@ -1028,7 +1028,7 @@ static int iscsit_handle_scsi_cmd(
 		return iscsit_add_reject_from_cmd(
 				ISCSI_REASON_BOOKMARK_NO_RESOURCES,
 				1, 1, buf, cmd);
-	} else if (transport_ret == -EINVAL) {
+	} else if (transport_ret < 0) {
 		/*
 		 * Unsupported SAM Opcode.  CHECK_CONDITION will be sent
 		 * in iscsit_execute_cmd() during the CmdSN OOO Execution

