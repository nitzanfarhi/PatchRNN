commit 90d6f92828a081a86cb4f9644b6eef6207855050
Author: Christian Lamparter <chunkeey@web.de>
Date:   Thu Aug 20 20:22:01 2009 +0200

    p54: fix broadcast buffering in AP mode
    
    The patch "mac80211: fix PS-poll response race" somehow broke
    broadcast buffering in a funny way.
    
    During normal operation - stations are awake - the firmware refused
    to transmit broadcast frames and reported P54_TX_PSM_CANCELLED.
    But everything worked as soon as one station entered PSM.
    
    The reason:
    The stack sets IEEE80211_TX_CTL_SEND_AFTER_DTIM for outgoing
    broadcast frames as soon as a station is marked as sleeping.
    This flag triggers a path which will reroute these frames
    into p54's "content after beacon" queue, which is designed
    to cope with the demands for psm.
    
    This patch restores the old behavior.
    
    IEEE80211_TX_CTL_CLEAR_PS_FILT will once again be used to signalize
    the firmware to ignore the ps canceling for certain frames.
    
    Signed-off-by: Christian Lamparter <chunkeey@web.de>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/drivers/net/wireless/p54/txrx.c b/drivers/net/wireless/p54/txrx.c
index 6fc0b6148c8a..b6dda2b27fb5 100644
--- a/drivers/net/wireless/p54/txrx.c
+++ b/drivers/net/wireless/p54/txrx.c
@@ -623,6 +623,9 @@ static void p54_tx_80211_header(struct p54_common *priv, struct sk_buff *skb,
 	if (info->flags & IEEE80211_TX_CTL_PSPOLL_RESPONSE)
 		*flags |= P54_HDR_FLAG_DATA_OUT_NOCANCEL;
 
+	if (info->flags & IEEE80211_TX_CTL_CLEAR_PS_FILT)
+		*flags |= P54_HDR_FLAG_DATA_OUT_NOCANCEL;
+
 	*queue = skb_get_queue_mapping(skb) + P54_QUEUE_DATA;
 
 	switch (priv->mode) {

