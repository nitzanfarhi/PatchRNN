commit 8d655d835bc5c0cb7d485d147ba96249e356a697
Author: Jonathan Austin <jonathan.austin@arm.com>
Date:   Wed Apr 24 11:56:09 2013 +0100

    ARM: nommu: add stub local_flush_bp_all() for !CONFIG_MMUU
    
    Since the merging of Will's tlb-ops branch, specifically 89c7e4b8bbb3
    (ARM: 7661/1: mm: perform explicit branch predictor maintenance when required),
    building SMP without CONFIG_MMU has been broken.
    
    The local_flush_bp_all function is only called for operations related to
    changing the kernel's view of memory and ASID rollover - both of which are
    irrelevant to an !MMU kernel.
    
    This patch adds a stub local_flush_bp_all() function to the other tlb
    maintenance stubs and restores the ability to build an SMP !MMU kernel.
    
    Signed-off-by: Jonathan Austin <jonathan.austin@arm.com>
    Acked-by: Will Deacon <will.deacon@arm.com>

diff --git a/arch/arm/include/asm/tlbflush.h b/arch/arm/include/asm/tlbflush.h
index cc8517e0f132..ded7c16f80cc 100644
--- a/arch/arm/include/asm/tlbflush.h
+++ b/arch/arm/include/asm/tlbflush.h
@@ -549,6 +549,7 @@ static inline void local_flush_tlb_page(struct vm_area_struct *vma, unsigned lon
 static inline void local_flush_tlb_kernel_page(unsigned long kaddr)						{ }
 static inline void local_flush_tlb_range(struct vm_area_struct *vma, unsigned long start, unsigned long end)	{ }
 static inline void local_flush_tlb_kernel_range(unsigned long start, unsigned long end)				{ }
+static inline void local_flush_bp_all(void)									{ }
 
 extern void flush_tlb_all(void);
 extern void flush_tlb_mm(struct mm_struct *mm);
@@ -556,6 +557,7 @@ extern void flush_tlb_page(struct vm_area_struct *vma, unsigned long uaddr);
 extern void flush_tlb_kernel_page(unsigned long kaddr);
 extern void flush_tlb_range(struct vm_area_struct *vma, unsigned long start, unsigned long end);
 extern void flush_tlb_kernel_range(unsigned long start, unsigned long end);
+extern void flush_bp_all(void);
 #endif	/* __ASSEMBLY__ */
 
 #endif

