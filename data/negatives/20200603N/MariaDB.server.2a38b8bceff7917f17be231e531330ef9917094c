commit 2a38b8bceff7917f17be231e531330ef9917094c
Author: Venkatesh Duggirala <venkatesh.duggirala@oracle.com>
Date:   Fri Mar 1 15:01:32 2013 +0530

    BUG#11753923-SQL THREAD CRASHES ON DISK FULL
    Fixing post push issue
    Simulator name used needs to be changed to make it
    work properly.
    
    Analysis:
    Debug control list addition (ListAddDel function
    dbug.c file) code was written in such a way that
    if new element is subset of already existing element,
    then the new element is not added.
    i.e., set @@global.debug = '+d,abcd', is existing in
    the list then you cannot add "a" or "ab" or "abc"
    in the list.

diff --git a/mysys/errors.c b/mysys/errors.c
index b518b442d6b..ddd65836b30 100644
--- a/mysys/errors.c
+++ b/mysys/errors.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.
+/* Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -117,7 +117,7 @@ void wait_for_free_space(const char *filename, int errors)
                     MY_WAIT_FOR_USER_TO_FIX_PANIC,
                     MY_WAIT_GIVE_USER_A_MESSAGE * MY_WAIT_FOR_USER_TO_FIX_PANIC );
   }
-  DBUG_EXECUTE_IF("simulate_file_write_error_once",
+  DBUG_EXECUTE_IF("simulate_no_free_space_error",
                  {
                    (void) sleep(1);
                    return;
diff --git a/mysys/my_write.c b/mysys/my_write.c
index c474b86c60e..ef15e9a55b6 100644
--- a/mysys/my_write.c
+++ b/mysys/my_write.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.
+/* Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -33,7 +33,7 @@ size_t my_write(File Filedes, const uchar *Buffer, size_t Count, myf MyFlags)
   if (unlikely(!Count))
     DBUG_RETURN(0);
   
-  DBUG_EXECUTE_IF ("simulate_file_write_error_once",
+  DBUG_EXECUTE_IF ("simulate_no_free_space_error",
                    { DBUG_SET("+d,simulate_file_write_error");});
   for (;;)
   {
@@ -67,7 +67,7 @@ size_t my_write(File Filedes, const uchar *Buffer, size_t Count, myf MyFlags)
     {
       wait_for_free_space(my_filename(Filedes), errors);
       errors++;
-      DBUG_EXECUTE_IF("simulate_file_write_error_once",
+      DBUG_EXECUTE_IF("simulate_no_free_space_error",
                       { DBUG_SET("-d,simulate_file_write_error");});
       continue;
     }

