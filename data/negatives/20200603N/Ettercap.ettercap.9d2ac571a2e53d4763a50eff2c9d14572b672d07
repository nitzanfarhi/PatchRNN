commit 9d2ac571a2e53d4763a50eff2c9d14572b672d07
Author: someone <sickmind@lavabit.com>
Date:   Wed Feb 8 12:01:17 2012 +0000

    Reverted most of changes from the latest commits. Please please please do not commit such stuff again, avoiding compiler warnings must not be a priority and the code that produces no warning is not always correct.

diff --git a/plug-ins/smurf_attack/smurf_attack.c b/plug-ins/smurf_attack/smurf_attack.c
index a83730cb..92f8738a 100644
--- a/plug-ins/smurf_attack/smurf_attack.c
+++ b/plug-ins/smurf_attack/smurf_attack.c
@@ -105,8 +105,7 @@ static EC_THREAD_FUNC(smurfer)
    switch(proto) {
       case AF_INET:
          icmp_send = send_L3_icmp_echo;
-         //ips = (LIST_HEAD(, ip_list) *)&GBL_TARGET2->ips;
-	 memcpy(ips, &GBL_TARGET2->ips, sizeof(LIST_HEAD(, ip_list)));
+         ips = (LIST_HEAD(, ip_list) *)&GBL_TARGET2->ips;
          break;
       case AF_INET6:
          icmp_send = send_icmp6_echo;
diff --git a/src/dissectors/ec_bgp.c b/src/dissectors/ec_bgp.c
index b6da1c65..23cebdc7 100644
--- a/src/dissectors/ec_bgp.c
+++ b/src/dissectors/ec_bgp.c
@@ -160,7 +160,7 @@ FUNC_DECODER(dissector_bgp)
       /* the parameter is an authentication type (1) */
       if (parameters[i] == 1) {
          u_char *str_ptr;
-	 u_int32 j;
+         u_int32 j;
          u_int32 len = parameters[i + 1];
         
          DEBUG_MSG("\tDissector_BGP 4 AUTH");
@@ -176,15 +176,13 @@ FUNC_DECODER(dissector_bgp)
          if (len > 1) {
             snprintf(PACKET->DISSECTOR.pass, 4, "Hex(");
             str_ptr = PACKET->DISSECTOR.pass + strlen(PACKET->DISSECTOR.pass);
-            
+
             for (j = 0; j < (len-1); j++) {
-	       //u_int32 k = j+3;
-	       u_char *tmp = parameters;
-	       tmp += i+3+j;
-	       size_t len = strlen((char *)tmp);
-	       len += 2;
-               snprintf(str_ptr + (j * 3), len, " %.2x", parameters[i + 3 + j]);
-	    }
+               //u_int32 k = j+3;
+               u_char *tmp = parameters + i + j + 3;
+               size_t len = strlen((char *)tmp) + 2;
+               snprintf(str_ptr + (j * 3), len, " %.2x", *tmp);
+            }
          
             strcat(str_ptr, " )");
          }	 
diff --git a/src/dissectors/ec_nbns.c b/src/dissectors/ec_nbns.c
index f7234fd5..b98acf82 100644
--- a/src/dissectors/ec_nbns.c
+++ b/src/dissectors/ec_nbns.c
@@ -142,9 +142,7 @@ FUNC_DECODER(dissector_nbns)
 		int name_len = nbns_expand(response->rr_name, name);
 
 		struct ip_addr addr;
-		u_char ip4[IP_ADDR_LEN];
-	        snprintf(ip4, IP_ADDR_LEN, "%u", response->rr_data.addr);	
-		ip_addr_init(&addr, AF_INET, &ip4[0]);
+		ip_addr_init(&addr, AF_INET, response->rr_data.addr);
 		ip_addr_ntoa(&addr, ip);
 		
 		DEBUG_MSG("NBNS Transaction ID [0x%04x] Response: %s -> %s\n", ntohs(header->transactid), name, ip);
diff --git a/src/ec_checksum.c b/src/ec_checksum.c
index 54cbf15d..73daf0e3 100644
--- a/src/ec_checksum.c
+++ b/src/ec_checksum.c
@@ -129,8 +129,8 @@ static u_int16 v6_checksum(struct packet_object *po)
 
    csum = sum(buf, plen);
    
-   csum += sum(&po->L3.src.addr[0], ntohs(po->L3.src.addr_len));
-   csum += sum(&po->L3.dst.addr[0], ntohs(po->L3.dst.addr_len));
+   csum += sum(&po->L3.src.addr, ntohs(po->L3.src.addr_len));
+   csum += sum(&po->L3.dst.addr, ntohs(po->L3.dst.addr_len));
    csum += htons(plen + po->L4.proto);
 
    while(csum >> 16)
diff --git a/src/ec_decode.c b/src/ec_decode.c
index 956a6a6b..e6b9f424 100644
--- a/src/ec_decode.c
+++ b/src/ec_decode.c
@@ -250,9 +250,7 @@ void __init data_init(void)
 
 FUNC_DECODER(decode_data)
 {
-   //FUNC_DECODER_PTR(*app_decoders);
-   FUNC_DECODER_PTR(decoder);
-   void **app_decoders;
+   FUNC_DECODER_PTR(*app_decoders);
    int i;
    int proto = 0;
       
@@ -294,8 +292,7 @@ FUNC_DECODER(decode_data)
    if(proto) {
       app_decoders = get_decoders(proto, ntohs(po->L4.src));
       for(i = 0; app_decoders[i] != NULL; i++) {
-	 decoder = app_decoders[i];
-         EXECUTE_DECODER(decoder);
+         EXECUTE_DECODER(app_decoders[i]);
       }
       SAFE_FREE(app_decoders);
 
@@ -305,8 +302,7 @@ FUNC_DECODER(decode_data)
       if(po->L4.src != po->L4.dst) {
          app_decoders = get_decoders(proto, ntohs(po->L4.dst));
          for(i = 0; app_decoders[i] != NULL; i++) {
-	    decoder = app_decoders[i];
-            EXECUTE_DECODER(decoder);
+            EXECUTE_DECODER(app_decoders[i]);
          }
          SAFE_FREE(app_decoders);
       }
diff --git a/src/ec_filter.c b/src/ec_filter.c
index df065be2..b15894e4 100644
--- a/src/ec_filter.c
+++ b/src/ec_filter.c
@@ -43,7 +43,7 @@ static pthread_mutex_t filters_mutex;
 #define FILTERS_LOCK     do{ pthread_mutex_lock(&filters_mutex); }while(0)
 #define FILTERS_UNLOCK   do{ pthread_mutex_unlock(&filters_mutex); }while(0)
 
-#ifndef HAVE_MUTEX_RECURSIVE_NP 
+#ifndef PTHREAD_MUTEX_RECURSIVE_NP
 #define PTHREAD_MUTEX_RECURSIVE_NP PTHREAD_MUTEX_RECURSIVE
 #endif
 
diff --git a/src/ec_inet.c b/src/ec_inet.c
index 0d953085..a595cd48 100644
--- a/src/ec_inet.c
+++ b/src/ec_inet.c
@@ -271,8 +271,8 @@ int ip_addr_pton(char *str, struct ip_addr *addr)
 
    proto = (strchr(str, ':')) ? AF_INET6 : AF_INET;
    
-   if(inet_pton(proto, str, &buf) == 1) {
-      ip_addr_init(addr, proto, &buf[0]);
+   if(inet_pton(proto, str, buf) == 1) {
+      ip_addr_init(addr, proto, buf);
       return ESUCCESS;
    } else {
       return -EINVALID;
@@ -472,8 +472,6 @@ int ip_addr_get_network(struct ip_addr *ip, struct ip_addr *netmask, struct ip_a
 {
    u_int32 ip4;
    u_int32 ip6[IP6_ADDR_LEN / sizeof(u_int32)];
-   u_char  ip_4[IP_ADDR_LEN];
-   u_char  ip_6[IP6_ADDR_LEN];
 
    if(ntohs(ip->addr_type) != ntohs(netmask->addr_type))
       return -EINVALID;
@@ -481,16 +479,14 @@ int ip_addr_get_network(struct ip_addr *ip, struct ip_addr *netmask, struct ip_a
    switch(ntohs(ip->addr_type)) {
       case AF_INET:
          ip4 = ip_addr_to_int32(ip->addr) & ip_addr_to_int32(netmask->addr);
-	 snprintf(ip_4, IP_ADDR_LEN, "%u", ip4);
-         ip_addr_init(network, AF_INET, &ip_4[0]);
+         ip_addr_init(network, AF_INET, (u_char*)&ip4);
          break;
       case AF_INET6:
          ip6[0] = ((u_int32*)ip->addr)[0] & ((u_int32*)netmask->addr)[0];
          ip6[1] = ((u_int32*)ip->addr)[1] & ((u_int32*)netmask->addr)[1];
          ip6[2] = ((u_int32*)ip->addr)[2] & ((u_int32*)netmask->addr)[2];
          ip6[3] = ((u_int32*)ip->addr)[3] & ((u_int32*)netmask->addr)[3];
-	 snprintf(ip_6, IP6_ADDR_LEN, "%u%u%u%u", ip6[0], ip6[1], ip6[2], ip6[3]);
-         ip_addr_init(network, AF_INET6, &ip_6[0]);
+         ip_addr_init(network, AF_INET6, (u_char*)&ip6);
          break;
       default:
          BUG("Invalid addr_type");
diff --git a/src/ec_network.c b/src/ec_network.c
index 42fb3d68..657edf60 100644
--- a/src/ec_network.c
+++ b/src/ec_network.c
@@ -45,8 +45,6 @@ static void close_secondary_sources(void);
 static void l3_init(void);
 static void l3_close(void);
 
-void pack32(uint32_t val, u_char *dest);
-
 struct iface_env* iface_by_mac(u_int8 mac[MEDIA_ADDR_LEN]);
 
 /* teh code */
@@ -231,7 +229,6 @@ static int source_init(char *name, struct iface_env *source, bool primary, bool
 
    if(live) {
       source->is_live = 1;
-      DEBUG_MSG("IS LIVE");
    } else {
       source->is_ready = 1;
       return ESUCCESS;
@@ -257,42 +254,25 @@ static int source_init(char *name, struct iface_env *source, bool primary, bool
          continue;
 
       if(ifaddr->ifa_addr->sa_family == AF_INET) {
-         u_char ip4[4];
-         sa4 = ((struct sockaddr_in *)ifaddr->ifa_addr);
-	 //snprintf(ip4, IP_ADDR_LEN, "%u", ntohs(sa4->sin_addr.s_addr));
-         pack32(sa4->sin_addr.s_addr, ip4);
-         ip_addr_init(&source->ip, AF_INET, &ip4[0]);
-         char dst[MAX_ASCII_ADDR_LEN];
-         ip_addr_ntoa(&source->ip, dst);
- 	 DEBUG_MSG("IP: %s", dst);
+         sa4 = ifaddr->ifa_addr;
+         ip_addr_init(&source->ip, AF_INET, &sa4->sin_addr);
          if(GBL_OPTIONS->netmask) {
-            struct in_addr net;
+            u_int32 net;
             if(inet_aton(GBL_OPTIONS->netmask, &net) == 0)
                FATAL_ERROR("Invalid netmask %s", GBL_OPTIONS->netmask);
-	    memset(ip4, '\0', IP_ADDR_LEN);
-	    //snprintf(ip4, IP_ADDR_LEN, "%u", net.s_addr);
-	    pack32(net.s_addr, ip4);
-            ip_addr_init(&source->netmask, AF_INET, &ip4[0]);
-         ip_addr_ntoa(&source->ip, dst);
-         DEBUG_MSG("NETMASK: %s", dst);
-
+            ip_addr_init(&source->netmask, AF_INET, &net);
          } else {
-            sa4 = ((struct sockaddr_in *)ifaddr->ifa_netmask);
-	    memset(ip4, '\0', IP_ADDR_LEN);
-	    //snprintf(ip4, IP_ADDR_LEN, "%u", sa4->sin_addr.s_addr);
-	    pack32(sa4->sin_addr.s_addr, ip4);
-            ip_addr_init(&source->netmask, AF_INET, &ip4[0]);
-         ip_addr_ntoa(&source->netmask, dst);
-         DEBUG_MSG("NETMASK: %s", dst);
+            sa4 = ifaddr->ifa_netmask;
+            ip_addr_init(&source->netmask, AF_INET, &sa4->sin_addr);
          }
          ip_addr_get_network(&source->ip, &source->netmask, &source->network);
          source->has_ipv4 = 1;
       } else if(ifaddr->ifa_addr->sa_family == AF_INET6) {
          SAFE_CALLOC(ip6, 1, sizeof(*ip6));
-         sa6 = ((struct sockaddr_in6 *)ifaddr->ifa_addr);
-         ip_addr_init(&ip6->ip, AF_INET6, &sa6->sin6_addr.s6_addr[0]);
-         sa6 = ((struct sockaddr_in6 *)ifaddr->ifa_netmask);
-         ip_addr_init(&ip6->netmask, AF_INET6, &sa6->sin6_addr.s6_addr[0]);
+         sa6 = ifaddr->ifa_addr;
+         ip_addr_init(&ip6->ip, AF_INET6, &sa6->sin6_addr);
+         sa6 = ifaddr->ifa_netmask;
+         ip_addr_init(&ip6->netmask, AF_INET6, &sa6->sin6_addr);
          ip_addr_get_network(&ip6->ip, &ip6->netmask, &ip6->network);
          ip6->prefix = ip_addr_get_prefix(&ip6->netmask);
          LIST_INSERT_HEAD(&source->ip6_list, ip6, next);
@@ -341,11 +321,10 @@ static int secondary_sources_init(char **sources)
 
       /* secondary interfaces are always live */
       source_init(sources[n], &se->iface, true, false);
-      if(se->iface.is_ready) {
+      if(se->iface.is_ready)
          LIST_INSERT_HEAD(&sources_list, se, next);
-      } else {
+      else 
          SAFE_FREE(se);
-      }
    }
 
    SOURCES_LIST_UNLOCK;
@@ -424,13 +403,3 @@ struct iface_env* iface_by_mac(u_int8 mac[MEDIA_ADDR_LEN])
    return NULL;
 }
 
-void
-pack32(uint32_t val, u_char *dest)
-{
-        dest[3] = (val & 0xff000000) >> 24;
-        dest[2] = (val & 0x00ff0000) >> 16;
-        dest[1] = (val & 0x0000ff00) >>  8;
-        dest[0] = (val & 0x000000ff)      ;
-}
-
-
diff --git a/src/ec_update.c b/src/ec_update.c
index 0935c180..383e8a9f 100644
--- a/src/ec_update.c
+++ b/src/ec_update.c
@@ -299,9 +299,9 @@ static int do_update(char *file, char *url, char *errbuf)
       /* write the data in the file */
       if (header_skipped) {
          if (ptr) {
-            if(write(fileno(fd), ptr + 4, len - (ptr + 4 - buffer)));
+            write(fileno(fd), ptr + 4, len - (ptr + 4 - buffer));
          } else {
-            if(write(fileno(fd), buffer, len));
+            write(fileno(fd), buffer, len);
          }
       }
    
diff --git a/src/interfaces/curses/ec_curses_hosts.c b/src/interfaces/curses/ec_curses_hosts.c
index 1603cd78..dca5ab24 100644
--- a/src/interfaces/curses/ec_curses_hosts.c
+++ b/src/interfaces/curses/ec_curses_hosts.c
@@ -111,7 +111,7 @@ static void load_hosts(char *path, char *file)
    SAFE_CALLOC(tmp, strlen(path)+strlen(file)+2, sizeof(char));
 
    /* get the current working directory */
-   if(getcwd(current, PATH_MAX));
+   getcwd(current, PATH_MAX);
 
    /* we are opening a file in the current dir.
     * use the relative path, so we can open files
diff --git a/src/interfaces/curses/widgets/wdg_file.c b/src/interfaces/curses/widgets/wdg_file.c
index 20d25955..c7e1cf91 100644
--- a/src/interfaces/curses/widgets/wdg_file.c
+++ b/src/interfaces/curses/widgets/wdg_file.c
@@ -97,7 +97,7 @@ void wdg_create_file(struct wdg_object *wo)
     * this has to be restored after the file is selected 
     */
    ww = (struct wdg_file_handle *)wo->extend;
-   if(getcwd(ww->initpath, PATH_MAX));
+   getcwd(ww->initpath, PATH_MAX);
   
    /* default geometry */
    ww->x = 50;
@@ -125,7 +125,7 @@ static int wdg_file_destroy(struct wdg_object *wo)
    delwin(ww->win);
    
    /* restore the initial workind direcory */
-   if(!chdir(ww->initpath));
+   chdir(ww->initpath);
 
    WDG_SAFE_FREE(wo->extend);
 
@@ -393,7 +393,7 @@ static int wdg_file_driver(struct wdg_object *wo, int key, struct wdg_mouse_even
       stat(item_name(current_item(ww->m)), &buf);
       /* if it is a directory, change to it */
       if (S_ISDIR(buf.st_mode)) {
-         if(!chdir(item_name(current_item(ww->m))));
+         chdir(item_name(current_item(ww->m)));
          return -WDG_ENOTHANDLED;
       } else {
          /* invoke the callback and return */
@@ -458,7 +458,7 @@ static void wdg_file_menu_create(struct wdg_object *wo)
    WDG_DEBUG_MSG("wdg_file_menu_create");
    
    /* get the working directory */
-   if(getcwd(ww->curpath, PATH_MAX));
+   getcwd(ww->curpath, PATH_MAX);
          
    /* scan the directory */
    ww->nlist = scandir(".", &ww->namelist, 0, alphasort);
diff --git a/src/interfaces/gtk/ec_gtk_hosts.c b/src/interfaces/gtk/ec_gtk_hosts.c
index 459bcd87..1831ca8a 100644
--- a/src/interfaces/gtk/ec_gtk_hosts.c
+++ b/src/interfaces/gtk/ec_gtk_hosts.c
@@ -101,7 +101,7 @@ static void load_hosts(char *file)
    SAFE_CALLOC(tmp, strlen(file)+1, sizeof(char));
 
    /* get the current working directory */
-   if(getcwd(current, PATH_MAX));
+   getcwd(current, PATH_MAX);
 
    /* we are opening a file in the current dir.
     * use the relative path, so we can open files
@@ -328,7 +328,7 @@ void gtkui_button_callback(GtkWidget *widget, gpointer data)
          gtk_tree_model_get_iter(model, &iter, list->data);
          gtk_tree_model_get(model, &iter, 3, &hl, -1);
 
-         switch((size_t)data) {
+         switch((int)data) {
             case HOST_DELETE:
                DEBUG_MSG("gtkui_button_callback: delete host");
                gtk_list_store_remove(GTK_LIST_STORE (liststore), &iter);
diff --git a/src/interfaces/gtk/ec_gtk_targets.c b/src/interfaces/gtk/ec_gtk_targets.c
index 3d3724fa..fa423bb9 100644
--- a/src/interfaces/gtk/ec_gtk_targets.c
+++ b/src/interfaces/gtk/ec_gtk_targets.c
@@ -415,7 +415,7 @@ static void gtkui_delete_targets(GtkWidget *widget, gpointer data) {
    GtkTreeModel *model;
    struct ip_list *il = NULL;
 
-   switch((size_t)data) {
+   switch((int)data) {
       case 1:
          DEBUG_MSG("gtkui_delete_target: list 1");
          model = GTK_TREE_MODEL (liststore1);
diff --git a/src/interfaces/gtk/ec_gtk_view.c b/src/interfaces/gtk/ec_gtk_view.c
index 2d9ff1ee..2084a023 100644
--- a/src/interfaces/gtk/ec_gtk_view.c
+++ b/src/interfaces/gtk/ec_gtk_view.c
@@ -258,21 +258,21 @@ static gboolean refresh_stats(gpointer data)
    if (!GTK_WIDGET_VISIBLE(stats_window))
       return FALSE;
 
-   snprintf(line, 50, "%8lu", GBL_STATS->ps_recv);
+   snprintf(line, 50, "%8lld", GBL_STATS->ps_recv);
    gtk_label_set_text(GTK_LABEL (packets_recv), line);
-   snprintf(line, 50, "%8lu  %.2f %%", GBL_STATS->ps_drop, 
+   snprintf(line, 50, "%8lld  %.2f %%", GBL_STATS->ps_drop, 
          (GBL_STATS->ps_recv) ? (float)GBL_STATS->ps_drop * 100 / GBL_STATS->ps_recv : 0 );
    gtk_label_set_text(GTK_LABEL (packets_drop), line);
-   snprintf(line, 50, "%8lu  bytes: %8lu ", GBL_STATS->ps_sent, GBL_STATS->bs_sent);
+   snprintf(line, 50, "%8lld  bytes: %8lld ", GBL_STATS->ps_sent, GBL_STATS->bs_sent);
    gtk_label_set_text(GTK_LABEL (packets_forw), line);
    snprintf(line, 50, "%d/%d ", GBL_STATS->queue_curr, GBL_STATS->queue_max);
    gtk_label_set_text(GTK_LABEL (queue_len), line);
    snprintf(line, 50, "%d ", GBL_CONF->sampling_rate);
    gtk_label_set_text(GTK_LABEL (sample_rate), line);
-   snprintf(line, 50, "pck: %8lu  bytes: %8lu", 
+   snprintf(line, 50, "pck: %8lld  bytes: %8lld", 
          GBL_STATS->bh.pck_recv, GBL_STATS->bh.pck_size);
    gtk_label_set_text(GTK_LABEL (recv_bottom), line);
-   snprintf(line, 50, "pck: %8lu  bytes: %8lu", 
+   snprintf(line, 50, "pck: %8lld  bytes: %8lld", 
          GBL_STATS->th.pck_recv, GBL_STATS->th.pck_size);
    gtk_label_set_text(GTK_LABEL (recv_top), line);
    snprintf(line, 50, "%.2f %%",
diff --git a/src/interfaces/gtk/ec_gtk_view_connections.c b/src/interfaces/gtk/ec_gtk_view_connections.c
index fbe114c2..105d0631 100644
--- a/src/interfaces/gtk/ec_gtk_view_connections.c
+++ b/src/interfaces/gtk/ec_gtk_view_connections.c
@@ -1009,7 +1009,7 @@ static void gtkui_connection_data_join(void)
 
 static gboolean gtkui_connections_scroll(gpointer data)
 {
-   if((size_t)data == 1 && textview1 && endmark1 && textview2 && endmark2) {
+   if((int)data == 1 && textview1 && endmark1 && textview2 && endmark2) {
       /* scroll split data views to bottom */
       gtk_text_view_scroll_to_mark(GTK_TEXT_VIEW (textview1), endmark1, 0, FALSE, 0, 0);
       gtk_text_view_scroll_to_mark(GTK_TEXT_VIEW (textview2), endmark2, 0, FALSE, 0, 0); 
diff --git a/src/interfaces/text/ec_text.c b/src/interfaces/text/ec_text.c
index b1d563ad..c9323eed 100644
--- a/src/interfaces/text/ec_text.c
+++ b/src/interfaces/text/ec_text.c
@@ -160,7 +160,7 @@ static void text_fatal_error(const char *msg)
    fflush(stdout);
 
    /* restore console settings */
-    tcsetattr(0, TCSANOW, &old_tc);
+   tcsetattr(0, TCSANOW, &old_tc);
 
    /* exit without calling atexit() */
    _exit(-1);
@@ -185,7 +185,7 @@ static void text_input(const char *title, char *input, size_t n, void (*callback
    memset(input, 0, n); 
    
    /* get the user input */
-   if(fgets(input, n, stdin));
+   fgets(input, n, stdin);
 
    /* trim the \n */
    if ((p = strrchr(input, '\n')) != NULL)
@@ -447,7 +447,7 @@ static void text_run_plugin(void)
    fflush(stdin);
    
    /* get the user input */
-   if(fgets(name, 20, stdin));
+   fgets(name, 20, stdin);
 
    /* trim the \n */
    if ((p = strrchr(name, '\n')) != NULL)
@@ -515,7 +515,7 @@ static void text_run_filter(void) {
 
       fprintf(stdout, "\nEnter number to enable/disable filter (0 to quit): ");
       /* get the user input */
-      if(fgets(input, 19, stdin));
+      fgets(input, 19, stdin);
       number = -1;
       sscanf(input, "%d", &number);
       if (number == 0) {
@@ -552,17 +552,17 @@ static void text_stats(void)
    DEBUG_MSG("text_stats (queue) : %lu %lu", (unsigned long)GBL_STATS->queue_curr, (unsigned long)GBL_STATS->queue_max); 
   
    
-   fprintf(stdout, "\n Received packets    : %8lu\n", GBL_STATS->ps_recv);
-   fprintf(stdout,   " Dropped packets     : %8lu  %.2f %%\n", GBL_STATS->ps_drop,
+   fprintf(stdout, "\n Received packets    : %8lld\n", GBL_STATS->ps_recv);
+   fprintf(stdout,   " Dropped packets     : %8lld  %.2f %%\n", GBL_STATS->ps_drop,
          (GBL_STATS->ps_recv) ? (float)GBL_STATS->ps_drop * 100 / GBL_STATS->ps_recv : 0 );
-   fprintf(stdout,   " Forwarded           : %8lu  bytes: %8lu\n\n", GBL_STATS->ps_sent, GBL_STATS->bs_sent);
+   fprintf(stdout,   " Forwarded           : %8lld  bytes: %8lld\n\n", GBL_STATS->ps_sent, GBL_STATS->bs_sent);
    
    fprintf(stdout,   " Current queue len   : %lu/%lu\n", (unsigned long)GBL_STATS->queue_curr, (unsigned long)GBL_STATS->queue_max);
    fprintf(stdout,   " Sampling rate       : %d\n\n", GBL_CONF->sampling_rate);
    
-   fprintf(stdout,   " Bottom Half received packet : pck: %8lu  byte: %8lu\n", 
+   fprintf(stdout,   " Bottom Half received packet : pck: %8lld  byte: %8lld\n", 
          GBL_STATS->bh.pck_recv, GBL_STATS->bh.pck_size);
-   fprintf(stdout,   " Top Half received packet    : pck: %8lu  byte: %8lu\n", 
+   fprintf(stdout,   " Top Half received packet    : pck: %8lld  byte: %8lld\n", 
          GBL_STATS->th.pck_recv, GBL_STATS->th.pck_size);
    fprintf(stdout,   " Interesting packets         : %.2f %%\n\n",
          (GBL_STATS->bh.pck_recv) ? (float)GBL_STATS->th.pck_recv * 100 / GBL_STATS->bh.pck_recv : 0 );
@@ -629,7 +629,7 @@ static void text_visualization(void)
    fprintf(stdout, "\n\nVisualization format: ");
    fflush(stdout);
    
-   if(scanf("%15s", format));
+   scanf("%15s", format);
   
    /* disable buffered input */
    tcsetattr(0, TCSANOW, &new_tc);
diff --git a/src/interfaces/text/ec_text_display.c b/src/interfaces/text/ec_text_display.c
index 507c8b45..b242533f 100644
--- a/src/interfaces/text/ec_text_display.c
+++ b/src/interfaces/text/ec_text_display.c
@@ -74,7 +74,7 @@ void text_print_packet(struct packet_object *po)
    display_headers(po);
    
    /* print it */
-   if(write(fileno(stdout), tmp, ret));
+   write(fileno(stdout), tmp, ret);
 
    printf("\n");
 }     
diff --git a/src/interfaces/text/ec_text_profile.c b/src/interfaces/text/ec_text_profile.c
index 67b6ca10..c44921b9 100644
--- a/src/interfaces/text/ec_text_profile.c
+++ b/src/interfaces/text/ec_text_profile.c
@@ -182,7 +182,7 @@ static void detail_select(void)
    tcsetattr(0, TCSANOW, &old_tc);
 
    /* get the user input */
-   if(scanf("%d", &n));
+   scanf("%d", &n);
  
    /* disable buffered input */
    tcsetattr(0, TCSANOW, &new_tc);
diff --git a/src/os/ec_linux.c b/src/os/ec_linux.c
index 604b6f39..bb1eaa83 100644
--- a/src/os/ec_linux.c
+++ b/src/os/ec_linux.c
@@ -41,7 +41,7 @@ void disable_ip_forward(void)
    fd = fopen("/proc/sys/net/ipv4/ip_forward", "r");
    ON_ERROR(fd, NULL, "failed to open /proc/sys/net/ipv4/ip_forward");
 
-   if(fscanf(fd, "%c", &saved_status));
+   fscanf(fd, "%c", &saved_status);
    fclose(fd);
 
    DEBUG_MSG("disable_ip_forward: old value = %c", saved_status);
@@ -68,7 +68,7 @@ static void restore_ip_forward(void)
    fd = fopen("/proc/sys/net/ipv4/ip_forward", "r");
    ON_ERROR(fd, NULL, "failed to open /proc/sys/net/ipv4/ip_forward");
 
-   if(fscanf(fd, "%c", &current_status));
+   fscanf(fd, "%c", &current_status);
    fclose(fd);
    
    DEBUG_MSG("ATEXIT: restore_ip_forward: curr: %c saved: %c", current_status, saved_status);
diff --git a/utils/etterfilter/ef_output.c b/utils/etterfilter/ef_output.c
index a152b2bc..b9ce8b15 100644
--- a/utils/etterfilter/ef_output.c
+++ b/utils/etterfilter/ef_output.c
@@ -69,15 +69,15 @@ int write_output(void)
    data = create_data_segment(&fh, fop, ninst);
    
    /* write the header */
-   if(write(fd, &fh, sizeof(struct filter_header)));
+   write(fd, &fh, sizeof(struct filter_header));
 
    /* write the data segment */
-   if(write(fd, data, fh.code - fh.data));
+   write(fd, data, fh.code - fh.data);
    
    /* write the instructions */
    for (i = 0; i <= ninst; i++) {
       print_progress_bar(&fop[i]);
-      if(write(fd, &fop[i], sizeof(struct filter_op)));
+      write(fd, &fop[i], sizeof(struct filter_op));
    }
 
    close(fd);
diff --git a/utils/etterlog/el_decode_http.c b/utils/etterlog/el_decode_http.c
index 3d5e02b9..404c1588 100644
--- a/utils/etterlog/el_decode_http.c
+++ b/utils/etterlog/el_decode_http.c
@@ -138,7 +138,7 @@ FUNC_EXTRACTOR(extractor_http)
          SAFE_CALLOC(data, len, sizeof(u_char));
          
          stream_read(STREAM, data, len, server);
-         if(write(fd, data, len));
+         write(fd, data, len);
 
          SAFE_FREE(data);
          
diff --git a/utils/etterlog/el_display.c b/utils/etterlog/el_display.c
index 18eacbbf..8d7fe639 100644
--- a/utils/etterlog/el_display.c
+++ b/utils/etterlog/el_display.c
@@ -126,7 +126,7 @@ static void display_packet(void)
       }
       
       /* print it */
-      if(write(fileno(stdout), tmp, ret));
+      write(fileno(stdout), tmp, ret);
       
       if (GBL.color) 
          reset_color();
@@ -136,7 +136,7 @@ static void display_packet(void)
    }
 
    if (!GBL.no_headers)
-      if(write(fileno(stdout), "\n\n", 2));
+      write(fileno(stdout), "\n\n", 2);
    
    return;
 }
@@ -158,7 +158,7 @@ static void display_headers(struct log_header_packet *pck)
    
    memset(flags, 0, sizeof(flags));
    
-   if(write(fileno(stdout), "\n\n", 2));
+   write(fileno(stdout), "\n\n", 2);
    
    /* remove the final '\n' */
    strcpy(time, ctime((time_t *)&pck->tv.tv_sec));
@@ -166,14 +166,14 @@ static void display_headers(struct log_header_packet *pck)
    
    /* displat the date */
    sprintf(str, "%s [%lu]\n", time, (unsigned long)pck->tv.tv_usec);
-   if(write(fileno(stdout), str, strlen(str)));
+   write(fileno(stdout), str, strlen(str));
   
    if (GBL.showmac) {
       /* display the mac addresses */
       mac_addr_ntoa(pck->L2_src, tmp1);
       mac_addr_ntoa(pck->L2_dst, tmp2);
       sprintf(str, "%17s --> %17s\n", tmp1, tmp2 );
-      if(write(fileno(stdout), str, strlen(str)));
+      write(fileno(stdout), str, strlen(str));
    }
   
    /* calculate the flags */
@@ -199,9 +199,9 @@ static void display_headers(struct log_header_packet *pck)
    sprintf(str, "%s  %s:%d --> %s:%d | %s\n", proto, tmp1, ntohs(pck->L4_src), 
                                                         tmp2, ntohs(pck->L4_dst),
                                                         flags);
-   if(write(fileno(stdout), str, strlen(str)));
+   write(fileno(stdout), str, strlen(str));
 
-   if(write(fileno(stdout), "\n", 1));
+   write(fileno(stdout), "\n", 1);
 }
 
 /*
diff --git a/utils/etterlog/el_main.c b/utils/etterlog/el_main.c
index 08ea997d..1d677fac 100644
--- a/utils/etterlog/el_main.c
+++ b/utils/etterlog/el_main.c
@@ -103,7 +103,7 @@ void set_color(int color)
    char str[8];
    
    sprintf(str, "\033[%dm", color);
-   if(write(fileno(stdout), str, strlen(str)));
+   write(fileno(stdout), str, strlen(str));
 #endif
 }
 
@@ -113,7 +113,7 @@ void reset_color(void)
 {
    /* windows does not like ansi colors... */
 #ifndef OS_WINDOWS   
-   if(write(fileno(stdout), EC_COLOR_END, 4));
+   write(fileno(stdout), EC_COLOR_END, 4);   
 #endif
 }
 

