commit c70c036f04b7b74282477d6a51bbcc8bb8897e03
Author: Julia Lawall <julia@diku.dk>
Date:   Tue Apr 6 14:34:46 2010 -0700

    drivers/char/amiserial.c: add missing local_irq_restore
    
    rs_init() is failing to restore interrupts on two error paths, and is
    incorrectly calling tty_unregister_driver() with local interrupts
    disabled.
    
    Fix these things by disabling interrupts later, after the reauest_irq()
    calls.
    
    A simplified version of the semantic patch that finds this problem is as
    follows: (http://coccinelle.lip6.fr/)
    
    // <smpl>
    @r exists@
    expression E1;
    identifier f;
    @@
    
    f (...) { <+...
    * local_irq_save (E1,...);
    ... when != E1
    * return ...;
    ...+> }
    // </smpl>
    
    [akpm@linux-foundation.org: reimplement the fix]
    Signed-off-by: Julia Lawall <julia@diku.dk>
    Cc: Thadeu Lima de Souza Cascardo <cascardo@holoscopio.com>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/drivers/char/amiserial.c b/drivers/char/amiserial.c
index 6c32fbf07164..56b27671adc4 100644
--- a/drivers/char/amiserial.c
+++ b/drivers/char/amiserial.c
@@ -2021,8 +2021,6 @@ static int __init rs_init(void)
 	state->baud_base = amiga_colorclock;
 	state->xmit_fifo_size = 1;
 
-	local_irq_save(flags);
-
 	/* set ISRs, and then disable the rx interrupts */
 	error = request_irq(IRQ_AMIGA_TBE, ser_tx_int, 0, "serial TX", state);
 	if (error)
@@ -2033,6 +2031,8 @@ static int __init rs_init(void)
 	if (error)
 		goto fail_free_irq;
 
+	local_irq_save(flags);
+
 	/* turn off Rx and Tx interrupts */
 	custom.intena = IF_RBF | IF_TBE;
 	mb();

