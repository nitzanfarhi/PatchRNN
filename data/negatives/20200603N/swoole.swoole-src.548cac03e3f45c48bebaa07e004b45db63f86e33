commit 548cac03e3f45c48bebaa07e004b45db63f86e33
Author: matyhtf <mikan.tenny@gmail.com>
Date:   Tue Dec 23 16:36:34 2014 +0800

    Update swoole_process->write use reactor->write

diff --git a/src/reactor/ReactorBase.c b/src/reactor/ReactorBase.c
index 6f1180f4..e6bf71fa 100644
--- a/src/reactor/ReactorBase.c
+++ b/src/reactor/ReactorBase.c
@@ -21,6 +21,7 @@ static void swReactor_onTimeout_and_Finish(swReactor *reactor);
 static void swReactor_onTimeout(swReactor *reactor);
 static void swReactor_onFinish(swReactor *reactor);
 static int swReactor_write(swReactor *reactor, int fd, void *buf, int n);
+static int swReactor_close(swReactor *reactor, int fd);
 
 int swReactor_auto(swReactor *reactor, int max_event)
 {
@@ -53,6 +54,7 @@ int swReactor_auto(swReactor *reactor, int max_event)
     reactor->onTimeout = swReactor_onTimeout;
 
     reactor->write = swReactor_write;
+    reactor->close = swReactor_close;
 
     return ret;
 }
@@ -190,6 +192,32 @@ static void swReactor_onFinish(swReactor *reactor)
     swReactor_onTimeout_and_Finish(reactor);
 }
 
+static int swReactor_close(swReactor *reactor, int fd)
+{
+    swConnection *socket = &reactor->sockets[fd];
+
+    if (socket->close_wait)
+    {
+        if (socket->out_buffer != NULL)
+        {
+            swBuffer_free(socket->out_buffer);
+            socket->out_buffer = NULL;
+        }
+
+        if (socket->in_buffer != NULL)
+        {
+            swBuffer_free(socket->in_buffer);
+            socket->in_buffer = NULL;
+        }
+
+        return close(fd);
+    }
+    else
+    {
+        return SW_ERR;
+    }
+}
+
 static int swReactor_write(swReactor *reactor, int fd, void *buf, int n)
 {
     int ret;
@@ -198,7 +226,7 @@ static int swReactor_write(swReactor *reactor, int fd, void *buf, int n)
 
     if (swBuffer_empty(buffer))
     {
-        ret = swSocket_write(fd, buf, n);
+        ret = swConnection_send(socket, buf, n, 0);
 
         if (ret < 0 && errno == EAGAIN)
         {
@@ -244,21 +272,38 @@ int swReactor_onWrite(swReactor *reactor, swEvent *ev)
     int fd = ev->fd;
 
     swConnection *socket = &reactor->sockets[fd];
-    swBuffer_trunk *trunk = NULL;
+    swBuffer_trunk *chunk = NULL;
     swBuffer *buffer = socket->out_buffer;
 
     //send to socket
     while (!swBuffer_empty(buffer))
     {
-        trunk = swBuffer_get_trunk(buffer);
-        ret = write(fd, trunk->store.ptr, trunk->length);
-        if (ret < 0)
+        chunk = swBuffer_get_trunk(buffer);
+        if (chunk->type == SW_CHUNK_CLOSE)
         {
-            return errno == EAGAIN ? SW_OK : SW_ERR;
+            close_fd:
+            reactor->close(reactor, ev->fd);
+            return SW_OK;
+        }
+        else if (chunk->type == SW_CHUNK_SENDFILE)
+        {
+            ret = swConnection_onSendfile(socket, chunk);
         }
         else
         {
-            swBuffer_pop_trunk(buffer, trunk);
+            ret = swConnection_buffer_send(socket);
+        }
+
+        if (ret < 0)
+        {
+            if (socket->close_wait)
+            {
+                goto close_fd;
+            }
+            else if (socket->send_wait)
+            {
+                return SW_OK;
+            }
         }
     }
 
diff --git a/swoole_process.c b/swoole_process.c
index 55081701..559efb23 100644
--- a/swoole_process.c
+++ b/swoole_process.c
@@ -441,12 +441,17 @@ PHP_METHOD(swoole_process, write)
 		RETURN_FALSE;
 	}
 
-	int ret;
-	do
-	{
-		ret = write(process->pipe, data, (size_t) data_len);
-	}
-	while(errno < 0 && errno == EINTR);
+    int ret;
+
+    //async write
+    if (SwooleG.main_reactor)
+    {
+        ret = SwooleG.main_reactor->write(SwooleG.main_reactor, process->pipe, data, (size_t) data_len);
+    }
+    else
+    {
+        ret = swSocket_write(process->pipe, data, (size_t) data_len);
+    }
 
 	if (ret < 0)
 	{

