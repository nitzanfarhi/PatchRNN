commit c38446cc65e1f2b3eb8630c53943b94c4f65f670
Author: Hillf Danton <dhillf@gmail.com>
Date:   Wed Mar 21 16:33:50 2012 -0700

    mm: vmscan: fix misused nr_reclaimed in shrink_mem_cgroup_zone()
    
    The value of nr_reclaimed is the number of pages reclaimed in the current
    round of the loop, whereas nr_to_reclaim should be compared with the
    number of pages reclaimed in all rounds.
    
    In each round of the loop, reclaimed pages are cut off from the reclaim
    goal, and the loop stops once the goal achieved.
    
    Signed-off-by: Hillf Danton <dhillf@gmail.com>
    Cc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Michal Hocko <mhocko@suse.cz>
    Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/vmscan.c b/mm/vmscan.c
index 61a66881235d..8dfa59866af2 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -2112,7 +2112,12 @@ static void shrink_mem_cgroup_zone(int priority, struct mem_cgroup_zone *mz,
 		 * with multiple processes reclaiming pages, the total
 		 * freeing target can get unreasonably large.
 		 */
-		if (nr_reclaimed >= nr_to_reclaim && priority < DEF_PRIORITY)
+		if (nr_reclaimed >= nr_to_reclaim)
+			nr_to_reclaim = 0;
+		else
+			nr_to_reclaim -= nr_reclaimed;
+
+		if (!nr_to_reclaim && priority < DEF_PRIORITY)
 			break;
 	}
 	blk_finish_plug(&plug);

