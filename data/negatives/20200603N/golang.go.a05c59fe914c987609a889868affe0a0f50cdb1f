commit a05c59fe914c987609a889868affe0a0f50cdb1f
Author: Russ Cox <rsc@golang.org>
Date:   Tue Sep 30 13:52:44 2008 -0700

    cleanup export
    
    R=ken
    OCL=16219
    CL=16219

diff --git a/src/cmd/gc/dcl.c b/src/cmd/gc/dcl.c
index faef3bc634..5839d4abef 100644
--- a/src/cmd/gc/dcl.c
+++ b/src/cmd/gc/dcl.c
@@ -335,7 +335,7 @@ addmethod(Node *n, Type *t, int local)
 	return;
 
 bad:
-	yyerror("unknown method pointer: %T %S %S", pa, sf, st);
+	yyerror("unknown method pointer: %T %S", pa, sf);
 }
 
 /*
diff --git a/src/cmd/gc/export.c b/src/cmd/gc/export.c
index 9590711169..0c17ad683c 100644
--- a/src/cmd/gc/export.c
+++ b/src/cmd/gc/export.c
@@ -288,7 +288,7 @@ void
 dumpm(Sym *s)
 {
 	Type *t, *f;
-	Dcl *back, *d1;
+	Dcl *back, *d;
 
 	switch(s->lexical) {
 	default:
@@ -313,12 +313,10 @@ dumpm(Sym *s)
 		reexport(f->type);
 		Bprint(bout, "\tfunc %S %lS\n", f->sym, f->type->sym);
 	
-		if(back != exportlist->back) {
-			// redo first pass on new entries
-			for(d1=back; d1!=D; d1=d1->forw) {
-				lineno = d1->lineno;
-				dumpe(d1->dsym);
-			}
+		// redo first pass on new entries
+		for(d=back; d!=D; d=d->forw) {
+			lineno = d->lineno;
+			dumpe(d->dsym);
 		}
 	}
 }
@@ -326,7 +324,7 @@ dumpm(Sym *s)
 void
 dumpexport(void)
 {
-	Dcl *d, *d1;
+	Dcl *d;
 	int32 lno;
 
 	lno = lineno;

