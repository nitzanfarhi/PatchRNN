commit 9ac754332d794bbc8518680c138a882dbb189643
Author: JÃ¶rn Heusipp <manxorist@users.sourceforge.net>
Date:   Sat Mar 29 09:02:23 2014 +0000

    [Imp] Indicate whether it's a 32 bit or a 64 bit build in about dialog.
    
    git-svn-id: https://source.openmpt.org/svn/openmpt/trunk/OpenMPT@3994 56274372-70c3-4bfc-bfc3-4c3a0b034d27

diff --git a/common/version.cpp b/common/version.cpp
index 7f07eb3b5..819def1d2 100644
--- a/common/version.cpp
+++ b/common/version.cpp
@@ -236,7 +236,7 @@ std::string GetRevisionString()
 	{
 		return str;
 	}
-	str = std::string("-r") + Stringify(GetRevision());
+	str = std::string("-r") + mpt::ToString(GetRevision());
 	if(HasMixedRevisions())
 	{
 		str += "!";
@@ -258,6 +258,12 @@ std::string GetVersionStringExtended()
 	if(IsDebugBuild() || IsTestBuild() || IsDirty() || HasMixedRevisions())
 	{
 		retval += GetRevisionString();
+	}
+	#ifdef MODPLUG_TRACKER
+		retval += mpt::String::Print(" %1 bit", sizeof(void*) * 8);
+	#endif
+	if(IsDebugBuild() || IsTestBuild() || IsDirty() || HasMixedRevisions())
+	{
 		retval += GetBuildFlagsString();
 		#ifdef MODPLUG_TRACKER
 			retval += GetBuildFeaturesString();
@@ -282,7 +288,7 @@ std::string GetVersionUrlString()
 	{
 		url = url.substr(baseurl.length());
 	}
-	return url + "@" + Stringify(GetRevision()) + GetStateString();
+	return url + "@" + mpt::ToString(GetRevision()) + GetStateString();
 }
 
 std::string GetContactString()
diff --git a/common/version.h b/common/version.h
index 5c50ac771..63eac450c 100644
--- a/common/version.h
+++ b/common/version.h
@@ -79,7 +79,7 @@ namespace MptVersion
 	std::string GetRevisionString(); // e.g. "-r1234+"
 
 	// Returns MptVersion::str if the build is a clean release build straight from the repository or an extended strin otherwise (if built from a svn working copy and tsvn was available during build)
-	std::string GetVersionStringExtended(); // e.g. "1.17.02.08-r1234+ DEBUG"
+	std::string GetVersionStringExtended(); // e.g. "1.17.02.08-r1234+ 32 bit DEBUG"
 
 	// Returns a string combining the repository url and the revision, suitable for checkout if the working copy was clean (if built from a svn working copy and tsvn was available during build)
 	std::string GetVersionUrlString(); // e.g. "https://svn.code.sf.net/p/modplug/code/trunk/OpenMPT@1234+dirty"

