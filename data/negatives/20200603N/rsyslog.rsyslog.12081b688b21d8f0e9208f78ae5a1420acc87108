commit 12081b688b21d8f0e9208f78ae5a1420acc87108
Author: Janmejay Singh <singh.janmejay@gmail.com>
Date:   Sun Sep 25 06:56:43 2016 +0530

    fixed omprog logging to cover omprog cleanup-failure scenarios

diff --git a/plugins/omprog/omprog.c b/plugins/omprog/omprog.c
index ce36f1e39..5281d97c9 100644
--- a/plugins/omprog/omprog.c
+++ b/plugins/omprog/omprog.c
@@ -434,7 +434,6 @@ cleanup(wrkrInstanceData_t *pWrkrData, long timeout_ms)
 {
 	int status;
 	int ret;
-	char errStr[1024];
 
 #if defined(__linux__) && defined(_GNU_SOURCE)
 	subprocess_timeout_desc_t subpTimeOut;
@@ -457,9 +456,12 @@ cleanup(wrkrInstanceData_t *pWrkrData, long timeout_ms)
 	if (waitpid_interrupted) return cleanup(pWrkrData, -1);
 #endif
 	if(ret != pWrkrData->pid) {
-		/* if waitpid() fails, we can not do much - try to ignore it... */
-		DBGPRINTF("omprog: waitpid() returned state %d[%s], future malfunction may happen\n", ret,
-			   rs_strerror_r(errno, errStr, sizeof(errStr)));
+		if (errno == ECHILD) {
+			errmsg.LogError(errno, RS_RET_OK_WARN, "Child %d doesn't seem to exist, "
+							"hence couldn't be reaped (reaped by main-loop?)", pWrkrData->pid);
+		} else {
+			errmsg.LogError(errno, RS_RET_SYS_ERR, "Cleanup failed for child %d", pWrkrData->pid);
+		}
 	} else {
 		/* check if we should print out some diagnostic information */
 		DBGPRINTF("omprog: waitpid status return for program '%s': %2.2x\n",
diff --git a/tools/rsyslogd.c b/tools/rsyslogd.c
index 6e1ef2da0..4d6fd764b 100644
--- a/tools/rsyslogd.c
+++ b/tools/rsyslogd.c
@@ -26,6 +26,7 @@
 
 #include <signal.h>
 #include <stdlib.h>
+#include <sys/types.h>
 #include <sys/wait.h>
 #ifdef HAVE_LIBLOGGING_STDLOG
 #  include <liblogging/stdlog.h>
@@ -1530,10 +1531,13 @@ mainloop(void)
 		select(1, NULL, NULL, NULL, &tvSelectTimeout);
 
 		if(bChildDied) {
-			int child;
+			pid_t child;
 			do {
 				child = waitpid(-1, NULL, WNOHANG);
 				DBGPRINTF("rsyslogd: child %d has terminated\n", child);
+				if (child != -1) {
+					errmsg.LogError(0, RS_RET_OK, "Child %d has terminated, reaped by main-loop.", child);
+				}
 			} while(child > 0);
 			bChildDied = 0;
 		}

