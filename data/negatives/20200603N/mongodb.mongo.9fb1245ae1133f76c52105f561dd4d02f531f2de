commit 9fb1245ae1133f76c52105f561dd4d02f531f2de
Author: Alberto Lerner <alerner@10gen.com>
Date:   Mon Aug 19 19:41:24 2013 -0400

    SERVER-10529 Allow isMaster to report the wire version (range) it expects.

diff --git a/src/mongo/db/repl/replication_server_status.cpp b/src/mongo/db/repl/replication_server_status.cpp
index 248590d6b7..306d2a92b0 100644
--- a/src/mongo/db/repl/replication_server_status.cpp
+++ b/src/mongo/db/repl/replication_server_status.cpp
@@ -26,6 +26,7 @@
 #include "mongo/db/repl/is_master.h"
 #include "mongo/db/repl/master_slave.h"
 #include "mongo/db/repl/rs.h"
+#include "mongo/db/wire_version.h"
 
 namespace mongo {
 
@@ -164,6 +165,8 @@ namespace mongo {
             result.appendNumber("maxBsonObjectSize", BSONObjMaxUserSize);
             result.appendNumber("maxMessageSizeBytes", MaxMessageSizeBytes);
             result.appendDate("localTime", jsTime());
+            result.append("maxWireVersion", maxWireVersion);
+            result.append("minWireVersion", minWireVersion);
             return true;
         }
     } cmdismaster;
diff --git a/src/mongo/db/wire_version.h b/src/mongo/db/wire_version.h
new file mode 100644
index 0000000000..9718e24110
--- /dev/null
+++ b/src/mongo/db/wire_version.h
@@ -0,0 +1,50 @@
+/**
+*    Copyright (C) 2013 10gen Inc.
+*
+*    This program is free software: you can redistribute it and/or  modify
+*    it under the terms of the GNU Affero General Public License, version 3,
+*    as published by the Free Software Foundation.
+*
+*    This program is distributed in the hope that it will be useful,
+*    but WITHOUT ANY WARRANTY; without even the implied warranty of
+*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*    GNU Affero General Public License for more details.
+*
+*    You should have received a copy of the GNU Affero General Public License
+*    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+namespace mongo {
+
+    /**
+     * The 'WireVersion' captures all "protocol events" the write protocol went through.  A
+     * protocol event is a change in the syntax of messages on the wire or the semantics of
+     * existing messages. We may also add "logical" entries for releases, although that's not
+     * mandatory.
+     *
+     * We use the wire version to determine if two agents (a driver, a mongos, or a mongod) can
+     * interact. Each agent carries two versions, a 'max' and a 'min' one. If the two agents
+     * are on the same 'max' number, they stricly speak the same wire protocol and it is safe
+     * to allow them to communicate. If two agents' ranges do not intersect, they should not be
+     * allowed to communicate.
+     *
+     * If two agents have at least one version in common they can communicate, but one of the
+     * sides has to be ready to compensate for not being on its partner version.
+     */
+    enum WireVersion {
+        // Everything before we started tracking.
+        RELEASE_2_4_AND_BEFORE = 0,
+
+        // The aggregation command may now be requested to return cursors.
+        AGG_RETURNS_CURSORS = 1,
+    };
+
+    // Latest version that the server accepts. This should always be at the latest entry in
+    // WireVersion.
+    static const int maxWireVersion = AGG_RETURNS_CURSORS;
+
+    // Minimum version that the server accepts. We should bump this whenever we don't want
+    // to allow communication with too old agents.
+    static const int minWireVersion = RELEASE_2_4_AND_BEFORE;
+
+} // namespace mongo
diff --git a/src/mongo/s/commands_admin.cpp b/src/mongo/s/commands_admin.cpp
index a995fbc41e..47daaf5144 100644
--- a/src/mongo/s/commands_admin.cpp
+++ b/src/mongo/s/commands_admin.cpp
@@ -30,6 +30,7 @@
 #include "mongo/db/hasher.h"
 #include "mongo/db/index_names.h"
 #include "mongo/db/stats/counters.h"
+#include "mongo/db/wire_version.h"
 #include "mongo/s/chunk.h"
 #include "mongo/s/client_info.h"
 #include "mongo/s/config.h"
@@ -1309,6 +1310,11 @@ namespace mongo {
                 result.appendNumber("maxMessageSizeBytes", MaxMessageSizeBytes);
                 result.appendDate("localTime", jsTime());
 
+                // Mongos tries to keep exactly the same version range of the server it is
+                // compiled for.
+                result.append("maxWireVersion", maxWireVersion);
+                result.append("minWireVersion", minWireVersion);
+
                 return true;
             }
         } ismaster;

