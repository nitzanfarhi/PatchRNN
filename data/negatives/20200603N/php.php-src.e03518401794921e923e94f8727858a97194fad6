commit e03518401794921e923e94f8727858a97194fad6
Author: Antony Dovgal <tony2001@php.net>
Date:   Tue Jul 1 07:54:30 2008 +0000

    string length -> int

diff --git a/ext/mbstring/mbstring.c b/ext/mbstring/mbstring.c
index 15b5221631..3dcd09d395 100644
--- a/ext/mbstring/mbstring.c
+++ b/ext/mbstring/mbstring.c
@@ -2108,8 +2108,8 @@ PHP_FUNCTION(mb_substr)
 {
 	size_t argc = ZEND_NUM_ARGS();
 	char *str, *encoding;
-	long str_len, from, len, encoding_len;
-	int mblen;
+	long from, len;
+	int mblen, str_len, encoding_len;
 	mbfl_string string, result, *ret;
 
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "sl|ls", &str, &str_len, &from, &len, &encoding, &encoding_len) == FAILURE) {
@@ -2181,7 +2181,8 @@ PHP_FUNCTION(mb_strcut)
 {
 	size_t argc = ZEND_NUM_ARGS();
 	char *str, *encoding;
-	long str_len, from, len, encoding_len;
+	long from, len;
+	int str_len, encoding_len;
 	mbfl_string string, result, *ret;
 
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "sl|ls", &str, &str_len, &from, &len, &encoding, &encoding_len) == FAILURE) {
@@ -2285,7 +2286,8 @@ PHP_FUNCTION(mb_strimwidth)
 {
 	zval **arg1, **arg2, **arg3, **arg4, **arg5;
 	char *str, *trimmarker, *encoding;
-	long str_len, from, width, trimmarker_len, encoding_len;
+	long from, width;
+	int str_len, trimmarker_len, encoding_len;
 	mbfl_string string, result, marker, *ret;
 
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "sll|ss", &str, &str_len, &from, &width, &trimmarker, &trimmarker_len, &encoding, &encoding_len) == FAILURE) {
@@ -2428,7 +2430,7 @@ MBSTRING_API char * php_mb_convert_encoding(char *input, size_t length, char *_t
 PHP_FUNCTION(mb_convert_encoding)
 {
 	char *arg_str, *arg_new;
-	long str_len, new_len;
+	int str_len, new_len;
 	zval *arg_old;
 	int i;
 	size_t size, l, n;
@@ -2571,7 +2573,7 @@ PHP_FUNCTION(mb_strtolower)
 PHP_FUNCTION(mb_detect_encoding)
 {
 	char *str;
-	long str_len;
+	int str_len;
 	zend_bool strict=0;
 	zval *encoding_list;
 
@@ -3189,7 +3191,7 @@ static void
 php_mb_numericentity_exec(INTERNAL_FUNCTION_PARAMETERS, int type)
 {
 	char *str, *encoding;
-	long str_len, encoding_len;
+	int str_len, encoding_len;
 	zval *zconvmap, **hash_entry;
 	HashTable *target_hash;
 	size_t argc = ZEND_NUM_ARGS();
diff --git a/ext/mbstring/php_mbregex.c b/ext/mbstring/php_mbregex.c
index abfe62d0d1..f1dfdaf460 100644
--- a/ext/mbstring/php_mbregex.c
+++ b/ext/mbstring/php_mbregex.c
@@ -489,7 +489,7 @@ PHP_FUNCTION(mb_regex_encoding)
 {
 	size_t argc = ZEND_NUM_ARGS();
 	char *encoding;
-	long encoding_len;
+	int encoding_len;
 	OnigEncoding mbctype;
 
 	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "|s", &encoding, &encoding_len) == FAILURE) {
@@ -946,7 +946,7 @@ _php_mb_regex_ereg_search_exec(INTERNAL_FUNCTION_PARAMETERS, int mode)
 {
 	size_t argc = ZEND_NUM_ARGS();
 	char *arg_pattern, *arg_options;
-	long arg_pattern_len, arg_options_len;
+	int arg_pattern_len, arg_options_len;
 	int n, i, err, pos, len, beg, end, option;
 	OnigUChar *str;
 	OnigSyntaxType *syntax;
@@ -1076,7 +1076,7 @@ PHP_FUNCTION(mb_ereg_search_init)
 	size_t argc = ZEND_NUM_ARGS();
 	zval *arg_str;
 	char *arg_pattern, *arg_options;
-	long arg_pattern_len, arg_options_len;
+	int arg_pattern_len, arg_options_len;
 	OnigSyntaxType *syntax = NULL;
 	int option;
 

