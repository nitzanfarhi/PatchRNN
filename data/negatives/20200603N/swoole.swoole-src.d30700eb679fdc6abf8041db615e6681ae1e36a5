commit d30700eb679fdc6abf8041db615e6681ae1e36a5
Author: matyhtf <mikan.tenny@gmail.com>
Date:   Mon Mar 13 16:35:13 2017 +0800

    fixed eof server with BASE mode crash when the connection is closed.

diff --git a/src/protocol/Base.c b/src/protocol/Base.c
index bb51b6dd..a4ffa7db 100644
--- a/src/protocol/Base.c
+++ b/src/protocol/Base.c
@@ -45,7 +45,7 @@ int swProtocol_get_package_length(swProtocol *protocol, swConnection *conn, char
     return protocol->package_body_offset + body_length;
 }
 
-static sw_inline int swProtocol_split_package_by_eof(swProtocol *protocol, void *object, swString *buffer)
+static sw_inline int swProtocol_split_package_by_eof(swProtocol *protocol, swConnection *conn, swString *buffer)
 {
 #if 0
     static count;
@@ -74,7 +74,7 @@ static sw_inline int swProtocol_split_package_by_eof(swProtocol *protocol, void
 
     uint32_t length = buffer->offset + eof_pos + protocol->package_eof_len;
     //swNotice("#[4] count=%d, length=%d", count, length);
-    protocol->onPackage(object, buffer->str, length);
+    protocol->onPackage(conn, buffer->str, length);
 
     //there are remaining data
     if (length < buffer->length)
@@ -103,7 +103,11 @@ static sw_inline int swProtocol_split_package_by_eof(swProtocol *protocol, void
             else
             {
                 length = eof_pos + protocol->package_eof_len;
-                protocol->onPackage(object, remaining_data, length);
+                protocol->onPackage(conn, remaining_data, length);
+                if (!conn->active)
+                {
+                    return SW_OK;
+                }
                 //swNotice("#[2] count=%d, remaining_length=%d, length=%d", count, remaining_length, length);
                 remaining_data += length;
                 remaining_length -= length;

