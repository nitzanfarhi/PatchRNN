commit de9963f0f2dfad128b26ae7bf6005f5948416a6d
Author: Patrick McHardy <kaber@trash.net>
Date:   Mon Feb 14 17:35:07 2011 +0100

    netfilter: nf_iterate: fix incorrect RCU usage
    
    As noticed by Eric, nf_iterate doesn't use RCU correctly by
    accessing the prev pointer of a RCU protected list element when
    a verdict of NF_REPEAT is issued.
    
    Fix by jumping backwards to the hook invocation directly instead
    of loading the previous list element before continuing the list
    iteration.
    
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Acked-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Patrick McHardy <kaber@trash.net>

diff --git a/net/netfilter/core.c b/net/netfilter/core.c
index 32fcbe290c04..4aa614b8a96a 100644
--- a/net/netfilter/core.c
+++ b/net/netfilter/core.c
@@ -133,6 +133,7 @@ unsigned int nf_iterate(struct list_head *head,
 
 		/* Optimization: we don't need to hold module
 		   reference here, since function can't sleep. --RR */
+repeat:
 		verdict = elem->hook(hook, skb, indev, outdev, okfn);
 		if (verdict != NF_ACCEPT) {
 #ifdef CONFIG_NETFILTER_DEBUG
@@ -145,7 +146,7 @@ unsigned int nf_iterate(struct list_head *head,
 #endif
 			if (verdict != NF_REPEAT)
 				return verdict;
-			*i = (*i)->prev;
+			goto repeat;
 		}
 	}
 	return NF_ACCEPT;

