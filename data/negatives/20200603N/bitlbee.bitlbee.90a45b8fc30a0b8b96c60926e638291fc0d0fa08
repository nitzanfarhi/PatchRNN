commit 90a45b8fc30a0b8b96c60926e638291fc0d0fa08
Author: dequis <dx@dxzone.com.ar>
Date:   Sun Dec 25 23:17:28 2016 -0300

    Fix some clang static analyzer warnings
    
    Nothing interesting.

diff --git a/lib/ftutil.c b/lib/ftutil.c
index 7606890f..3c79ba1f 100644
--- a/lib/ftutil.c
+++ b/lib/ftutil.c
@@ -41,7 +41,7 @@ int ft_listen(struct sockaddr_storage *saddr_ptr, char *host, char *port, int co
 	int fd, gret, saddrlen;
 	struct addrinfo hints, *rp;
 	socklen_t ssize = sizeof(struct sockaddr_storage);
-	struct sockaddr_storage saddrs, *saddr = &saddrs;
+	struct sockaddr_storage saddrs = {0}, *saddr = &saddrs;
 	static char errmsg[1024];
 	char *ftlisten = global.conf->ft_listen;
 
diff --git a/protocols/jabber/s5bytestream.c b/protocols/jabber/s5bytestream.c
index 577840f1..9c79de8e 100644
--- a/protocols/jabber/s5bytestream.c
+++ b/protocols/jabber/s5bytestream.c
@@ -499,7 +499,7 @@ gboolean jabber_bs_recv_handshake(gpointer data, gint fd, b_input_condition cond
 	}
 	case BS_PHASE_REPLY:
 	{
-		struct socks5_message socks5_reply;
+		struct socks5_message socks5_reply = {0};
 		int ret;
 
 		if (!(ret = jabber_bs_peek(bt, &socks5_reply, sizeof(struct socks5_message)))) {
@@ -1045,7 +1045,7 @@ gboolean jabber_bs_send_handshake(gpointer data, gint fd, b_input_condition cond
 			unsigned char ver;
 			unsigned char nmethods;
 			unsigned char method;
-		} socks5_hello;
+		} socks5_hello = {0};
 
 		if (!(ret = jabber_bs_peek(bt, &socks5_hello, sizeof(socks5_hello)))) {
 			return FALSE;
@@ -1090,7 +1090,7 @@ gboolean jabber_bs_send_handshake(gpointer data, gint fd, b_input_condition cond
 	}
 	case BS_PHASE_REQUEST:
 	{
-		struct socks5_message socks5_connect;
+		struct socks5_message socks5_connect = {0};
 		int msgsize = sizeof(struct socks5_message);
 		int ret;
 
diff --git a/set.c b/set.c
index 91dd7bd5..ec18b82d 100644
--- a/set.c
+++ b/set.c
@@ -164,7 +164,7 @@ int set_setstr(set_t **head, const char *key, char *value)
 
 	/* If there's a default setting and it's equal to what we're trying to
 	   set, stick with s->value = NULL. Otherwise, remember the setting. */
-	if (!s->def || (strcmp(nv, s->def) != 0)) {
+	if (!s->def || (g_strcmp0(nv, s->def) != 0)) {
 		s->value = g_strdup(nv);
 	}
 
diff --git a/storage.c b/storage.c
index ab7ba44b..9e0f8345 100644
--- a/storage.c
+++ b/storage.c
@@ -73,7 +73,7 @@ GList *storage_init(const char *primary, char **migrate)
 	register_storage_backend(&storage_xml);
 
 	storage = storage_init_single(primary);
-	if (storage == NULL && storage->save == NULL) {
+	if (storage == NULL || storage->save == NULL) {
 		return NULL;
 	}
 

