commit 61ee8be68b9cbbaed74a1127c1381d502b2bd286
Author: Daniel Morissette <dmorissette@mapgears.com>
Date:   Wed Nov 20 21:22:32 2002 +0000

    Added msOWSGetSchemasLocation() for use by both WFS and WMS Map Context
    
    
    git-svn-id: http://svn.osgeo.org/mapserver/trunk@1601 7532c77e-422f-0410-93f4-f0b67bdd69e2

diff --git a/mapcontext.c b/mapcontext.c
index 3b97cae5..b211869e 100644
--- a/mapcontext.c
+++ b/mapcontext.c
@@ -29,6 +29,9 @@
  * DEALINGS IN THE SOFTWARE.
  **********************************************************************
  * $Log$
+ * Revision 1.18  2002/11/20 21:22:32  dan
+ * Added msOWSGetSchemasLocation() for use by both WFS and WMS Map Context
+ *
  * Revision 1.17  2002/11/20 19:08:55  julien
  * Support onlineResource of version 0.1.2
  *
@@ -420,11 +423,6 @@ int msLoadMapContext(mapObj *map, char *filename)
   if(map->web.metadata == NULL)
       map->web.metadata =  msCreateHashTable();
 
-  // Schema Location
-  msGetMapContextXMLHashValueDecode(psMapContext, 
-                                    "xsi:noNamespaceSchemaLocation",
-                                    &map->web.metadata,"wfs_schemas_location");
-
   // Projection
   pszValue = (char*)CPLGetXMLValue(psMapContext, 
                                    "General.BoundingBox.SRS", NULL);
@@ -1041,7 +1039,7 @@ int msLoadMapContext(mapObj *map, char *filename)
 int msSaveMapContext(mapObj *map, char *filename)
 {
 #if defined(USE_WMS_LYR)
-  const char * version, *schemas_location, *value;
+  const char * version, *value;
   char * tabspace=NULL, *pszValue, *pszChar,*pszSLD=NULL,*pszURL,*pszSLD2=NULL;
   char *pszFormat, *pszStyle, *pszCurrent, *pszStyleItem, *pszLegendURL;
   char *pszLegendItem, *pszEncodedVal;
@@ -1071,19 +1069,12 @@ int msSaveMapContext(mapObj *map, char *filename)
          "<?xml version='1.0' encoding=\"ISO-8859-1\" standalone=\"no\" ?>\n");
 
   // set the WMS_Viewer_Context information
-  // Use value of "wfs_schemas_location", otherwise return ".."
-  schemas_location = msLookupHashTable(map->web.metadata, 
-                                       "wfs_schemas_location");
 
   fprintf( stream, "<WMS_Viewer_Context version=\"%s\"", version );
   fprintf( stream, " xmlns:xlink=\"http://www.w3.org/TR/xlink\"" );
   fprintf( stream, " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"");
-  if (schemas_location == NULL)
-      fprintf( stream," xsi:noNamespaceSchemaLocation=\"%s\">\n", "..");
-  else
-      fprintf( stream," xsi:noNamespaceSchemaLocation=\"%s\">\n",
-               msEncodeHTMLEntities(schemas_location) );
-      
+  fprintf( stream, " xsi:noNamespaceSchemaLocation=\"%s\">\n", 
+           msOWSGetSchemasLocation(map) );
 
   // set the General information
   fprintf( stream, "  <General>\n" );
diff --git a/mapows.c b/mapows.c
index a043998d..1206a389 100644
--- a/mapows.c
+++ b/mapows.c
@@ -5,6 +5,9 @@
  *
  **********************************************************************
  * $Log$
+ * Revision 1.8  2002/11/20 21:22:32  dan
+ * Added msOWSGetSchemasLocation() for use by both WFS and WMS Map Context
+ *
  * Revision 1.7  2002/11/20 17:17:21  julien
  * Support version 0.1.2 of MapContext
  * Remove warning from tags
@@ -188,6 +191,28 @@ char * msOWSGetOnlineResource(mapObj *map, const char *metadata_name)
 }
 
 
+/* msOWSGetSchemasLocation()
+**
+** schemas location is the root of the web tree where all WFS-related 
+** schemas can be found on this server.  These URLs must exist in order 
+** to validate xml.
+**
+** Use value of "ows_schemas_location" metadata, if not set then
+** return ".." as a default
+*/
+const char *msOWSGetSchemasLocation(mapObj *map)
+{
+    const char *schemas_location;
+
+    schemas_location = msLookupHashTable(map->web.metadata, 
+                                         "ows_schemas_location");
+    if (schemas_location == NULL)
+        schemas_location = "..";
+
+    return schemas_location;
+}
+
+
 
 /*
 ** msOWSPrintMetadata()
diff --git a/mapows.h b/mapows.h
index c3b628df..f41bc9ec 100644
--- a/mapows.h
+++ b/mapows.h
@@ -5,6 +5,9 @@
  *
  **********************************************************************
  * $Log$
+ * Revision 1.7  2002/11/20 21:22:32  dan
+ * Added msOWSGetSchemasLocation() for use by both WFS and WMS Map Context
+ *
  * Revision 1.6  2002/11/20 17:17:21  julien
  * Support version 0.1.2 of MapContext
  * Remove warning from tags
@@ -41,6 +44,7 @@
 int msOWSDispatch(mapObj *map, char **names, char **values, int numentries); 
 int msOWSMakeAllLayersUnique(mapObj *map);
 char *msOWSGetOnlineResource(mapObj *map, const char *metadata_name);
+const char *msOWSGetSchemasLocation(mapObj *map);
 
 // OWS_NOERR and OWS_WARN passed as action_if_not_found to printMetadata()
 #define OWS_NOERR   0
diff --git a/mapwfs.c b/mapwfs.c
index d54ccb35..838d6fdf 100644
--- a/mapwfs.c
+++ b/mapwfs.c
@@ -29,6 +29,9 @@
  * DEALINGS IN THE SOFTWARE.
  **********************************************************************
  * $Log$
+ * Revision 1.8  2002/11/20 21:22:32  dan
+ * Added msOWSGetSchemasLocation() for use by both WFS and WMS Map Context
+ *
  * Revision 1.7  2002/10/28 20:31:21  dan
  * New support for WMS Map Context (from Julien)
  *
@@ -158,26 +161,6 @@ static int msWFSIsLayerSupported(layerObj *lp)
 }
 
 
-/* msWFSGetSchemasLocation()
-**
-** schemas location is the root of the web tree where all WFS-related 
-** schemas can be found on this server.  These URLs must exist in order 
-** to validate xml.
-**
-** Use value of "wfs_schemas_location", otherwise return ".."
-*/
-static const char *msWFSGetSchemasLocation(mapObj *map)
-{
-    const char *schemas_location;
-
-    schemas_location = msLookupHashTable(map->web.metadata, 
-                                         "wfs_schemas_location");
-    if (schemas_location == NULL)
-        schemas_location = "..";
-
-    return schemas_location;
-}
-
 /* msWFSGetGeomElementName()
 **
 ** Return the Element name for the geometry in this layer, look for
@@ -478,7 +461,7 @@ int msWFSDescribeFeatureType(mapObj *map, const char *wmtver,
     printf("\n"
            "  <import namespace=\"http://www.opengis.net/gml\" \n"
            "          schemaLocation=\"%s/gml/2.1/feature.xsd\" />\n",
-           msWFSGetSchemasLocation(map));
+           msOWSGetSchemasLocation(map));
 
     /*
     ** loop through layers 
@@ -717,7 +700,7 @@ int msWFSGetFeature(mapObj *map, const char *wmtver,
            "   xsi:schemaLocation=\"http://www.opengis.net/wfs %s/wfs/%s/WFS-basic.xsd \n"
            "                       %s %sSERVICE=WFS&amp;VERSION=%s&amp;REQUEST=DescribeFeatureType&amp;TYPENAME=%s\">\n", 
            myns_uri, 
-           msWFSGetSchemasLocation(map), wmtver, 
+           msOWSGetSchemasLocation(map), wmtver, 
            myns_uri, script_url_encoded, wmtver, typename);
 
 

