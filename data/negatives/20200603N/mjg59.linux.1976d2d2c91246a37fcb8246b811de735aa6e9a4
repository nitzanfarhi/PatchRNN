commit 1976d2d2c91246a37fcb8246b811de735aa6e9a4
Author: Takuya Yoshikawa <yoshikawa.takuya@oss.ntt.co.jp>
Date:   Fri Feb 5 17:52:46 2010 +0900

    KVM: Remove redundant reading of rax on OUT instructions
    
    kvm_emulate_pio() and complete_pio() both read out the
    RAX register value and copy it to a place into which
    the value read out from the port will be copied later.
    
    This patch removes this redundancy.
    
    /*** snippet from arch/x86/kvm/x86.c ***/
    int complete_pio(struct kvm_vcpu *vcpu)
    {
            ...
            if (!io->string) {
                    if (io->in) {
                            val = kvm_register_read(vcpu, VCPU_REGS_RAX);
                            memcpy(&val, vcpu->arch.pio_data, io->size);
                            kvm_register_write(vcpu, VCPU_REGS_RAX, val);
                    }
            ...
    
    Signed-off-by: Takuya Yoshikawa <yoshikawa.takuya@oss.ntt.co.jp>
    Signed-off-by: Avi Kivity <avi@redhat.com>

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index c91007f81660..bd3161c6daed 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -3551,8 +3551,10 @@ int kvm_emulate_pio(struct kvm_vcpu *vcpu, int in, int size, unsigned port)
 	trace_kvm_pio(vcpu->run->io.direction == KVM_EXIT_IO_OUT, port,
 		      size, 1);
 
-	val = kvm_register_read(vcpu, VCPU_REGS_RAX);
-	memcpy(vcpu->arch.pio_data, &val, 4);
+	if (!vcpu->arch.pio.in) {
+		val = kvm_register_read(vcpu, VCPU_REGS_RAX);
+		memcpy(vcpu->arch.pio_data, &val, 4);
+	}
 
 	if (!kernel_pio(vcpu, vcpu->arch.pio_data)) {
 		complete_pio(vcpu);

