commit 5b5c2dbd3c9bcfa89fba9709c12ecc0a445c6e40
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Fri Aug 26 16:00:10 2016 +1000

    xfs: simple btree query range should look right if LE lookup fails
    
    If the initial LOOKUP_LE in the simple query range fails to find
    anything, we should attempt to increment the btree cursor to see
    if there actually /are/ records for what we're trying to find.
    Without this patch, a bnobt range query of (0, $agsize) returns
    no results because the leftmost record never has a startblock
    of zero.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Dave Chinner <david@fromorbit.com>

diff --git a/fs/xfs/libxfs/xfs_btree.c b/fs/xfs/libxfs/xfs_btree.c
index b70d9f918156..08569792fe20 100644
--- a/fs/xfs/libxfs/xfs_btree.c
+++ b/fs/xfs/libxfs/xfs_btree.c
@@ -4558,6 +4558,13 @@ xfs_btree_simple_query_range(
 	if (error)
 		goto out;
 
+	/* Nothing?  See if there's anything to the right. */
+	if (!stat) {
+		error = xfs_btree_increment(cur, 0, &stat);
+		if (error)
+			goto out;
+	}
+
 	while (stat) {
 		/* Find the record. */
 		error = xfs_btree_get_rec(cur, &recp, &stat);

