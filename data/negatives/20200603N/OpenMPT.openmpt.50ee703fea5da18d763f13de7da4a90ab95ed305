commit 50ee703fea5da18d763f13de7da4a90ab95ed305
Author: JÃ¶rn Heusipp <manxorist@users.sourceforge.net>
Date:   Mon Jun 29 09:13:25 2015 +0000

    [Ref] Detect Windows 10.
    
    git-svn-id: https://source.openmpt.org/svn/openmpt/trunk/OpenMPT@5380 56274372-70c3-4bfc-bfc3-4c3a0b034d27

diff --git a/common/mptOS.cpp b/common/mptOS.cpp
index 5d6d9de2a..3c92836d4 100644
--- a/common/mptOS.cpp
+++ b/common/mptOS.cpp
@@ -53,7 +53,9 @@ static bool SystemIsNT = true;
 
 // Initialize to used SDK version
 static uint32 SystemVersion =
-#if NTDDI_VERSION >= 0x06030000 // NTDDI_WINBLUE
+#if NTDDI_VERSION >= 0x0A000000 // NTDDI_WIN10
+	mpt::Windows::Version::Win10
+#elif NTDDI_VERSION >= 0x06030000 // NTDDI_WINBLUE
 	mpt::Windows::Version::Win81
 #elif NTDDI_VERSION >= 0x06020000 // NTDDI_WIN8
 	mpt::Windows::Version::Win8
@@ -140,7 +142,8 @@ mpt::ustring VersionToString(uint16 version)
 {
 	mpt::ustring result;
 	std::vector<std::pair<uint16, mpt::ustring> > versionMap;
-	versionMap.push_back(std::make_pair(static_cast<uint16>(mpt::Windows::Version::WinNewer), MPT_USTRING("Windows 8.1 (or newer)")));
+	versionMap.push_back(std::make_pair(static_cast<uint16>(mpt::Windows::Version::WinNewer), MPT_USTRING("Windows 10 (or newer)")));
+	versionMap.push_back(std::make_pair(static_cast<uint16>(mpt::Windows::Version::Win10), MPT_USTRING("Windows 10")));
 	versionMap.push_back(std::make_pair(static_cast<uint16>(mpt::Windows::Version::Win81), MPT_USTRING("Windows 8.1")));
 	versionMap.push_back(std::make_pair(static_cast<uint16>(mpt::Windows::Version::Win8), MPT_USTRING("Windows 8")));
 	versionMap.push_back(std::make_pair(static_cast<uint16>(mpt::Windows::Version::Win7), MPT_USTRING("Windows 7")));
@@ -193,7 +196,10 @@ mpt::ustring GetName()
 	{
 		if(mpt::Windows::Version::IsAtLeast(mpt::Windows::Version::WinNewer))
 		{
-			result += MPT_USTRING("Windows 8.1 (or newer)");
+			result += MPT_USTRING("Windows 10 (or newer)");
+		} else if(mpt::Windows::Version::IsAtLeast(mpt::Windows::Version::Win10))
+		{
+			result += MPT_USTRING("Windows 10");
 		} else if(mpt::Windows::Version::IsAtLeast(mpt::Windows::Version::Win81))
 		{
 			result += MPT_USTRING("Windows 8.1");
diff --git a/common/mptOS.h b/common/mptOS.h
index 47ea1750c..f902ecb72 100644
--- a/common/mptOS.h
+++ b/common/mptOS.h
@@ -37,8 +37,9 @@ enum Number
 	Win7     = 0x0601,
 	Win8     = 0x0602,
 	Win81    = 0x0603,
+	Win10    = 0x0a00,
 
-	WinNewer = Win81 + 1
+	WinNewer = Win10 + 1
 
 };
 

