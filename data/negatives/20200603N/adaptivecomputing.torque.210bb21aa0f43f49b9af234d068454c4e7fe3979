commit 210bb21aa0f43f49b9af234d068454c4e7fe3979
Author: glen <glen@8f940c70-5916-0410-ac46-d1fa2fa6ea29>
Date:   Tue Sep 9 02:07:05 2008 +0000

    add new torque.cfg parameter called RERUNNABLEBYDEFAULT that allows adming to specify that the default value of the rerunnable attribute should be false (RERUNNABLEBYDEFAULT  false).  If this parameter is not found and set to false then the default value remains the same (setting rerunnable to true if -r is not specified to qsub)

diff --git a/src/cmds/qsub.c b/src/cmds/qsub.c
index e6606d95d..210160ce2 100644
--- a/src/cmds/qsub.c
+++ b/src/cmds/qsub.c
@@ -155,6 +155,7 @@ char xauth_path[256];
 char default_ckpt[256];
 
 int validate_path = 1;
+int rerunnable_by_default = 1;
 int interactivechild = 0;
 int x11child = 0;
 
@@ -3784,8 +3785,12 @@ set_opt_defaults(void)
     set_attr(&attrib, ATTR_p, "0");
 
   if (r_opt == FALSE)
-    set_attr(&attrib, ATTR_r, "TRUE");
-
+    {
+    if (rerunnable_by_default)
+      set_attr(&attrib, ATTR_r, "TRUE");
+    else
+      set_attr(&attrib, ATTR_r, "FALSE");
+    }
   return;
   }  /* END set_opt_defaults() */
 
@@ -4054,6 +4059,11 @@ int main(
       if (!strcasecmp(param_val, "false"))
         validate_path = 0;
       }
+    if ((param_val = get_param("RERUNNABLEBYDEFAULT", config_buf)) != NULL)
+      {
+      if (!strcasecmp(param_val, "false"))
+        rerunnable_by_default = 0;
+      }
     }    /* END if (load_config(config_buf,sizeof(config_buf)) == 0) */
 
   /* NOTE:  load config before processing opts since config may modify how opts are handled */
diff --git a/src/resmom/checkpoint.c b/src/resmom/checkpoint.c
index a2cd2817b..ceda58241 100644
--- a/src/resmom/checkpoint.c
+++ b/src/resmom/checkpoint.c
@@ -964,7 +964,7 @@ int start_checkpoint(
       if (!(pjob->ji_wattr[(int)JOB_ATR_checkpoint_dir].at_flags & ATR_VFLAG_SET))
         {
         /* No dir specified, use the default job checkpoint directory 
-           ie, /var/spool/torque/checkpoint/42.host.domain.CK */
+           e.g.  /var/spool/torque/checkpoint/42.host.domain.CK */
 
         strcpy(name_buffer,path_checkpoint);
         strcat(name_buffer,pjob->ji_qs.ji_fileprefix);
@@ -1000,7 +1000,7 @@ int start_checkpoint(
 
     /* Set the address of a function to execute in scan_for_terminated */
 
-    pjob->ji_mompost = (int (*)())post_checkpoint; /* XXX BAD routine can move on restart */
+    pjob->ji_mompost = (int (*)())post_checkpoint; 
 
     if (preq)
       free_br(preq); /* child will send reply */

