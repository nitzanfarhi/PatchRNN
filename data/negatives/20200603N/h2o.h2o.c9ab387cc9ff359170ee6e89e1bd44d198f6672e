commit c9ab387cc9ff359170ee6e89e1bd44d198f6672e
Author: Kazuho Oku <kazuhooku@gmail.com>
Date:   Tue Jan 19 13:12:37 2016 +0900

    refuse to start when a duplicate host entry has been found

diff --git a/lib/core/config.c b/lib/core/config.c
index 368a4ff2..76430ed2 100644
--- a/lib/core/config.c
+++ b/lib/core/config.c
@@ -126,14 +126,27 @@ h2o_pathconf_t *h2o_config_register_path(h2o_hostconf_t *hostconf, const char *p
 
 h2o_hostconf_t *h2o_config_register_host(h2o_globalconf_t *config, h2o_iovec_t host, uint16_t port)
 {
-    h2o_hostconf_t *hostconf;
+    h2o_hostconf_t *hostconf = NULL;
+    h2o_iovec_t host_lc;
 
     assert(host.len != 0);
 
+    /* convert hostname to lowercase */
+    host_lc = h2o_strdup(NULL, host.base, host.len);
+    h2o_strtolower(host_lc.base, host_lc.len);
+
+    { /* return NULL if given authority is already registered */
+        h2o_hostconf_t **p;
+        for (p = config->hosts; *p != NULL; ++p)
+            if (h2o_memis((*p)->authority.host.base, (*p)->authority.host.len, host_lc.base, host_lc.len) &&
+                (*p)->authority.port == port)
+                goto Exit;
+    }
+
     /* create hostconf */
     hostconf = create_hostconf(config);
-    hostconf->authority.host = h2o_strdup(NULL, host.base, host.len);
-    h2o_strtolower(hostconf->authority.host.base, hostconf->authority.host.len);
+    hostconf->authority.host = host_lc;
+    host_lc = (h2o_iovec_t){};
     hostconf->authority.port = port;
     if (hostconf->authority.port == 65535) {
         hostconf->authority.hostport = hostconf->authority.host;
@@ -151,6 +164,8 @@ h2o_hostconf_t *h2o_config_register_host(h2o_globalconf_t *config, h2o_iovec_t h
     /* append to the list */
     h2o_append_to_null_terminated_list((void *)&config->hosts, hostconf);
 
+Exit:
+    free(host_lc.base);
     return hostconf;
 }
 
diff --git a/lib/core/configurator.c b/lib/core/configurator.c
index e9b09fc8..1f84d8ba 100644
--- a/lib/core/configurator.c
+++ b/lib/core/configurator.c
@@ -271,7 +271,10 @@ static int on_config_hosts(h2o_configurator_command_t *cmd, h2o_configurator_con
             return -1;
         }
         h2o_configurator_context_t host_ctx = *ctx;
-        host_ctx.hostconf = h2o_config_register_host(host_ctx.globalconf, hostname, port);
+        if ((host_ctx.hostconf = h2o_config_register_host(host_ctx.globalconf, hostname, port)) == NULL) {
+            h2o_configurator_errprintf(cmd, key, "duplicate host entry");
+            return -1;
+        }
         host_ctx.mimemap = &host_ctx.hostconf->mimemap;
         host_ctx.parent = ctx;
         if (h2o_configurator_apply_commands(&host_ctx, value, H2O_CONFIGURATOR_FLAG_HOST, NULL) != 0)

