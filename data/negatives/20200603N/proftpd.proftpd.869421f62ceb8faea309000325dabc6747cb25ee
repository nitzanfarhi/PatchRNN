commit 869421f62ceb8faea309000325dabc6747cb25ee
Author: castaglia <castaglia>
Date:   Mon Jun 22 18:10:32 2009 +0000

    The bug in pr_fsio_futimes(), where we were not calling the proper futimes()
    handler, occurred in pr_fsio_faccess() as well; it would result in another
    segfault, if the registered FS did not provide a faccess() handler.

diff --git a/src/fsio.c b/src/fsio.c
index e5b9a0b7c..49811e6af 100644
--- a/src/fsio.c
+++ b/src/fsio.c
@@ -25,7 +25,7 @@
  */
 
 /* ProFTPD virtual/modular file-system support
- * $Id: fsio.c,v 1.80 2009-06-22 17:48:39 castaglia Exp $
+ * $Id: fsio.c,v 1.81 2009-06-22 18:10:32 castaglia Exp $
  */
 
 #include "conf.h"
@@ -3202,7 +3202,7 @@ int pr_fsio_faccess(pr_fh_t *fh, int mode, uid_t uid, gid_t gid,
 
   pr_trace_msg(trace_channel, 8, "using %s faccess() for path '%s'",
     fs->fs_name, fh->fh_path);
-  return (fh->fh_fs->faccess)(fh, mode, uid, gid, suppl_gids);
+  return (fs->faccess)(fh, mode, uid, gid, suppl_gids);
 }
 
 int pr_fsio_utimes(const char *path, struct timeval *tvs) {

