commit 4a148ba988988b9c400ad0f2cbccc155289b954b
Author: Eric Paris <eparis@redhat.com>
Date:   Mon Jul 13 15:56:55 2009 -0400

    inotify: check filename before dropping repeat events
    
    inotify drops events if the last event on the queue is the same as the
    current event.  But it does 2 things wrong.  First it is comparing old->inode
    with new->inode.  But after an event if put on the queue the ->inode is no
    longer allowed to be used.  It's possible between the last event and this new
    event the inode could be reused and we would falsely match the inode's memory
    address between two differing events.
    
    The second problem is that when a file is removed fsnotify is passed the
    negative dentry for the removed object rather than the postive dentry from
    immediately before the removal.  This mean the (broken) inotify tail drop code
    was matching the NULL ->inode of differing events.
    
    The fix is to check the file name which is stored with events when doing the
    tail drop instead of wrongly checking the address of the stored ->inode.
    
    Reported-by: Scott James Remnant <scott@ubuntu.com>
    Signed-off-by: Eric Paris <eparis@redhat.com>

diff --git a/fs/notify/notification.c b/fs/notify/notification.c
index 959b73e756fd..69391fe8efb1 100644
--- a/fs/notify/notification.c
+++ b/fs/notify/notification.c
@@ -136,10 +136,15 @@ static bool event_compare(struct fsnotify_event *old, struct fsnotify_event *new
 {
 	if ((old->mask == new->mask) &&
 	    (old->to_tell == new->to_tell) &&
-	    (old->data_type == new->data_type)) {
+	    (old->data_type == new->data_type) &&
+	    (old->name_len == new->name_len)) {
 		switch (old->data_type) {
 		case (FSNOTIFY_EVENT_INODE):
-			if (old->inode == new->inode)
+			/* remember, after old was put on the wait_q we aren't
+			 * allowed to look at the inode any more, only thing
+			 * left to check was if the file_name is the same */
+			if (old->name_len &&
+			    !strcmp(old->file_name, new->file_name))
 				return true;
 			break;
 		case (FSNOTIFY_EVENT_PATH):

