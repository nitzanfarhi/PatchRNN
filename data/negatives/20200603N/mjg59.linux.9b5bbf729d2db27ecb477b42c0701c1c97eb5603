commit 9b5bbf729d2db27ecb477b42c0701c1c97eb5603
Author: Chris Metcalf <cmetcalf@tilera.com>
Date:   Fri Aug 9 15:42:56 2013 -0400

    tile: correct r1 value during syscall tracing
    
    The r1 value is set based on the r0 value as we return to user space.
    So tracing tools won't automatically see the right value.  Fix this by
    generating the correct r1 value in do_syscall_trace_exit() rather
    than trying to tamper with the hot path in syscall return.
    
    Signed-off-by: Chris Metcalf <cmetcalf@tilera.com>

diff --git a/arch/tile/kernel/ptrace.c b/arch/tile/kernel/ptrace.c
index bac187498d61..de98c6ddf136 100644
--- a/arch/tile/kernel/ptrace.c
+++ b/arch/tile/kernel/ptrace.c
@@ -265,6 +265,21 @@ int do_syscall_trace_enter(struct pt_regs *regs)
 
 void do_syscall_trace_exit(struct pt_regs *regs)
 {
+	long errno;
+
+	/*
+	 * The standard tile calling convention returns the value (or negative
+	 * errno) in r0, and zero (or positive errno) in r1.
+	 * It saves a couple of cycles on the hot path to do this work in
+	 * registers only as we return, rather than updating the in-memory
+	 * struct ptregs.
+	 */
+	errno = (long) regs->regs[0];
+	if (errno < 0 && errno > -4096)
+		regs->regs[1] = -errno;
+	else
+		regs->regs[1] = 0;
+
 	if (test_thread_flag(TIF_SYSCALL_TRACE))
 		tracehook_report_syscall_exit(regs, 0);
 

