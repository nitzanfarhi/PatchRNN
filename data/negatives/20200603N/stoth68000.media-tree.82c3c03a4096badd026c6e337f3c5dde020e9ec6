commit 82c3c03a4096badd026c6e337f3c5dde020e9ec6
Author: Srivatsa Vaddagiri <vatsa@in.ibm.com>
Date:   Thu Mar 16 23:04:06 2006 -0800

    [PATCH] x86: check for online cpus before bringing them up
    
    Bryce reported a bug wherein offlining CPU0 (on x86 box) and then
    subsequently onlining it resulted in a lockup.
    
    On x86, CPU0 is never offlined.  The subsequent attempt to online CPU0
    doesn't take that into account.  It actually tries to bootup the already
    booted CPU.  Following patch fixes the problem (as acknowledged by Bryce).
    Please consider for inclusion in 2.6.16.
    
    Check if cpu is already online.
    
    Signed-off-by: Srivatsa Vaddagiri <vatsa@in.ibm.com>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/arch/i386/kernel/smpboot.c b/arch/i386/kernel/smpboot.c
index eba7f53f8b4a..7007e1783797 100644
--- a/arch/i386/kernel/smpboot.c
+++ b/arch/i386/kernel/smpboot.c
@@ -1029,6 +1029,16 @@ int __devinit smp_prepare_cpu(int cpu)
 	int	apicid, ret;
 
 	lock_cpu_hotplug();
+
+	/*
+	 * On x86, CPU0 is never offlined.  Trying to bring up an
+	 * already-booted CPU will hang.  So check for that case.
+	 */
+	if (cpu_online(cpu)) {
+		ret = -EINVAL;
+		goto exit;
+	}
+
 	apicid = x86_cpu_to_apicid[cpu];
 	if (apicid == BAD_APICID) {
 		ret = -ENODEV;

