commit d536ecd07632258199b71b6e1b7f669a8adfab79
Author: Jean Le Feuvre <jeanlf@users.sourceforge.net>
Date:   Tue Jun 7 11:04:11 2011 +0000

    Misc fixes for auto-stereo mode (navigation and 3D cam)
    
    
    git-svn-id: http://svn.code.sf.net/p/gpac/code/trunk/gpac@3253 63c20433-aa62-49bd-875c-5a186b69a8fb

diff --git a/src/compositor/compositor.c b/src/compositor/compositor.c
index e38908e06..adaf0e45b 100644
--- a/src/compositor/compositor.c
+++ b/src/compositor/compositor.c
@@ -1244,11 +1244,16 @@ void gf_sc_reload_config(GF_Compositor *compositor)
 	
 #ifdef GF_SR_USE_DEPTH
 	sOpt = gf_cfg_get_key(compositor->user->config, "Compositor", "AutoStereoCalibration");
-	compositor->auto_calibration = (sOpt && !strcmp(sOpt, "yes")) ? 1 : 0;
+	compositor->auto_calibration = (!sOpt || !strcmp(sOpt, "yes")) ? 1 : 0;
 
 	sOpt = gf_cfg_get_key(compositor->user->config, "Compositor", "DisplayDepth");
 	compositor->display_depth = sOpt ? (!strcmp(sOpt, "auto") ? -1 : atoi(sOpt)) : 0;
 
+	/*if auto-stereo mode, turn on display depth by default*/
+	if (compositor->visual->autostereo_type && !compositor->display_depth) {
+		compositor->display_depth = -1;
+	}
+
 	if (!compositor->video_out->view_distance) {
 		sOpt = gf_cfg_get_key(compositor->user->config, "Compositor", "ViewDistance");
 		compositor->video_out->view_distance = FLT2FIX( sOpt ? (Float) atof(sOpt) : 50.0f ); 
diff --git a/src/compositor/compositor_3d.c b/src/compositor/compositor_3d.c
index f4e2371b4..d1c8f277f 100644
--- a/src/compositor/compositor_3d.c
+++ b/src/compositor/compositor_3d.c
@@ -188,10 +188,11 @@ void compositor_3d_draw_bitmap(Drawable *stack, DrawAspect2D *asp, GF_TraverseSt
 	GF_Compositor *compositor = tr_state->visual->compositor;
 	Bool use_texture = !compositor->bitmap_use_pixels;
 
-
-	if (!asp->fill_texture) return;
+	if (!asp->fill_texture) 
+		return;
 	txh = asp->fill_texture;
-	if (!txh || !txh->tx_io || !txh->width || !txh->height) return;
+	if (!txh || !txh->tx_io || !txh->width || !txh->height) 
+		return;
 	
 	if (((txh->pixelformat==GF_PIXEL_RGBD) || (txh->pixelformat==GF_PIXEL_YUVD))) {
 		if (compositor->depth_gl_type) {
@@ -201,7 +202,7 @@ void compositor_3d_draw_bitmap(Drawable *stack, DrawAspect2D *asp, GF_TraverseSt
 		} else {
 			use_texture = 1;
 		}
-	}
+	}	
 
 	alpha = GF_COL_A(asp->fill_color);
 	/*THIS IS A HACK, will not work when setting filled=0, transparency and XLineProps*/
diff --git a/src/compositor/mpeg4_grouping_2d.c b/src/compositor/mpeg4_grouping_2d.c
index 2758f5ab9..dfd09e500 100644
--- a/src/compositor/mpeg4_grouping_2d.c
+++ b/src/compositor/mpeg4_grouping_2d.c
@@ -397,6 +397,7 @@ static void TraverseOrderedGroup(GF_Node *node, void *rs, Bool is_destroy)
 	}
 
 	if (!og->order.count || (tr_state->traversing_mode==TRAVERSE_GET_BOUNDS) ) {
+		gf_node_dirty_clear(node, GF_SG_NODE_DIRTY);
 		group_2d_traverse(node, (GroupingNode2D*)stack, tr_state);
 		return;
 	}
diff --git a/src/compositor/navigate.c b/src/compositor/navigate.c
index a4a6a40de..d4cf4b1a0 100644
--- a/src/compositor/navigate.c
+++ b/src/compositor/navigate.c
@@ -220,6 +220,8 @@ Bool gf_sc_fit_world_to_screen(GF_Compositor *compositor)
 		gf_mx_v(compositor->mx);
 		/*empty world ...*/
 		if (tr_state.bbox.radius==-1) return 1;
+		/*2D world with 3D camera forced*/
+		if (tr_state.bounds.width&&tr_state.bounds.height) return 1;
 		return 0;
 	}
 
diff --git a/src/compositor/visual_manager_3d.c b/src/compositor/visual_manager_3d.c
index a92a20810..9f537ef25 100644
--- a/src/compositor/visual_manager_3d.c
+++ b/src/compositor/visual_manager_3d.c
@@ -496,8 +496,9 @@ void visual_3d_init_draw(GF_TraverseState *tr_state, u32 layer_type)
 				}
 				
 #ifdef GF_SR_USE_DEPTH
-				if (tr_state->visual->compositor->display_depth)
+/*				if (tr_state->visual->compositor->display_depth)
 					tr_state->camera->navigate_mode = GF_NAVIGATE_NONE;
+*/
 #endif
 			} else {
 				tr_state->camera->navigate_mode = GF_NAVIGATE_NONE;
diff --git a/src/compositor/visual_manager_3d_gl.c b/src/compositor/visual_manager_3d_gl.c
index dd092b4e3..2d2987da2 100644
--- a/src/compositor/visual_manager_3d_gl.c
+++ b/src/compositor/visual_manager_3d_gl.c
@@ -2459,6 +2459,7 @@ restart:
 		return;
 	}
 
+	glColor3f(1.0, 0.0, 0.0);
 	/*render using vertex array*/
 	if (!stack->mesh) {
 		stack->mesh = new_mesh();
@@ -2516,7 +2517,6 @@ restart:
 	VS3D_DrawMeshIntern(tr_state, stack->mesh);
 	visual_3d_disable_texture(tr_state);
 
-
 #endif //GPAC_USE_OGL_ES
 
 }

