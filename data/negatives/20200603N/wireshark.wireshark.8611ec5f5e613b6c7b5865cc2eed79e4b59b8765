commit 8611ec5f5e613b6c7b5865cc2eed79e4b59b8765
Author: Anders Broman <anders.broman@ericsson.com>
Date:   Sun Mar 29 12:07:30 2009 +0000

    More size_t casts.
    
    svn path=/trunk/; revision=27879

diff --git a/epan/dissectors/packet-bittorrent.c b/epan/dissectors/packet-bittorrent.c
index 6ccc96d06b..59bf37cfa7 100644
--- a/epan/dissectors/packet-bittorrent.c
+++ b/epan/dissectors/packet-bittorrent.c
@@ -535,7 +535,7 @@ static void dissect_bittorrent_message (tvbuff_t *tvb, packet_info *pinfo, proto
 	  for ( i=0 ; amp_messages[i].name ; i++ ) {
 	    if (strlen(amp_messages[i].name)==typelen &&
 		tvb_memeql(tvb, offset + BITTORRENT_HEADER_LENGTH + 4,
-			   amp_messages[i].name, strlen(amp_messages[i].name))==0) {
+			   amp_messages[i].name, (int)strlen(amp_messages[i].name))==0) {
 
 	      prio = tvb_get_guint8(tvb, offset + BITTORRENT_HEADER_LENGTH + 4 + typelen);
 	      if (prio==0 || prio==1 || prio==2) {
@@ -701,11 +701,11 @@ static void dissect_bittorrent_welcome (tvbuff_t *tvb, packet_info *pinfo _U_, p
    if(decode_client_information) {
       for(i = 0; peer_id[i].id[0] != '\0'; ++i)
       {
-	 if(tvb_memeql(tvb, offset, peer_id[i].id, strlen(peer_id[i].id)) == 0) {
+	 if(tvb_memeql(tvb, offset, peer_id[i].id, (int)strlen(peer_id[i].id)) == 0) {
             /* The version number is 4 numeric characters for the
                client ids beginning with '-' and 3 characters for the
                rest. */
-	    version = tvb_get_ephemeral_string(tvb, offset + strlen(peer_id[i].id),
+	    version = tvb_get_ephemeral_string(tvb, offset + (int)strlen(peer_id[i].id),
 	       (peer_id[i].id[0] == '-') ? 4 : 3);
             proto_tree_add_text(tree, tvb, offset, 20, "Client is %s v%s",
                peer_id[i].name,
diff --git a/epan/dissectors/packet-giop.c b/epan/dissectors/packet-giop.c
index c2ab00653e..cb5ceb900c 100644
--- a/epan/dissectors/packet-giop.c
+++ b/epan/dissectors/packet-giop.c
@@ -1018,7 +1018,7 @@ static guint32 giop_hash_module_hash(gconstpointer v) {
    *
    */
 
-  len = strlen(key->module);
+  len = (int)strlen(key->module);
 
   for (i=0; i<len; i++) {
     val += (guint8) key->module[i];
@@ -1279,7 +1279,7 @@ static int giop_getline(FILE *fp, gchar *line, int maxlen) {
   if (fgets(line,maxlen,fp) == NULL)
     return 0;
   else
-    return strlen(line);
+    return (int)strlen(line);
 
 }
 
diff --git a/epan/dissectors/packet-gsm_sms.c b/epan/dissectors/packet-gsm_sms.c
index 1521ee7d15..efbe76ac7f 100644
--- a/epan/dissectors/packet-gsm_sms.c
+++ b/epan/dissectors/packet-gsm_sms.c
@@ -1566,7 +1566,7 @@ gsm_sms_char_7bit_unpack(unsigned int offset, unsigned int in_length, unsigned i
 	}
     }
 
-    return out_num - output;
+    return (int)(out_num - output);
 }
 
 #define GN_CHAR_ALPHABET_SIZE 128
@@ -2713,7 +2713,7 @@ dis_field_ud(tvbuff_t *tvb, proto_tree *tree, guint32 offset, guint32 length, gb
 						utf8_text = g_convert_with_iconv(sm_tvb->real_data, sm_tvb->reported_length , cd , NULL , NULL , &l_conv_error);
 						if(!l_conv_error)
 						{
-							len_sms = strlen(utf8_text);
+							len_sms = (int)strlen(utf8_text);
 							num_labels = len_sms / MAX_SMS_FRAG_LEN;
 							num_labels += len_sms % MAX_SMS_FRAG_LEN ? 1 : 0;
 							for(i = 0; i < num_labels;i++)
diff --git a/epan/dissectors/packet-sdp.c b/epan/dissectors/packet-sdp.c
index f69df573de..b83f93a5f8 100644
--- a/epan/dissectors/packet-sdp.c
+++ b/epan/dissectors/packet-sdp.c
@@ -1259,7 +1259,7 @@ static const value_string h264_packetization_mode_vals[] =
  * TODO: Make this a more generic routine to dissect fmtp parameters depending on media types
  */
 static void
-decode_sdp_fmtp(proto_tree *tree, tvbuff_t *tvb, packet_info *pinfo, gint offset, gint tokenlen, guint8 *mime_type){
+decode_sdp_fmtp(proto_tree *tree, tvbuff_t *tvb, packet_info *pinfo, gint offset, gint tokenlen, char *mime_type){
   gint next_offset;
   gint end_offset;
   guint8 *field_name;
@@ -1291,7 +1291,7 @@ decode_sdp_fmtp(proto_tree *tree, tvbuff_t *tvb, packet_info *pinfo, gint offset
   offset = next_offset;
 
   /* Dissect the MPEG4 profile-level-id parameter if present */
-  if (mime_type != NULL && g_ascii_strcasecmp((char*)mime_type, "MP4V-ES") == 0) {
+  if (mime_type != NULL && g_ascii_strcasecmp(mime_type, "MP4V-ES") == 0) {
     if (strcmp((char*)field_name, "profile-level-id") == 0) {
       offset++;
       tokenlen = end_offset - offset;
@@ -1312,7 +1312,7 @@ decode_sdp_fmtp(proto_tree *tree, tvbuff_t *tvb, packet_info *pinfo, gint offset
   }
 
   /* Dissect the H263-2000 profile parameter if present */
-  if ((mime_type != NULL && g_ascii_strcasecmp((char*)mime_type, "H263-2000") == 0)||(mime_type != NULL && g_ascii_strcasecmp((char*)mime_type, "H263-1998") == 0)) {
+  if ((mime_type != NULL && g_ascii_strcasecmp(mime_type, "H263-2000") == 0)||(mime_type != NULL && g_ascii_strcasecmp(mime_type, "H263-1998") == 0)) {
     if (strcmp((char*)field_name, "profile") == 0) {
       offset++;
       tokenlen = end_offset - offset;
@@ -1623,7 +1623,7 @@ static void dissect_sdp_media_attribute(tvbuff_t *tvb, packet_info *pinfo, proto
 			  fmtp_tree = proto_item_add_subtree(fmtp_item, ett_sdp_fmtp);
 
 			  decode_sdp_fmtp(fmtp_tree, tvb, pinfo, offset, tokenlen,
-                      (guint8 *)transport_info->encoding_name);
+                      transport_info->encoding_name);
 
 			  /* Move offset past "; " and onto firts char */	
 			  offset = next_offset + 1;

