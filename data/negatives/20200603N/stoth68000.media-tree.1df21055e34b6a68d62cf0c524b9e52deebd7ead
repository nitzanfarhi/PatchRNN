commit 1df21055e34b6a68d62cf0c524b9e52deebd7ead
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jul 9 18:51:58 2007 +0200

    sched: add init_idle_bootup_task()
    
    add the init_idle_bootup_task() callback to the bootup thread,
    unused at the moment. (CFS will use it to switch the scheduling
    class of the boot thread to the idle class)
    
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

diff --git a/include/linux/sched.h b/include/linux/sched.h
index 4b912e753ca0..61a111fe2b7a 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -195,6 +195,7 @@ struct task_struct;
 extern void sched_init(void);
 extern void sched_init_smp(void);
 extern void init_idle(struct task_struct *idle, int cpu);
+extern void init_idle_bootup_task(struct task_struct *idle);
 
 extern cpumask_t nohz_cpu_mask;
 #if defined(CONFIG_SMP) && defined(CONFIG_NO_HZ)
diff --git a/init/main.c b/init/main.c
index eb8bdbae4fc7..0eb1c7463fe4 100644
--- a/init/main.c
+++ b/init/main.c
@@ -436,15 +436,16 @@ static void noinline __init_refok rest_init(void)
 
 	/*
 	 * The boot idle thread must execute schedule()
-	 * at least one to get things moving:
+	 * at least once to get things moving:
 	 */
+	init_idle_bootup_task(current);
 	preempt_enable_no_resched();
 	schedule();
 	preempt_disable();
 
 	/* Call into cpu_idle with preempt disabled */
 	cpu_idle();
-} 
+}
 
 /* Check for early params. */
 static int __init do_early_param(char *param, char *val)
diff --git a/kernel/sched.c b/kernel/sched.c
index 7090982350d3..ac4d26241d1e 100644
--- a/kernel/sched.c
+++ b/kernel/sched.c
@@ -5018,6 +5018,11 @@ void show_state_filter(unsigned long state_filter)
 		debug_show_all_locks();
 }
 
+void __cpuinit init_idle_bootup_task(struct task_struct *idle)
+{
+	/* nothing yet */
+}
+
 /**
  * init_idle - set up an idle thread for a given CPU
  * @idle: task in question

