commit fcf13c05fa8396e94477150a387108c727205642
Author: knielson <knielson@adaptivecomputing.com>
Date:   Tue Feb 16 18:45:40 2016 -0700

    TRQ-3486 pinning of place={core|thread} not as expected
    
    Fixed a problem where we were exiting the tasks_for_node
    loop in spread_place_pu too soon.

diff --git a/src/lib/Libutils/machine.cpp b/src/lib/Libutils/machine.cpp
index 4899405d3..6839fc565 100644
--- a/src/lib/Libutils/machine.cpp
+++ b/src/lib/Libutils/machine.cpp
@@ -663,6 +663,7 @@ int Machine::spread_place_pu(
   int   pu_per_task = 0;
   int   lprocs_per_task = r.getExecutionSlots();
   int   tasks_placed = 0;
+  int   tasks_for_this_node = tasks_for_node;
 
   if (pu_per_task > this->totalCores)
     return(PBSE_IVALREQ);
@@ -690,7 +691,7 @@ int Machine::spread_place_pu(
 
     for (unsigned int j = 0; j < this->totalSockets; j++)
       {
-      if (this->sockets[j].how_many_tasks_fit(r, master.place_type) < tasks_for_node)
+      if (this->sockets[j].how_many_tasks_fit(r, master.place_type) < tasks_for_this_node)
         continue;
 
       bool fits = false;
@@ -735,6 +736,7 @@ int Machine::spread_place_pu(
     task_alloc.set_host(hostname);
     r.record_allocation(task_alloc);
     master.add_allocation(task_alloc);
+    tasks_for_this_node--;
     }
 
   if (tasks_placed != tasks_for_node)

