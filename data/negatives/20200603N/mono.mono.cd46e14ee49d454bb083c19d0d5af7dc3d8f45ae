commit cd46e14ee49d454bb083c19d0d5af7dc3d8f45ae
Author: Alex RÃ¸nne Petersen <alpeters@microsoft.com>
Date:   Tue Nov 28 02:40:07 2017 +0100

    [profiler] Use thread_exited profiler event for recording thread end events.
    
    With the revamped GC root reporting work, some GC root unregister events will
    arrive after the thread_stopped event. This will cause the thread to be
    re-added to the thread list in the profiler, and never be removed until program
    exit. This meant that if such a thread had actually exited and a new thread
    would reuse its thread ID, that new thread would fail to add itself to the
    thread list, leading to failures like this one:
    
        init_thread: failed to insert thread 0x70000b761000 in log_profiler.profiler_thread_list, found = true
    
    By using the new thread_exited event, we remove the thread from the thread list
    after these GC root unregister events have arrived, thereby ensuring that the
    thread won't be incorrectly 'resurrected'.

diff --git a/mono/profiler/log.c b/mono/profiler/log.c
index 8a96303d752..cc754a12153 100644
--- a/mono/profiler/log.c
+++ b/mono/profiler/log.c
@@ -4689,7 +4689,7 @@ mono_profiler_init_log (const char *desc)
 	mono_profiler_set_gc_event_callback (handle, gc_event);
 
 	mono_profiler_set_thread_started_callback (handle, thread_start);
-	mono_profiler_set_thread_stopped_callback (handle, thread_end);
+	mono_profiler_set_thread_exited_callback (handle, thread_end);
 	mono_profiler_set_thread_name_callback (handle, thread_name);
 
 	mono_profiler_set_domain_loaded_callback (handle, domain_loaded);

