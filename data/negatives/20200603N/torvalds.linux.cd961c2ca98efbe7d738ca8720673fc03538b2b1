commit cd961c2ca98efbe7d738ca8720673fc03538b2b1
Author: Eric Dumazet <eric.dumazet@gmail.com>
Date:   Wed Feb 15 20:28:25 2012 +0000

    netem: fix dequeue
    
    commit 50612537e9 (netem: fix classful handling) added two errors in
    netem_dequeue()
    
    1) After checking skb at the head of tfifo queue for time constraints,
       it dequeues tail skb, thus adding unwanted reordering.
    
    2) qdisc stats are updated twice per packet
       (one when packet dequeued from tfifo, once when delivered)
    
    Signed-off-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/sched/sch_netem.c b/net/sched/sch_netem.c
index e83d61ca78ca..5da548fa7ae9 100644
--- a/net/sched/sch_netem.c
+++ b/net/sched/sch_netem.c
@@ -501,9 +501,8 @@ static struct sk_buff *netem_dequeue(struct Qdisc *sch)
 
 		/* if more time remaining? */
 		if (cb->time_to_send <= psched_get_time()) {
-			skb = qdisc_dequeue_tail(sch);
-			if (unlikely(!skb))
-				goto qdisc_dequeue;
+			__skb_unlink(skb, &sch->q);
+			sch->qstats.backlog -= qdisc_pkt_len(skb);
 
 #ifdef CONFIG_NET_CLS_ACT
 			/*
@@ -539,7 +538,6 @@ static struct sk_buff *netem_dequeue(struct Qdisc *sch)
 		qdisc_watchdog_schedule(&q->watchdog, cb->time_to_send);
 	}
 
-qdisc_dequeue:
 	if (q->qdisc) {
 		skb = q->qdisc->ops->dequeue(q->qdisc);
 		if (skb)

