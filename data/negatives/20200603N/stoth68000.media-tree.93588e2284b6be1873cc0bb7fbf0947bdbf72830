commit 93588e2284b6be1873cc0bb7fbf0947bdbf72830
Author: NeilBrown <neilb@suse.de>
Date:   Tue Nov 15 00:09:12 2005 -0800

    [PATCH] md: make md threads interruptible again
    
    Despite the fact that md threads don't need to be signalled, and won't
    respond to signals anyway, we need to have an 'interruptible' wait, else
    they stay in 'D' state and add to the load average.
    
    (akpm: the signal_pending() test is unneeded - we'll fix that up in the next
    round.  For now, leave it there because that's how the code used to be).
    
    Signed-off-by: Neil Brown <neilb@suse.de>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index a9f032e341cb..f3fed662f32e 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -3437,10 +3437,19 @@ static int md_thread(void * arg)
 	allow_signal(SIGKILL);
 	while (!kthread_should_stop()) {
 
-		wait_event_timeout(thread->wqueue,
-				   test_bit(THREAD_WAKEUP, &thread->flags)
-				   || kthread_should_stop(),
-				   thread->timeout);
+		/* We need to wait INTERRUPTIBLE so that
+		 * we don't add to the load-average.
+		 * That means we need to be sure no signals are
+		 * pending
+		 */
+		if (signal_pending(current))
+			flush_signals(current);
+
+		wait_event_interruptible_timeout
+			(thread->wqueue,
+			 test_bit(THREAD_WAKEUP, &thread->flags)
+			 || kthread_should_stop(),
+			 thread->timeout);
 		try_to_freeze();
 
 		clear_bit(THREAD_WAKEUP, &thread->flags);

