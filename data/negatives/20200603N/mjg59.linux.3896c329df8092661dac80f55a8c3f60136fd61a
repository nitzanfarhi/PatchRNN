commit 3896c329df8092661dac80f55a8c3f60136fd61a
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Jun 24 14:48:19 2014 +0200

    x86, tsc: Fix cpufreq lockup
    
    Mauro reported that his AMD X2 using the powernow-k8 cpufreq driver
    locked up when doing cpu hotplug.
    
    Because we called set_cyc2ns_scale() from the time_cpufreq_notifier()
    unconditionally, it gets called multiple times for each freq change,
    instead of only the once, when the tsc_khz value actually changes.
    
    Because it gets called more than once, we run out of cyc2ns data slots
    and stall, waiting for a free one, but because we're half way offline,
    there's no consumers to free slots.
    
    By placing the call inside the condition that actually changes tsc_khz
    we avoid superfluous calls and avoid the problem.
    
    Reported-by: Mauro <registosites@hotmail.com>
    Tested-by: Mauro <registosites@hotmail.com>
    Fixes: 20d1c86a5776 ("sched/clock, x86: Rewrite cyc2ns() to avoid the need to disable IRQs")
    Cc: <stable@vger.kernel.org>
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Cc: Viresh Kumar <viresh.kumar@linaro.org>
    Cc: Bin Gao <bin.gao@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Stefani Seibold <stefani@seibold.net>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/arch/x86/kernel/tsc.c b/arch/x86/kernel/tsc.c
index 57e5ce126d5a..ea030319b321 100644
--- a/arch/x86/kernel/tsc.c
+++ b/arch/x86/kernel/tsc.c
@@ -920,9 +920,9 @@ static int time_cpufreq_notifier(struct notifier_block *nb, unsigned long val,
 		tsc_khz = cpufreq_scale(tsc_khz_ref, ref_freq, freq->new);
 		if (!(freq->flags & CPUFREQ_CONST_LOOPS))
 			mark_tsc_unstable("cpufreq changes");
-	}
 
-	set_cyc2ns_scale(tsc_khz, freq->cpu);
+		set_cyc2ns_scale(tsc_khz, freq->cpu);
+	}
 
 	return 0;
 }

