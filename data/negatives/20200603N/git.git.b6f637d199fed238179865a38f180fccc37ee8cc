commit b6f637d199fed238179865a38f180fccc37ee8cc
Author: Lars Hjemli <hjemli@gmail.com>
Date:   Sat Jul 26 12:27:25 2008 +0200

    builtin-branch: fix -v for --[no-]merged
    
    After the optimization to --[no-]merged logic, the calculation of the
    width of the longest refname to be shown might become inaccurate (since
    the matching against merge_filter is performed after adding refs to
    ref_list). This patch forces a recalculation of maxwidth when it might
    be needed.
    
    Signed-off-by: Lars Hjemli <hjemli@gmail.com>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

diff --git a/builtin-branch.c b/builtin-branch.c
index c0f1c2ede..b1a2ad7a6 100644
--- a/builtin-branch.c
+++ b/builtin-branch.c
@@ -363,6 +363,19 @@ static void print_ref_item(struct ref_item *item, int maxwidth, int verbose,
 	}
 }
 
+static int calc_maxwidth(struct ref_list *refs)
+{
+	int i, l, w = 0;
+	for (i = 0; i < refs->index; i++) {
+		if (!matches_merge_filter(refs->list[i].commit))
+			continue;
+		l = strlen(refs->list[i].name);
+		if (l > w)
+			w = l;
+	}
+	return w;
+}
+
 static void print_ref_list(int kinds, int detached, int verbose, int abbrev, struct commit_list *with_commit)
 {
 	int i;
@@ -383,6 +396,8 @@ static void print_ref_list(int kinds, int detached, int verbose, int abbrev, str
 				   (struct object *) filter, "");
 		ref_list.revs.limited = 1;
 		prepare_revision_walk(&ref_list.revs);
+		if (verbose)
+			ref_list.maxwidth = calc_maxwidth(&ref_list);
 	}
 
 	qsort(ref_list.list, ref_list.index, sizeof(struct ref_item), ref_cmp);

