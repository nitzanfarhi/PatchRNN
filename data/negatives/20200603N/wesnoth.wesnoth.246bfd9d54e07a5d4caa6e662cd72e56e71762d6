commit 246bfd9d54e07a5d4caa6e662cd72e56e71762d6
Author: JÃ¶rg Hinrichs <joerg.hinrichs@alice-dsl.de>
Date:   Sun Mar 18 19:04:16 2007 +0000

    Fixes bug #8547
    
    (side turn events and income handled differently for network/local sides)

diff --git a/src/play_controller.cpp b/src/play_controller.cpp
index 4d0bff1b60..3186217447 100644
--- a/src/play_controller.cpp
+++ b/src/play_controller.cpp
@@ -321,35 +321,23 @@ void play_controller::init_side(const unsigned int team_index, bool is_replay){
 	player_number_str << player_number_;
 	gamestate_.set_variable("side_number",player_number_str.str());
 
+	/*  
+		normally, events must not be actively fired through replays, because they have been 
+		recorded previously and therefore will get executed anyway. Firing them in the normal
+		code would lead to double execution.
+		However, the following events are different in that they need to be executed _now_ 
+		(before calculation of income and healing) or we will risk OOS errors if we manipulate 
+		these informations inside the events and in the replay have a different order of execution.
+	*/
 	if(first_turn_) {
-		if(!current_team.is_network()) {
-			if(!is_replay) {
-				recorder.add_event("turn 1");
-				recorder.add_event("new turn");
-				recorder.add_event("side turn");
-				/* events must not be actively fired through replays, because they have been recorded 
-				   previously and therefore will get executed anyway. If we put this outside the "if", 
-				   those events will be fired two times
-				*/
-				game_events::fire("turn 1");
-				game_events::fire("new turn");
-				game_events::fire("side turn");
-			}
-		}
+		game_events::fire("turn 1");
+		game_events::fire("new turn");
+		game_events::fire("side turn");
 		first_turn_ = false;
 	} else
 	//fire side turn event only if real side change occurs not counting changes from void to a side
 	if (team_index != (first_player_ - 1) || status_.turn() > start_turn_) {
-		if(!current_team.is_network()) {
-			if(!is_replay) {
-				recorder.add_event("side turn");
-				/* events must not be actively fired through replays, because they have been recorded 
-				   previously and therefore will get executed anyway. If we put this outside the "if", 
-				   those events will be fired two times
-				*/
-				game_events::fire("side turn");
-			}
-		}
+		game_events::fire("side turn");
 	}
 
 	//we want to work out if units for this player should get healed, and the
diff --git a/src/replay.cpp b/src/replay.cpp
index 49a474ecb6..1fb31d4b01 100644
--- a/src/replay.cpp
+++ b/src/replay.cpp
@@ -1055,7 +1055,12 @@ bool do_replay(display& disp, const gamemap& map, const game_data& gameinfo,
 			for(config::child_list::const_iterator v = child->get_children("set_variable").begin(); v != child->get_children("set_variable").end(); ++v) {
 				state_of_game.set_variable((**v)["name"],(**v)["value"]);
 			}
-			game_events::fire((*child)["raise"]);
+			const std::string event = (*child)["raise"];
+			//exclude these events here, because in a replay proper time of execution can't be
+			//established and therefore we fire those events inside play_controller::init_side
+			if ((event != "side turn") && (event != "turn 1") && (event != "new_turn")){
+				game_events::fire(event);
+			}
 		} else {
 			if(! cfg->child("checksum")) {
 				replay::throw_error("unrecognized action\n");

