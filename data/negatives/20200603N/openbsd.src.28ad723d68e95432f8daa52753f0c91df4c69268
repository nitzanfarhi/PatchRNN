commit 28ad723d68e95432f8daa52753f0c91df4c69268
Author: drahn <drahn@openbsd.org>
Date:   Thu Feb 5 13:42:19 2004 +0000

    xlint compatible headers. (non-gcc)

diff --git a/sys/arch/arm/include/ansi.h b/sys/arch/arm/include/ansi.h
index 5ddad94e459..4cf2f8954b4 100644
--- a/sys/arch/arm/include/ansi.h
+++ b/sys/arch/arm/include/ansi.h
@@ -1,4 +1,4 @@
-/*	$OpenBSD: ansi.h,v 1.3 2004/02/03 20:23:17 drahn Exp $	*/
+/*	$OpenBSD: ansi.h,v 1.4 2004/02/05 13:42:19 drahn Exp $	*/
 /*	$NetBSD: ansi.h,v 1.4 2003/03/02 22:18:17 tshiozak Exp $	*/
 
 /*
@@ -53,7 +53,11 @@
 #define	_BSD_SIZE_T_		unsigned int	/* sizeof() */
 #define	_BSD_SSIZE_T_		int		/* byte count or error */
 #define	_BSD_TIME_T_		int		/* time() */
+#if defined(__GNUC__) && __GNUC__ >= 3
 #define	_BSD_VA_LIST_		__builtin_va_list	/* va_list */
+#else
+#define _BSD_VA_LIST_   char * 
+#endif
 #define	_BSD_CLOCKID_T_		int		/* clockid_t */
 #define	_BSD_TIMER_T_		int		/* timer_t */
 #define	_BSD_SUSECONDS_T_	int		/* suseconds_t */
diff --git a/sys/arch/arm/include/stdarg.h b/sys/arch/arm/include/stdarg.h
new file mode 100644
index 00000000000..9aa9c09e96d
--- /dev/null
+++ b/sys/arch/arm/include/stdarg.h
@@ -0,0 +1,75 @@
+/*	$NetBSD: stdarg.h,v 1.7 2003/08/07 16:26:53 agc Exp $	*/
+
+/*
+ * Copyright (c) 1991, 1993
+ *	The Regents of the University of California.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. Neither the name of the University nor the names of its contributors
+ *    may be used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ *
+ *	from: @(#)stdarg.h	8.1 (Berkeley) 6/10/93
+ */
+
+#ifndef _ARM32_STDARG_H_
+#define	_ARM32_STDARG_H_
+
+#include <machine/ansi.h>
+
+typedef _BSD_VA_LIST_	va_list;
+#ifdef __lint__
+#define __builtin_next_arg(t)		((t) ? 0 : 0)
+#define	__builtin_stdarg_start(a, l)	((a) = ((l) ? 0 : 0))
+#define	__builtin_va_arg(a, t)		((a) ? 0 : 0)
+#define	__builtin_va_end		/* nothing */
+#define	__builtin_va_copy(d, s)		((d) = (s))
+#endif
+
+#if __GNUC_PREREQ__(2, 96)
+#define	va_start(ap, last)	__builtin_stdarg_start((ap), (last))
+#define	va_arg			__builtin_va_arg
+#define	va_end			__builtin_va_end
+#define	__va_copy(dest, src)	__builtin_va_copy((dest), (src))
+#else
+#define	__va_size(type) \
+	(((sizeof(type) + sizeof(long) - 1) / sizeof(long)) * sizeof(long))
+
+#define	va_start(ap, last) \
+	((ap) = (va_list)__builtin_next_arg(last))
+
+#define	va_arg(ap, type) \
+	((type *)(ap += sizeof(type)))[-1]
+
+#define	va_end(ap)
+
+#define	__va_copy(dest, src)	((dest) = (src))
+
+#endif /* __GNUC_PREREQ__(2, 96) */
+
+#if !defined(_ANSI_SOURCE) &&						\
+    (defined(_ISOC99_SOURCE) || (__STDC_VERSION__ - 0) >= 199901L ||	\
+     defined(_NETBSD_SOURCE))
+#define	va_copy(dest, src)	__va_copy((dest), (src))
+#endif
+
+#endif /* !_ARM32_STDARG_H_ */
diff --git a/sys/arch/cats/include/stdarg.h b/sys/arch/cats/include/stdarg.h
new file mode 100644
index 00000000000..ecec78f756b
--- /dev/null
+++ b/sys/arch/cats/include/stdarg.h
@@ -0,0 +1,3 @@
+/*	$NetBSD: stdarg.h,v 1.3 2001/11/25 15:55:58 thorpej Exp $	*/
+
+#include <arm/stdarg.h>

