commit 9a7604c03ed2103c196662476bc4226a0f308477
Author: claudio <claudio@openbsd.org>
Date:   Wed Jul 8 15:01:50 2009 +0000

    Add the same routing domain assignments and checks into the not so used
    protocols as it is currently in if_ethersubr.c. OK reyk@

diff --git a/sys/net/if_atmsubr.c b/sys/net/if_atmsubr.c
index c9e9f9e28e1..0c9b76975ea 100644
--- a/sys/net/if_atmsubr.c
+++ b/sys/net/if_atmsubr.c
@@ -1,4 +1,4 @@
-/*      $OpenBSD: if_atmsubr.c,v 1.27 2008/05/07 13:45:35 dlg Exp $       */
+/*      $OpenBSD: if_atmsubr.c,v 1.28 2009/07/08 15:01:50 claudio Exp $       */
 
 /*
  *
@@ -145,6 +145,15 @@ atm_output(ifp, m0, dst, rt0)
 	if ((ifp->if_flags & (IFF_UP|IFF_RUNNING)) != (IFF_UP|IFF_RUNNING))
 		senderr(ENETDOWN);
 
+#ifdef DIAGNOSTIC
+	if (ifp->if_rdomain != m->m_pkthdr.rdomain) {
+		printf("%s: trying to send packet on wrong domain. "
+		    "%d vs. %d, AF %d\n", ifp->if_xname, ifp->if_rdomain,
+		    m->m_pkthdr.rdomain, dst->sa_family);
+		senderr(ENETDOWN);
+	}
+#endif
+
 	/*
 	 * check route
 	 */
@@ -269,6 +278,10 @@ atm_input(ifp, ah, m, rxhand)
 		m_freem(m);
 		return;
 	}
+
+	/* mark incomming routing domain */
+	m->m_pkthdr.rdomain = ifp->if_rdomain;
+
 	ifp->if_ibytes += m->m_pkthdr.len;
 
 	if (rxhand) {
diff --git a/sys/net/if_fddisubr.c b/sys/net/if_fddisubr.c
index a43177f5089..f1c4d775d9f 100644
--- a/sys/net/if_fddisubr.c
+++ b/sys/net/if_fddisubr.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: if_fddisubr.c,v 1.55 2009/06/05 00:05:21 claudio Exp $	*/
+/*	$OpenBSD: if_fddisubr.c,v 1.56 2009/07/08 15:01:50 claudio Exp $	*/
 /*	$NetBSD: if_fddisubr.c,v 1.5 1996/05/07 23:20:21 christos Exp $	*/
 
 /*
@@ -148,6 +148,15 @@ fddi_output(ifp0, m0, dst, rt0)
 	short mflags;
 	struct ifnet *ifp = ifp0;
 
+#ifdef DIAGNOSTIC
+	if (ifp->if_rdomain != m->m_pkthdr.rdomain) {
+		printf("%s: trying to send packet on wrong domain. "
+		    "%d vs. %d, AF %d\n", ifp->if_xname, ifp->if_rdomain,
+		    m->m_pkthdr.rdomain, dst->sa_family);
+		senderr(ENETDOWN);
+	}
+#endif
+
 #if NCARP > 0
 	if (ifp->if_type == IFT_CARP) {
 		struct ifaddr *ifa;
@@ -383,6 +392,9 @@ fddi_input(ifp, fh, m)
 		m_freem(m);
 		return;
 	}
+	/* mark incomming routing domain */
+	m->m_pkthdr.rdomain = ifp->if_rdomain;
+
 	ifp->if_ibytes += m->m_pkthdr.len + sizeof (*fh);
 	if (bcmp((caddr_t)fddibroadcastaddr, (caddr_t)fh->fddi_dhost,
 	    sizeof(fddibroadcastaddr)) == 0)
diff --git a/sys/net/if_ppp.c b/sys/net/if_ppp.c
index 1caa5c66354..607c9948a92 100644
--- a/sys/net/if_ppp.c
+++ b/sys/net/if_ppp.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: if_ppp.c,v 1.53 2009/03/15 19:40:41 miod Exp $	*/
+/*	$OpenBSD: if_ppp.c,v 1.54 2009/07/08 15:01:50 claudio Exp $	*/
 /*	$NetBSD: if_ppp.c,v 1.39 1997/05/17 21:11:59 christos Exp $	*/
 
 /*
@@ -727,6 +727,16 @@ pppoutput(ifp, m0, dst, rtp)
 	goto bad;
     }
 
+#ifdef DIAGNOSTIC
+    if (ifp->if_rdomain != m0->m_pkthdr.rdomain) {
+	printf("%s: trying to send packet on wrong domain. "
+	    "%d vs. %d, AF %d\n", ifp->if_xname, ifp->if_rdomain,
+	    m0->m_pkthdr.rdomain, dst->sa_family);
+	error = ENETDOWN;
+	goto bad;
+    }
+#endif
+
     /*
      * Compute PPP header.
      */
@@ -1466,6 +1476,9 @@ ppp_inproc(sc, m)
     m->m_pkthdr.len = ilen;
     m->m_pkthdr.rcvif = ifp;
 
+    /* mark incomming routing domain */
+    m->m_pkthdr.rdomain = ifp->if_rdomain;
+
     if ((proto & 0x8000) == 0) {
 #if NBPFILTER > 0
 	/*
diff --git a/sys/net/if_sl.c b/sys/net/if_sl.c
index 35966944a24..200e0c210ae 100644
--- a/sys/net/if_sl.c
+++ b/sys/net/if_sl.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: if_sl.c,v 1.36 2008/10/22 23:04:45 mpf Exp $	*/
+/*	$OpenBSD: if_sl.c,v 1.37 2009/07/08 15:01:50 claudio Exp $	*/
 /*	$NetBSD: if_sl.c,v 1.39.4.1 1996/06/02 16:26:31 thorpej Exp $	*/
 
 /*
@@ -429,6 +429,16 @@ sloutput(ifp, m, dst, rtp)
 		return (EAFNOSUPPORT);
 	}
 
+#ifdef DIAGNOSTIC
+	if (ifp->if_rdomain != m->m_pkthdr.rdomain) {
+		printf("%s: trying to send packet on wrong domain. "
+		    "%d vs. %d, AF %d\n", ifp->if_xname, ifp->if_rdomain,
+		    m->m_pkthdr.rdomain, dst->sa_family);
+		m_freem(m);
+		return (ENETDOWN);
+	}
+#endif
+
 	if (sc->sc_ttyp == NULL) {
 		m_freem(m);
 		return (ENETDOWN);	/* sort of */
@@ -747,6 +757,9 @@ slinput(c, tp)
 	}
 	c &= TTY_CHARMASK;
 
+	/* mark incomming routing domain */
+	m->m_pkthdr.rdomain = sc->sc_if.if_rdomain;
+
 	++sc->sc_if.if_ibytes;
 
 	if (sc->sc_if.if_flags & IFF_DEBUG) {

