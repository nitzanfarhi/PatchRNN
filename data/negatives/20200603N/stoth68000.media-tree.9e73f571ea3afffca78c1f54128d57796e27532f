commit 9e73f571ea3afffca78c1f54128d57796e27532f
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Fri Feb 17 09:15:52 2012 -0500

    GFS2: Ensure rindex is uptodate for fallocate
    
    This patch fixes a problem whereby gfs2_grow was failing and causing GFS2
    to assert. The problem was that when GFS2's fallocate operation tried to
    acquire an "allocation" it made sure the rindex was up to date, and if not,
    it called gfs2_rindex_update. However, if the file being fallocated was
    the rindex itself, it was already locked at that point. By calling
    gfs2_rindex_update at an earlier point in time, we bring rindex up to date
    and thereby avoid trying to lock it when the "allocation" is acquired.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>

diff --git a/fs/gfs2/file.c b/fs/gfs2/file.c
index c5fb3597f696..7f906c8b02ac 100644
--- a/fs/gfs2/file.c
+++ b/fs/gfs2/file.c
@@ -772,6 +772,11 @@ static long gfs2_fallocate(struct file *file, int mode, loff_t offset,
 	if (bytes == 0)
 		bytes = sdp->sd_sb.sb_bsize;
 
+	error = gfs2_rindex_update(sdp);
+	if (error) {
+		fs_warn(sdp, "rindex update returns %d\n", error);
+		return error;
+	}
 	gfs2_holder_init(ip->i_gl, LM_ST_EXCLUSIVE, 0, &ip->i_gh);
 	error = gfs2_glock_nq(&ip->i_gh);
 	if (unlikely(error))

