commit 8470a8e9a11b7f8310f192fbf3dec8fb705649e8
Author: Gilbert Ramirez <gram@alumni.rice.edu>
Date:   Thu Jan 11 05:51:10 2001 +0000

    Get rid of the magic "+4" and properly calculate the lineheight so
    that automatic scrolling of the hex pane continues to work, but without
    any special magic constant. This works for any size font (as long
    as the font isn't so big as to cause a line wrap), and has been
    tested on Linux and NT4. The lineheight calculation was found in the
    source code to the GtkText widget (gtk/gtktext.c in the GTK+ distribution).
    
    svn path=/trunk/; revision=2871

diff --git a/gtk/proto_draw.c b/gtk/proto_draw.c
index cf165e8ca1..fac0f8fb2b 100644
--- a/gtk/proto_draw.c
+++ b/gtk/proto_draw.c
@@ -1,7 +1,7 @@
 /* proto_draw.c
  * Routines for GTK+ packet display
  *
- * $Id: proto_draw.c,v 1.24 2001/01/02 01:32:21 guy Exp $
+ * $Id: proto_draw.c,v 1.25 2001/01/11 05:51:10 gram Exp $
  *
  * Ethereal - Network traffic analyzer
  * By Gerald Combs <gerald@zing.org>
@@ -313,10 +313,10 @@ packet_hex_print(GtkText *bv, guint8 *pd, frame_data *fd, field_info *finfo)
   if ( bstart > 0 ) {
     int lineheight, linenum;
     float scrollval;
-    linenum = bstart / BYTE_VIEW_WIDTH;
 
-    /* need to change to some way of getting that offset instead of +4 */
-    lineheight = gdk_string_height(m_b_font, "0") + 4;
+    linenum = bstart / BYTE_VIEW_WIDTH;
+    /* This is the lineheight that the GtkText widget uses when drawing text. */
+    lineheight = m_b_font->ascent + m_b_font->descent;
     scrollval = MIN(linenum * lineheight,bv->vadj->upper - bv->vadj->page_size);
 
     gtk_adjustment_set_value(bv->vadj, scrollval);

