commit ca11e233b1cc140dfffd8d57b251d542c9b8c07c
Author: Aleksey Kliger (Î»geek) <akliger@gmail.com>
Date:   Wed Jan 31 16:30:16 2018 -0500

    Fix warnings (#6685)
    
    * [checked-build] Fix warnings in g_free of g_getenv results
    
    ```
    checked-build.c:63:12: warning: passing 'const gchar *' (aka 'const char *') to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            g_free (env_string);
                                    ^~~~~~~~~~
    ../../mono/eglib/glib.h:126:20: note: passing argument to parameter 'ptr' here
    void g_free (void *ptr);
                       ^
    checked-build.c:79:12: warning: passing 'const gchar *' (aka 'const char *') to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            g_free (env_string);
                                    ^~~~~~~~~~
    ../../mono/eglib/glib.h:126:20: note: passing argument to parameter 'ptr' here
    void g_free (void *ptr);
                       ^
    ```
    
    * [boehm] Fix warning in GC_push_all call
    
    ```
    boehm-gc.c:603:17: warning: incompatible pointer types passing 'HandleChunkElem [125]' to parameter of type 'ptr_t' (aka 'char *') [-Wincompatible-pointer-types]
                            GC_push_all (cur->elems, (char*)(cur->elems + cur->size) + 1);
                                         ^~~~~~~~~~
    ../../libgc/include/private/gc_priv.h:1318:34: note: passing argument to parameter 'bottom' here
    void GC_push_all GC_PROTO((ptr_t bottom, ptr_t top));
                                     ^
    ```

diff --git a/mono/metadata/boehm-gc.c b/mono/metadata/boehm-gc.c
index 1c928479445..39eb0007520 100644
--- a/mono/metadata/boehm-gc.c
+++ b/mono/metadata/boehm-gc.c
@@ -600,7 +600,7 @@ push_handle_stack (HandleStack* stack)
 
 	while (cur) {
 		if (cur->size > 0)
-			GC_push_all (cur->elems, (char*)(cur->elems + cur->size) + 1);
+			GC_push_all ((gpointer)&cur->elems[0], (char*)(cur->elems + cur->size) + 1);
 		if (cur == last)
 			break;
 		cur = cur->next;
diff --git a/mono/utils/checked-build.c b/mono/utils/checked-build.c
index 220c320bd95..6e71b975c2f 100644
--- a/mono/utils/checked-build.c
+++ b/mono/utils/checked-build.c
@@ -38,7 +38,7 @@ mono_check_mode_enabled (MonoCheckMode query)
 	if (G_UNLIKELY (check_mode == MONO_CHECK_MODE_UNKNOWN))
 	{
 		MonoCheckMode env_check_mode = MONO_CHECK_MODE_NONE;
-		const gchar *env_string = g_getenv ("MONO_CHECK_MODE");
+		gchar *env_string = g_getenv ("MONO_CHECK_MODE");
 
 		if (env_string)
 		{
@@ -73,7 +73,7 @@ mono_check_transition_limit (void)
 {
 	static int transition_limit = -1;
 	if (transition_limit < 0) {
-		const gchar *env_string = g_getenv ("MONO_CHECK_THREAD_TRANSITION_HISTORY");
+		gchar *env_string = g_getenv ("MONO_CHECK_THREAD_TRANSITION_HISTORY");
 		if (env_string) {
 			transition_limit = atoi (env_string);
 			g_free (env_string);

