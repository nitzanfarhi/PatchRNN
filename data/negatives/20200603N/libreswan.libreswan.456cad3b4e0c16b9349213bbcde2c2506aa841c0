commit 456cad3b4e0c16b9349213bbcde2c2506aa841c0
Author: Paul Wouters <pwouters@redhat.com>
Date:   Wed Jun 3 22:04:33 2015 -0400

    PROPOSED change: find_sender()'s assumption on pacet length is wrong
    
    It tried to only when the sender was known, but find_sender()
    checks if our transmitted packet length is equal to the received
    ICMP data. But this length does not match at all, the ICMP is much
    shorter. However, it seems the memeq() of the packet_len does equal,
    so try to use that instead.
    
    When running with logging in this function, it showed that about 5 out 6
    packets would find a sender with this change. The 6th one would still
    have a sender == NULL, so this would still cause quite the DOS. See next
    commit for a proposed workaround on that.

diff --git a/programs/pluto/state.c b/programs/pluto/state.c
index 55e3745f0..cbfad36ad 100644
--- a/programs/pluto/state.c
+++ b/programs/pluto/state.c
@@ -1328,14 +1328,17 @@ struct state *find_sender(size_t packet_len, u_char *packet)
 
 			FOR_EACH_ENTRY(st, i, {
 				if (st->st_tpacket.ptr != NULL &&
-				    st->st_tpacket.len == packet_len &&
-				    memeq(st->st_tpacket.ptr, packet,
-					   packet_len))
+					/* Not true -  st->st_tpacket.len == packet_len && */
+					st->st_tpacket.len >= packet_len &&
+					memeq(st->st_tpacket.ptr, packet,
+					   packet_len)) {
+					// libreswan_log("PAUL: sender found");
 					return st;
+					}
 			});
 		}
 	}
-
+	// libreswan_log("PAUL: sender not found");
 	return NULL;
 }
 

