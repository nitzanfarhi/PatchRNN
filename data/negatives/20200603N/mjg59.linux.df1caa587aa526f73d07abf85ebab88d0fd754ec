commit df1caa587aa526f73d07abf85ebab88d0fd754ec
Author: James Hogan <james.hogan@imgtec.com>
Date:   Wed Feb 15 11:24:21 2012 -0300

    [media] rc/ir-raw: use kfifo_rec_ptr_1 instead of kfifo
    
    Raw IR events are passed to the raw event thread through a kfifo. The
    size of the event struct is 12 bytes, and space for 512 events is
    reserved in the kfifo (6144 bytes), however this is rounded down to 4096
    bytes (the next power of 2) by __kfifo_alloc().
    
    4096 bytes is not divisible by 12 therefore if the fifo fills up a third
    of a record will be written in the end of the kfifo by
    ir_raw_event_store() because the recsize of the fifo is 0 (it doesn't
    have records). When this is read by ir_raw_event_thread() a corrupted or
    partial record will be read, and in the case of a partial record the
    BUG_ON(retval != sizeof(ev)) gets hit too.
    
    According to samples/kfifo/record-example.c struct kfifo_rec_ptr_1 can
    handle records of a length between 0 and 255 bytes, so change struct
    ir_raw_event_ctrl to use that instead of struct kfifo.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/drivers/media/rc/rc-core-priv.h b/drivers/media/rc/rc-core-priv.h
index b72f8580e317..96f0a8bb39ea 100644
--- a/drivers/media/rc/rc-core-priv.h
+++ b/drivers/media/rc/rc-core-priv.h
@@ -35,7 +35,7 @@ struct ir_raw_event_ctrl {
 	struct list_head		list;		/* to keep track of raw clients */
 	struct task_struct		*thread;
 	spinlock_t			lock;
-	struct kfifo			kfifo;		/* fifo for the pulse/space durations */
+	struct kfifo_rec_ptr_1		kfifo;		/* fifo for the pulse/space durations */
 	ktime_t				last_event;	/* when last event occurred */
 	enum raw_event_type		last_type;	/* last event type */
 	struct rc_dev			*dev;		/* pointer to the parent rc_dev */

