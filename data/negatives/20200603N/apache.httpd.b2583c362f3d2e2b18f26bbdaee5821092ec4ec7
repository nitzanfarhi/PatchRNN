commit b2583c362f3d2e2b18f26bbdaee5821092ec4ec7
Author: Nick Kew <niq@apache.org>
Date:   Sun Oct 7 17:29:40 2007 +0000

    Purge tabs in r582631
    
    
    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@582655 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/modules/proxy/mod_proxy_http.c b/modules/proxy/mod_proxy_http.c
index f2a6827f5c..0f74b7933e 100644
--- a/modules/proxy/mod_proxy_http.c
+++ b/modules/proxy/mod_proxy_http.c
@@ -1494,33 +1494,33 @@ apr_status_t ap_proxy_http_process_response(apr_pool_t * p, request_rec *r,
 
         interim_response = ap_is_HTTP_INFO(r->status);
         if (interim_response) {
-	    /* RFC2616 tells us to forward this.
-	     *
-	     * OTOH, an interim response here may mean the backend
-	     * is playing sillybuggers.  The Client didn't ask for
-	     * it within the defined HTTP/1.1 mechanisms, and if
-	     * it's an extension, it may also be unsupported by us.
-	     *
-	     * There's also the possibility that changing existing
-	     * behaviour here might break something.
-	     *
-	     * So let's make it configurable.
-	     */
+            /* RFC2616 tells us to forward this.
+             *
+             * OTOH, an interim response here may mean the backend
+             * is playing sillybuggers.  The Client didn't ask for
+             * it within the defined HTTP/1.1 mechanisms, and if
+             * it's an extension, it may also be unsupported by us.
+             *
+             * There's also the possibility that changing existing
+             * behaviour here might break something.
+             *
+             * So let's make it configurable.
+             */
             const char *policy = apr_table_get(r->subprocess_env,
-			                       "proxy-interim-response");
+                                               "proxy-interim-response");
             ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, NULL,
                          "proxy: HTTP: received interim %d response",
                          r->status);
-	    if (!policy || !strcasecmp(policy, "RFC")) {
+            if (!policy || !strcasecmp(policy, "RFC")) {
                 ap_send_interim_response(r);
-	    }
-	    /* FIXME: refine this to be able to specify per-response-status
-	     * policies and maybe also add option to bail out with 502
-	     */
-	    else if (strcasecmp(policy, "Suppress")) {
+            }
+            /* FIXME: refine this to be able to specify per-response-status
+             * policies and maybe also add option to bail out with 502
+             */
+            else if (strcasecmp(policy, "Suppress")) {
                 ap_log_error(APLOG_MARK, APLOG_WARNING, 0, NULL,
                              "undefined proxy interim response policy");
-	    }
+            }
         }
         /* Moved the fixups of Date headers and those affected by
          * ProxyPassReverse/etc from here to ap_proxy_read_headers

