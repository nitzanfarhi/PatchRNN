commit 47bb4a7615c85f212f061499f04f121d6d625387
Author: Timo Sirainen <tss@iki.fi>
Date:   Tue Oct 17 14:26:43 2006 +0300

    Fixes to handling blocking passdb (ie. MySQL) failures. It ignored any
    non-password related checks, such as allow_nets.
    
    --HG--
    branch : HEAD

diff --git a/src/auth/auth-worker-client.c b/src/auth/auth-worker-client.c
index 34e86f196..3a192c38f 100644
--- a/src/auth/auth-worker-client.c
+++ b/src/auth/auth-worker-client.c
@@ -78,6 +78,9 @@ static void verify_plain_callback(enum passdb_result result,
 	struct auth_worker_client *client = request->context;
 	string_t *str;
 
+	if (request->passdb_failure && result == PASSDB_RESULT_OK)
+		result = PASSDB_RESULT_PASSWORD_MISMATCH;
+
 	str = t_str_new(64);
 	str_printfa(str, "%u\t", request->id);
 
@@ -158,6 +161,9 @@ lookup_credentials_callback(enum passdb_result result, const char *credentials,
 	struct auth_worker_client *client = request->context;
 	string_t *str;
 
+	if (request->passdb_failure && result == PASSDB_RESULT_OK)
+		result = PASSDB_RESULT_PASSWORD_MISMATCH;
+
 	str = t_str_new(64);
 	str_printfa(str, "%u\t", request->id);
 
diff --git a/src/auth/passdb-blocking.c b/src/auth/passdb-blocking.c
index d128765b3..90850ca3e 100644
--- a/src/auth/passdb-blocking.c
+++ b/src/auth/passdb-blocking.c
@@ -110,7 +110,7 @@ verify_plain_callback(struct auth_request *request, const char *reply)
 	const char *password, *scheme;
 
 	result = check_failure(request, &reply);
-	if (result >= 0) {
+	if (result > 0) {
 		if (get_pass_reply(request, reply, &password, &scheme) < 0)
 			result = PASSDB_RESULT_INTERNAL_FAILURE;
 	}
@@ -137,10 +137,10 @@ static void
 lookup_credentials_callback(struct auth_request *request, const char *reply)
 {
 	enum passdb_result result;
-	const char *password, *scheme;
+	const char *password = NULL, *scheme = NULL;
 
 	result = check_failure(request, &reply);
-	if (result >= 0) {
+	if (result > 0) {
 		if (get_pass_reply(request, reply, &password, &scheme) < 0)
 			result = PASSDB_RESULT_INTERNAL_FAILURE;
 	}

