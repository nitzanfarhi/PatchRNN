commit 37309546e053360a07e4eae497bfb0029427afae
Author: marko <>
Date:   Thu Oct 25 07:03:02 2007 +0000

    branches/zip: Cast void* pointers to byte* when doing pointer arithmetics.

diff --git a/btr/btr0cur.c b/btr/btr0cur.c
index 3bcf96c22f7..0c94f8346df 100644
--- a/btr/btr0cur.c
+++ b/btr/btr0cur.c
@@ -3915,6 +3915,7 @@ btr_store_big_rec_extern_fields(
 
 				mlog_write_string(page + FIL_PAGE_DATA
 						  + BTR_BLOB_HDR_SIZE,
+						  (const byte*)
 						  big_rec_vec->fields[i].data
 						  + big_rec_vec->fields[i].len
 						  - extern_len,
diff --git a/buf/buf0buddy.c b/buf/buf0buddy.c
index b3a0f48063e..3facd45554c 100644
--- a/buf/buf0buddy.c
+++ b/buf/buf0buddy.c
@@ -549,9 +549,9 @@ buf_buddy_relocate(
 		mach_read_from_4() calls here will only trigger bogus
 		Valgrind memcheck warnings in UNIV_DEBUG_VALGRIND builds. */
 		bpage = buf_page_hash_get(
-			mach_read_from_4(src
+			mach_read_from_4((const byte*) src
 					 + FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID),
-			mach_read_from_4(src
+			mach_read_from_4((const byte*) src
 					 + FIL_PAGE_OFFSET));
 
 		if (!bpage || bpage->zip.data != src) {
diff --git a/buf/buf0buf.c b/buf/buf0buf.c
index 53c88d1f316..6b094546b62 100644
--- a/buf/buf0buf.c
+++ b/buf/buf0buf.c
@@ -2366,7 +2366,7 @@ buf_page_init(
 			" in the hash table: %p, %p\n",
 			(ulong) space,
 			(ulong) offset,
-			hash_page, block);
+			(const void*) hash_page, (const void*) block);
 #if defined UNIV_DEBUG || defined UNIV_BUF_DEBUG
 		mutex_exit(&block->mutex);
 		mutex_exit(&buf_pool->mutex);

