commit c4ea7fd35410e02e30a49340edb3d24eebad70c1
Author: Goncalo Carvalho <glslang@gmail.com>
Date:   Fri Jan 22 20:53:12 2016 +0000

    convert negative fp numbers to hex and add static assert macro

diff --git a/binr/rax2/rax2.c b/binr/rax2/rax2.c
index 6d0e47b35..8a998782c 100644
--- a/binr/rax2/rax2.c
+++ b/binr/rax2/rax2.c
@@ -28,7 +28,15 @@ static int format_output (char mode, const char *s) {
 	}
 	switch (mode) {
 	case 'I': printf ("%"PFMT64d"\n", n); break;
-	case '0': printf ("0x%"PFMT64x"\n", n); break;
+	case '0': {
+		int len = strlen(s);
+		if (len > 0 && s[len-1]=='f') {
+			R_STATIC_ASSERT(sizeof(float) == 4)
+			float f = (float) num->fvalue;
+			ut8 *p = (ut8*)&f;
+			printf ("Fx%02x%02x%02x%02x\n", p[3], p[2], p[1], p[0]);
+		} else printf ("0x%"PFMT64x"\n", n);
+		} break;
 	case 'F': {
 		  float *f = (float*)&n;
 		printf ("%ff\n", *f);
diff --git a/libr/include/r_util.h b/libr/include/r_util.h
index 7da79a5f5..1d86e5661 100644
--- a/libr/include/r_util.h
+++ b/libr/include/r_util.h
@@ -37,6 +37,8 @@ R_LIB_VERSION_HEADER(r_util);
 #define R_REFCTR_REF(x) x->refctr++
 #define R_REFCTR_UNREF(x) if (--x->refctr<=0) x->ref_free(x)
 
+#define R_STATIC_ASSERT(x) switch (0) {case 0: case (x):;}
+
 #if 0
 typedef struct {
 	R_REFCTR_CLASS;

