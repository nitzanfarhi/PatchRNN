commit 196f1b7a387546f425df2f1fad26772e3d513aea
Author: Sergei Shtylyov <sshtylyov@ru.mvista.com>
Date:   Mon Nov 16 16:24:05 2009 +0530

    USB: musb_gadget_ep0: fix unhandled endpoint 0 IRQs, again
    
    Commit a5073b52833e4df8e16c93dc4cbb7e0c558c74a2 (musb_gadget: fix
    unhandled endpoint 0 IRQs) somehow missed its key change:
    
    "The gadget EP0 code routinely ignores an interrupt at end of
    the data phase because of musb_g_ep0_giveback() resetting the
    state machine to "idle, waiting for SETUP" phase prematurely."
    
    So, the majority of the cases of unhandled IRQs is still unfixed...
    
    Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
    Signed-off-by: Anand Gadiyar <gadiyar@ti.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/usb/musb/musb_gadget_ep0.c b/drivers/usb/musb/musb_gadget_ep0.c
index 522efb31b56b..1c44b975049c 100644
--- a/drivers/usb/musb/musb_gadget_ep0.c
+++ b/drivers/usb/musb/musb_gadget_ep0.c
@@ -199,7 +199,6 @@ service_in_request(struct musb *musb, const struct usb_ctrlrequest *ctrlrequest)
 static void musb_g_ep0_giveback(struct musb *musb, struct usb_request *req)
 {
 	musb_g_giveback(&musb->endpoints[0].ep_in, req, 0);
-	musb->ep0_state = MUSB_EP0_STAGE_SETUP;
 }
 
 /*

