commit 9d74012761bc3ee676fe43321d5699e4877fde5b
Author: Anton Khirnov <anton@khirnov.net>
Date:   Thu Dec 17 19:38:24 2015 +0100

    h264: improve behaviour with invalid reference lists
    
    Before 741b494fa8cd28a7d096349bac183893c236e3f9, when the reference list
    modification description was invalid, the code would substitute the
    corresponding reference from the initial ("default") reference list.
    After that commit, it will just return an error.
    
    Since there are apparently invalid samples in the wild that used to play
    fine with the old code, it is a good idea to re-add some sort of error
    resilience here. So, when the reference list modification results in a
    missing frame, substitute a previous reference frame for it. The
    relevant sample again decodes fine with the same output as previously.

diff --git a/libavcodec/h264_refs.c b/libavcodec/h264_refs.c
index 46b51e0bfd..877f6fe7ad 100644
--- a/libavcodec/h264_refs.c
+++ b/libavcodec/h264_refs.c
@@ -325,7 +325,10 @@ int ff_h264_decode_ref_pic_list_reordering(H264Context *h, H264SliceContext *sl)
         for (index = 0; index < sl->ref_count[list]; index++) {
             if (!sl->ref_list[list][index].parent) {
                 av_log(h->avctx, AV_LOG_ERROR, "Missing reference picture\n");
-                return -1;
+                if (index == 0 || h->avctx->err_recognition & AV_EF_EXPLODE)
+                    return AVERROR_INVALIDDATA;
+                else
+                    sl->ref_list[list][index] = sl->ref_list[list][index - 1];
             }
         }
     }

