commit e76157264da20b85698b09fa5eb8e02e515e232c
Author: Peter Maydell <peter.maydell@linaro.org>
Date:   Tue Aug 25 15:45:08 2015 +0100

    target-arm: Add CP_ACCESS_TRAP_UNCATEGORIZED_EL2, 3
    
    Some coprocessor register access functions need to be able
    to report "trap to EL3 with an 'uncategorized' syndrome";
    add the necessary CPAccessResult enum and handling for it.
    
    I don't currently know of any registers that need to trap
    to EL2 with the 'uncategorized' syndrome, but adding the
    _EL2 enum as well is trivial and fills in what would
    otherwise be an odd gap in the handling.
    
    Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
    Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>
    Message-id: 1437751263-21913-4-git-send-email-peter.maydell@linaro.org

diff --git a/target-arm/cpu.h b/target-arm/cpu.h
index 2e680da1fc..31825d34a1 100644
--- a/target-arm/cpu.h
+++ b/target-arm/cpu.h
@@ -1284,6 +1284,9 @@ typedef enum CPAccessResult {
     /* As CP_ACCESS_TRAP, but for traps directly to EL2 or EL3 */
     CP_ACCESS_TRAP_EL2 = 3,
     CP_ACCESS_TRAP_EL3 = 4,
+    /* As CP_ACCESS_UNCATEGORIZED, but for traps directly to EL2 or EL3 */
+    CP_ACCESS_TRAP_UNCATEGORIZED_EL2 = 5,
+    CP_ACCESS_TRAP_UNCATEGORIZED_EL3 = 6,
 } CPAccessResult;
 
 /* Access functions for coprocessor registers. These cannot fail and
diff --git a/target-arm/op_helper.c b/target-arm/op_helper.c
index 663c05d1d2..1425a1d4bb 100644
--- a/target-arm/op_helper.c
+++ b/target-arm/op_helper.c
@@ -444,6 +444,14 @@ void HELPER(access_check_cp_reg)(CPUARMState *env, void *rip, uint32_t syndrome)
         target_el = exception_target_el(env);
         syndrome = syn_uncategorized();
         break;
+    case CP_ACCESS_TRAP_UNCATEGORIZED_EL2:
+        target_el = 2;
+        syndrome = syn_uncategorized();
+        break;
+    case CP_ACCESS_TRAP_UNCATEGORIZED_EL3:
+        target_el = 3;
+        syndrome = syn_uncategorized();
+        break;
     default:
         g_assert_not_reached();
     }

