commit 41bd26d67c41e325c6b9e56aadfe9dad8af9a565
Author: holt@sgi.com <holt@sgi.com>
Date:   Thu Apr 3 15:17:12 2008 -0500

    [IA64] Correct pernodesize calculation.
    
    A simple fix.  The existing pernodesize reservation is not taking into
    account a second array of pg_data_t structures.  This is normally not
    important because the PAGE_ALIGN macro reserves adequate space.
    
    I made the compute_pernodesize steps in the same order as the fill_pernode
    steps to make the correlation more clear.
    
    Signed-off-by: Robin Holt <holt@sgi.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>

diff --git a/arch/ia64/mm/discontig.c b/arch/ia64/mm/discontig.c
index ee5e68b2af94..06c540a29467 100644
--- a/arch/ia64/mm/discontig.c
+++ b/arch/ia64/mm/discontig.c
@@ -124,6 +124,7 @@ static unsigned long __meminit compute_pernodesize(int node)
 	pernodesize += node * L1_CACHE_BYTES;
 	pernodesize += L1_CACHE_ALIGN(sizeof(pg_data_t));
 	pernodesize += L1_CACHE_ALIGN(sizeof(struct ia64_node_data));
+	pernodesize += L1_CACHE_ALIGN(sizeof(pg_data_t));
 	pernodesize = PAGE_ALIGN(pernodesize);
 	return pernodesize;
 }

