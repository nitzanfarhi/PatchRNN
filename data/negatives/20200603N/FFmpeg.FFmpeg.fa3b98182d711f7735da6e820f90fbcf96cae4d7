commit fa3b98182d711f7735da6e820f90fbcf96cae4d7
Author: Michael Niedermayer <michaelni@gmx.at>
Date:   Sun May 25 23:04:09 2008 +0000

    Ensure that one can store X bytes in a fifo of size X.
    Fixed issue417.
    
    Originally committed as revision 13405 to svn://svn.ffmpeg.org/ffmpeg/trunk

diff --git a/ffmpeg.c b/ffmpeg.c
index 544927956f..ec9117ae5e 100644
--- a/ffmpeg.c
+++ b/ffmpeg.c
@@ -587,7 +587,7 @@ static void do_audio_out(AVFormatContext *s,
     /* now encode as many frames as possible */
     if (enc->frame_size > 1) {
         /* output resampled raw samples */
-        av_fifo_realloc(&ost->fifo, av_fifo_size(&ost->fifo) + size_out + 1);
+        av_fifo_realloc(&ost->fifo, av_fifo_size(&ost->fifo) + size_out);
         av_fifo_write(&ost->fifo, buftmp, size_out);
 
         frame_bytes = enc->frame_size * 2 * enc->channels;
diff --git a/libavformat/mpegenc.c b/libavformat/mpegenc.c
index c96ffd1684..f86143a5d2 100644
--- a/libavformat/mpegenc.c
+++ b/libavformat/mpegenc.c
@@ -1170,7 +1170,7 @@ static int mpeg_mux_write_packet(AVFormatContext *ctx, AVPacket *pkt)
         stream->predecode_packet= pkt_desc;
     stream->next_packet= &pkt_desc->next;
 
-    av_fifo_realloc(&stream->fifo, av_fifo_size(&stream->fifo) + size + 1);
+    av_fifo_realloc(&stream->fifo, av_fifo_size(&stream->fifo) + size);
 
     if (s->is_dvd){
         if (is_iframe && (s->packet_number == 0 || (pts - stream->vobu_start_pts >= 36000))) { // min VOBU length 0.4 seconds (mpucoder)
diff --git a/libavutil/fifo.c b/libavutil/fifo.c
index f2ace514bd..eda3558436 100644
--- a/libavutil/fifo.c
+++ b/libavutil/fifo.c
@@ -22,8 +22,9 @@
 #include "common.h"
 #include "fifo.h"
 
-int av_fifo_init(AVFifoBuffer *f, int size)
+int av_fifo_init(AVFifoBuffer *f, unsigned int size)
 {
+    size= FFMAX(size, size+1);
     f->wptr = f->rptr =
     f->buffer = av_malloc(size);
     f->end = f->buffer + size;
@@ -56,7 +57,7 @@ int av_fifo_read(AVFifoBuffer *f, uint8_t *buf, int buf_size)
 void av_fifo_realloc(AVFifoBuffer *f, unsigned int new_size) {
     unsigned int old_size= f->end - f->buffer;
 
-    if(old_size < new_size){
+    if(old_size <= new_size){
         int len= av_fifo_size(f);
         AVFifoBuffer f2;
 
diff --git a/libavutil/fifo.h b/libavutil/fifo.h
index f5fb144211..6533be921d 100644
--- a/libavutil/fifo.h
+++ b/libavutil/fifo.h
@@ -38,7 +38,7 @@ typedef struct AVFifoBuffer {
  * @param size of FIFO
  * @return <0 for failure >=0 otherwise
  */
-int av_fifo_init(AVFifoBuffer *f, int size);
+int av_fifo_init(AVFifoBuffer *f, unsigned int size);
 
 /**
  * Frees an AVFifoBuffer.

