commit 82ee7b760fc2a8a5331c45ea9d360074bbdf2372
Author: sivaramaaa <sivaramaaa@gmail.com>
Date:   Fri Jun 15 18:53:52 2018 +0530

    Support function pointer in struct with ts

diff --git a/libr/util/ctype.c b/libr/util/ctype.c
index d1361fa98..bb0fc9ac7 100644
--- a/libr/util/ctype.c
+++ b/libr/util/ctype.c
@@ -309,13 +309,15 @@ R_API char *r_type_format(Sdb *TDB, const char *t) {
 			char *struct_name;
 			bool isStruct = false;
 			bool isEnum = false;
+			bool isfp = false;
 			snprintf (var2, sizeof (var2), "%s.%s", var, p);
 			type = sdb_array_get (TDB, var2, 0, NULL);
-			int elements = sdb_array_get_num (TDB, var2, 2, NULL);
+			int alen = sdb_array_size (TDB, var2);
+			int elements = sdb_array_get_num (TDB, var2, alen - 1, NULL);
 			if (type) {
-				//off = sdb_array_get_num (DB, var2, 1, NULL);
-				//size = sdb_array_get_num (DB, var2, 2, NULL);
-				if (!strncmp (type, "struct ", 7)) {
+				if (strstr (type, "*(")) { // check for function pointer
+					isfp = true;
+				} else if (!strncmp (type, "struct ", 7)) {
 					struct_name = type + 7;
 					// TODO: iterate over all the struct fields, and format the format and vars
 					snprintf (var3, sizeof (var3), "struct.%s", struct_name);
@@ -352,6 +354,11 @@ R_API char *r_type_format(Sdb *TDB, const char *t) {
 						fmt = r_str_append (fmt, "E");
 						vars = r_str_appendf (vars, "(%s)%s", type + 5, p);
 						vars = r_str_append (vars, " ");
+					} else if (isfp) {
+						// consider function pointer as void * for printing
+						fmt = r_str_append (fmt, "p");
+						vars = r_str_append (vars, p);
+						vars = r_str_append (vars, " ");
 					} else {
 						fmt = r_str_append (fmt, tfmt);
 						vars = r_str_append (vars, p);

