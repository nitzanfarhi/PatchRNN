commit 6db8e85c5c1f89cd0183b76dab027c81009f129f
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Jun 14 11:18:22 2013 -0700

    cgroup: disallow rename(2) if sane_behavior
    
    cgroup's rename(2) isn't a proper migration implementation - it can't
    move the cgroup to a different parent in the hierarchy.  All it can do
    is swapping the name string for that cgroup.  This isn't useful and
    can mislead users to think that cgroup supports proper cgroup-level
    migration.  Disallow rename(2) if sane_behavior.
    
    v2: Fail with -EPERM instead of -EINVAL so that it matches the vfs
        return value when ->rename is not implemented as suggested by Li.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Li Zefan <lizefan@huawei.com>

diff --git a/include/linux/cgroup.h b/include/linux/cgroup.h
index 17604767adfd..f97522790682 100644
--- a/include/linux/cgroup.h
+++ b/include/linux/cgroup.h
@@ -270,6 +270,8 @@ enum {
 	 * - "release_agent" and "notify_on_release" are removed.
 	 *   Replacement notification mechanism will be implemented.
 	 *
+	 * - rename(2) is disallowed.
+	 *
 	 * - memcg: use_hierarchy is on by default and the cgroup file for
 	 *   the flag is not created.
 	 */
diff --git a/kernel/cgroup.c b/kernel/cgroup.c
index 2e9da7bf25cb..c2c64005bbc2 100644
--- a/kernel/cgroup.c
+++ b/kernel/cgroup.c
@@ -2508,6 +2508,13 @@ static int cgroup_rename(struct inode *old_dir, struct dentry *old_dentry,
 
 	cgrp = __d_cgrp(old_dentry);
 
+	/*
+	 * This isn't a proper migration and its usefulness is very
+	 * limited.  Disallow if sane_behavior.
+	 */
+	if (cgroup_sane_behavior(cgrp))
+		return -EPERM;
+
 	name = cgroup_alloc_name(new_dentry);
 	if (!name)
 		return -ENOMEM;

