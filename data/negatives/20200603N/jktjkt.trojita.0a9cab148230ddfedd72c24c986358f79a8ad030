commit 0a9cab148230ddfedd72c24c986358f79a8ad030
Author: Ahmed Ibrahim <ahmedibrahimkhali@gmail.com>
Date:   Tue Dec 25 17:33:58 2012 +0100

    Added options for opening and downloading an attachment

diff --git a/src/Gui/AttachmentView.cpp b/src/Gui/AttachmentView.cpp
index 698c1735..0131faa4 100644
--- a/src/Gui/AttachmentView.cpp
+++ b/src/Gui/AttachmentView.cpp
@@ -25,21 +25,24 @@
 #include "Imap/Model/ItemRoles.h"
 #include "Imap/Model/Utils.h"
 
+#include <QAction>
 #include <QDesktopServices>
 #include <QDrag>
 #include <QFileDialog>
 #include <QHBoxLayout>
+#include <QMenu>
 #include <QMessageBox>
 #include <QMimeData>
 #include <QMouseEvent>
 #include <QPushButton>
 #include <QLabel>
+#include <QToolButton>
 
 namespace Gui
 {
 
 AttachmentView::AttachmentView(QWidget *parent, Imap::Network::MsgPartNetAccessManager *manager, const QModelIndex &partIndex):
-    QWidget(parent), fileDownloadManager(0), downloadButton(0)
+    QWidget(parent), partIndex(partIndex), fileDownloadManager(0), downloadButton(0), downloadOnlyAction(0), openDirectlyAction(0)
 {
     fileDownloadManager = new Imap::Network::FileDownloadManager(this, manager, partIndex);
     QHBoxLayout *layout = new QHBoxLayout(this);
@@ -48,17 +51,60 @@ AttachmentView::AttachmentView(QWidget *parent, Imap::Network::MsgPartNetAccessM
                              Imap::Mailbox::PrettySize::prettySize(partIndex.data(Imap::Mailbox::RolePartOctets).toUInt(),
                                                                    Imap::Mailbox::PrettySize::WITH_BYTES_SUFFIX)));
     layout->addWidget(lbl);
-    downloadButton = new QPushButton(tr("Download"));
+    downloadButton = new QToolButton();
+    downloadButton->setPopupMode(QToolButton::MenuButtonPopup);
     downloadButton->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
-    layout->addWidget(downloadButton);
+
+    QMenu *menu = new QMenu();
+    downloadOnlyAction = menu->addAction(tr("Download"));
+    openDirectlyAction = menu->addAction(tr("Open Directly"));
+    connect( downloadOnlyAction, SIGNAL(triggered()), this, SLOT(slotDownloadOnlyActionTriggered()));
+    connect(openDirectlyAction, SIGNAL(triggered()), this, SLOT(slotOpenDirectlyActionTriggered()));
+
+    downloadButton->setMenu(menu);
+    downloadButton->setDefaultAction(downloadOnlyAction);
+
     connect(downloadButton, SIGNAL(clicked()), fileDownloadManager, SLOT(slotDownloadNow()));
-    connect(fileDownloadManager, SIGNAL(fileNameRequested(QString *)), this, SLOT(slotFileNameRequested(QString *)));
+
+    layout->addWidget(downloadButton);
     setSizePolicy(QSizePolicy::Preferred, QSizePolicy::Fixed);
 }
 
+void AttachmentView::slotDownloadOnlyActionTriggered()
+{
+    //We should disconnect the fileDownloadManager from any connected slots
+    //and reconnect again to prevent duplicate emitting of signals
+    fileDownloadManager->disconnect();
+    downloadButton->setDefaultAction(downloadOnlyAction);
+    connect(fileDownloadManager, SIGNAL(fileNameRequested(QString *)), this, SLOT(slotFileNameRequested(QString *)));
+}
+
+void AttachmentView::slotOpenDirectlyActionTriggered()
+{
+    //We should disconnect the fileDownloadManager from any connected slots
+    //and reconnect again to prevent duplicate emitting of signals
+    fileDownloadManager->disconnect();
+    downloadButton->setDefaultAction(openDirectlyAction);
+    connect(fileDownloadManager, SIGNAL(fileNameRequested(QString*)), this, SLOT(slotFileNameRequestedOnOpen(QString*)));
+    connect(fileDownloadManager, SIGNAL(succeeded()), this, SLOT(slotTransferSucceeded()));
+}
+
+void AttachmentView::slotFileNameRequestedOnOpen(QString *fileName)
+{
+    *fileName = QDir(QDesktopServices::storageLocation(QDesktopServices::TempLocation)).filePath(*fileName);
+}
+
 void AttachmentView::slotFileNameRequested(QString *fileName)
 {
-    *fileName = QFileDialog::getSaveFileName(this, tr("Save Attachment"), *fileName, QString(), 0, QFileDialog::HideNameFilterDetails);
+    QString fileLocation;
+
+#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
+    fileLocation =  QDir(QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation)).filePath(*fileName);
+#else
+    fileLocation = QDir(QStandardPaths::writableLocation(QStandardPaths::DownloadLocation)).filePath(*fileName);
+#endif
+
+    *fileName = QFileDialog::getSaveFileName(this, tr("Save Attachment"), fileLocation, QString(), 0, QFileDialog::HideNameFilterDetails);
 }
 
 void AttachmentView::slotTransferError(const QString &errorString)
@@ -66,6 +112,12 @@ void AttachmentView::slotTransferError(const QString &errorString)
     QMessageBox::critical(this, tr("Can't save attachment"), tr("Unable to save the attachment. Error:\n%1").arg(errorString));
 }
 
+void AttachmentView::slotTransferSucceeded()
+{
+    QString fileRealPath = QDir(QDesktopServices::storageLocation(QDesktopServices::TempLocation)).filePath(fileDownloadManager->toRealFileName(partIndex));
+    QDesktopServices::openUrl(QUrl::fromLocalFile(fileRealPath));
+}
+
 void AttachmentView::mousePressEvent(QMouseEvent *event)
 {
     QWidget *child = childAt(event->pos());
@@ -94,4 +146,6 @@ void AttachmentView::mousePressEvent(QMouseEvent *event)
     drag->exec(Qt::CopyAction, Qt::CopyAction);
 }
 
+
 }
+
diff --git a/src/Gui/AttachmentView.h b/src/Gui/AttachmentView.h
index b85c4b29..124a6d5a 100644
--- a/src/Gui/AttachmentView.h
+++ b/src/Gui/AttachmentView.h
@@ -22,11 +22,13 @@
 #ifndef ATTACHMENTVIEW_H
 #define ATTACHMENTVIEW_H
 
+#include <QModelIndex>
 #include <QWidget>
 
-class QModelIndex;
+
 class QNetworkReply;
 class QPushButton;
+class QToolButton;
 
 namespace Imap
 {
@@ -55,11 +57,21 @@ public:
 protected:
     virtual void mousePressEvent(QMouseEvent *event);
 private slots:
+    void slotDownloadOnlyActionTriggered();
+    void slotOpenDirectlyActionTriggered();
+
     void slotTransferError(const QString &errorString);
+    void slotFileNameRequestedOnOpen(QString *fileName);
     void slotFileNameRequested(QString *fileName);
+    void slotTransferSucceeded();
+
 private:
+    QModelIndex partIndex;
     Imap::Network::FileDownloadManager *fileDownloadManager;
-    QPushButton *downloadButton;
+    QToolButton *downloadButton;
+
+    QAction *downloadOnlyAction;
+    QAction *openDirectlyAction;
 
     AttachmentView(const AttachmentView &); // don't implement
     AttachmentView &operator=(const AttachmentView &); // don't implement
diff --git a/src/Imap/Network/FileDownloadManager.cpp b/src/Imap/Network/FileDownloadManager.cpp
index 0cfa2139..a2ac6a75 100644
--- a/src/Imap/Network/FileDownloadManager.cpp
+++ b/src/Imap/Network/FileDownloadManager.cpp
@@ -47,11 +47,8 @@ QString FileDownloadManager::toRealFileName(const QModelIndex &index)
     QString uid = index.data(Imap::Mailbox::RoleMessageUid).toString();
     QString partId = index.data(Imap::Mailbox::RolePartId).toString();
     QString name = fileName.isEmpty() ? tr("msg_%1_%2").arg(uid, partId) : fileName;
-#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
-    return QDir(QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation)).filePath(name);
-#else
-    return QDir(QStandardPaths::writableLocation(QStandardPaths::DownloadLocation)).filePath(name);
-#endif
+
+    return name;
 }
 
 QVariant FileDownloadManager::data(int role) const

