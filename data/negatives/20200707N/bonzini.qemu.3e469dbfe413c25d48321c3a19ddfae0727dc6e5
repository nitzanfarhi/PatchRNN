commit 3e469dbfe413c25d48321c3a19ddfae0727dc6e5
Author: Andrea Arcangeli <aarcange@redhat.com>
Date:   Thu Jul 25 12:11:15 2013 +0200

    exec: always use MADV_DONTFORK
    
    MADV_DONTFORK prevents fork to fail with -ENOMEM if the default
    overcommit heuristics decides there's too much anonymous virtual
    memory allocated. If the KVM secondary MMU is synchronized with MMU
    notifiers or not, doesn't make a difference in that regard.
    
    Secondly it's always more efficient to avoid copying the guest
    physical address space in the fork child (so we avoid to mark all the
    guest memory readonly in the parent and so we skip the establishment
    and teardown of lots of pagetables in the child).
    
    In the common case we can ignore the error if MADV_DONTFORK is not
    available. Leave a second invocation that errors out in the KVM path
    if MMU notifiers are missing and KVM is enabled, to abort in such
    case.
    
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Tested-By: Benoit Canet <benoit@irqsave.net>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Gleb Natapov <gleb@redhat.com>

diff --git a/exec.c b/exec.c
index 030118e68e..5e6015cbd3 100644
--- a/exec.c
+++ b/exec.c
@@ -1157,6 +1157,7 @@ ram_addr_t qemu_ram_alloc_from_ptr(ram_addr_t size, void *host,
 
     qemu_ram_setup_dump(new_block->host, size);
     qemu_madvise(new_block->host, size, QEMU_MADV_HUGEPAGE);
+    qemu_madvise(new_block->host, size, QEMU_MADV_DONTFORK);
 
     if (kvm_enabled())
         kvm_setup_guest_memory(new_block->host, size);

