commit 215a1c887d70f0fe4b2dc26f2e8a75d9560b8ce5
Author: Poul-Henning Kamp <phk@FreeBSD.org>
Date:   Mon Jul 28 12:14:55 2014 +0000

    Ensure that smp_object always are a multiple of 8 bytes.

diff --git a/bin/varnishd/storage/storage_persistent.h b/bin/varnishd/storage/storage_persistent.h
index 7d423e1ac..68f969d05 100644
--- a/bin/varnishd/storage/storage_persistent.h
+++ b/bin/varnishd/storage/storage_persistent.h
@@ -145,6 +145,7 @@ struct smp_segptr {
 struct smp_object {
 	uint8_t			hash[32];	/* really: DIGEST_LEN */
 	struct exp		exp;
+	uint32_t		__filler__;	/* -> align/8 on 32bit */
 	double			ban;
 	uint64_t		ptr;		/* rel to silo */
 };
diff --git a/bin/varnishd/storage/storage_persistent_mgt.c b/bin/varnishd/storage/storage_persistent_mgt.c
index f99a6ae82..33f41e0c1 100644
--- a/bin/varnishd/storage/storage_persistent_mgt.c
+++ b/bin/varnishd/storage/storage_persistent_mgt.c
@@ -136,6 +136,10 @@ smp_mgt_init(struct stevedore *parent, int ac, char * const *av)
 	ASSERT_MGT();
 
 	AZ(av[ac]);
+
+	/* Necessary alignment. See also smp_object::__filler__ */
+	assert(sizeof(struct smp_object) % 8 == 0);
+
 #define SIZOF(foo)       fprintf(stderr, \
     "sizeof(%s) = %zu = 0x%zx\n", #foo, sizeof(foo), sizeof(foo));
 	SIZOF(struct smp_ident);

