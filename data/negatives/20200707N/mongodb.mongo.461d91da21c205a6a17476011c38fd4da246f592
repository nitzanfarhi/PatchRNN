commit 461d91da21c205a6a17476011c38fd4da246f592
Author: Geert Bosch <geert@mongodb.com>
Date:   Fri Jul 7 13:39:42 2017 -0400

    SERVER-15723 Avoid G_X lock for renameCollection within database

diff --git a/src/mongo/db/catalog/rename_collection.cpp b/src/mongo/db/catalog/rename_collection.cpp
index c22b05132f..bc47f32044 100644
--- a/src/mongo/db/catalog/rename_collection.cpp
+++ b/src/mongo/db/catalog/rename_collection.cpp
@@ -80,7 +80,15 @@ Status renameCollectionCommon(OperationContext* opCtx,
                               bool stayTemp) {
     DisableDocumentValidation validationDisabler(opCtx);
 
-    Lock::GlobalWrite globalWriteLock(opCtx);
+    boost::optional<Lock::GlobalWrite> globalWriteLock;
+    boost::optional<Lock::DBLock> dbWriteLock;
+
+    // If the rename is known not to be a cross-database rename, just a database lock suffices.
+    if (source.db() == target.db())
+        dbWriteLock.emplace(opCtx, source.db(), MODE_X);
+    else
+        globalWriteLock.emplace(opCtx);
+
     // We stay in source context the whole time. This is mostly to set the CurOp namespace.
     OldClientContext ctx(opCtx, source.ns());
 

