commit 6fc166d62c6f9f6eda5ea300f671d34e89bdd3c8
Author: David Howells <dhowells@redhat.com>
Date:   Thu Mar 9 08:10:32 2017 +0000

    rxrpc: rxrpc_kernel_send_data() needs to handle failed call better
    
    If rxrpc_kernel_send_data() is asked to send data through a call that has
    already failed (due to a remote abort, received protocol error or network
    error), then return the associated error code saved in the call rather than
    ESHUTDOWN.
    
    This allows the caller to work out whether to ask for the abort code or not
    based on this.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/rxrpc/sendmsg.c b/net/rxrpc/sendmsg.c
index 47ccfeacc1c6..97ab214ca411 100644
--- a/net/rxrpc/sendmsg.c
+++ b/net/rxrpc/sendmsg.c
@@ -618,8 +618,9 @@ int rxrpc_kernel_send_data(struct socket *sock, struct rxrpc_call *call,
 		ret = rxrpc_send_data(rxrpc_sk(sock->sk), call, msg, len);
 		break;
 	case RXRPC_CALL_COMPLETE:
-		/* It's too late for this call */
-		ret = -ESHUTDOWN;
+		read_lock_bh(&call->state_lock);
+		ret = -call->error;
+		read_unlock_bh(&call->state_lock);
 		break;
 	default:
 		 /* Request phase complete for this client call */

