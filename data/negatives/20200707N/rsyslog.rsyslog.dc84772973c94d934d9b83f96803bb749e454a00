commit dc84772973c94d934d9b83f96803bb749e454a00
Author: Rainer Gerhards <rgerhards@adiscon.com>
Date:   Tue Dec 3 14:10:51 2013 +0100

    refactor: shrink template string structures

diff --git a/action.c b/action.c
index 807dcc266..93dd8f0c0 100644
--- a/action.c
+++ b/action.c
@@ -878,18 +878,18 @@ prepareDoActionParams(action_t * const pAction, wti_t * const pWti, msg_t *pMsg,
 		for(i = 0 ; i < pAction->iNumTpls ; ++i) {
 dbgprintf("DDDDD: generating template #%d (in-TX)\n", i);
 			iparams->msgFlags = pMsg->msgFlags;
-			CHKiRet(tplToString(pAction->ppTpl[i], pMsg, &(iparams->staticActStrings[i]),
+			CHKiRet(tplToString(pAction->ppTpl[i], pMsg, (uchar**)&(iparams->staticActParams[i]),
 				&iparams->staticLenStrings[i], ttNow));
-			iparams->staticActParams[i] = iparams->staticActStrings[i];
+			iparams->staticActParams[i] = iparams->staticActParams[i];
 		}
 	} else {
 		for(i = 0 ; i < pAction->iNumTpls ; ++i) {
 dbgprintf("DDDDD: generating template #%d (non-TX)\n", i);
 			switch(pAction->eParamPassing) {
 				case ACT_STRING_PASSING:
-					CHKiRet(tplToString(pAction->ppTpl[i], pMsg, &(pWrkrInfo->staticActStrings[i]),
+					CHKiRet(tplToString(pAction->ppTpl[i], pMsg, (uchar**)&(pWrkrInfo->staticActParams[i]),
 						&pWrkrInfo->staticLenStrings[i], ttNow));
-					pWrkrInfo->staticActParams[i] = pWrkrInfo->staticActStrings[i];
+					pWrkrInfo->staticActParams[i] = pWrkrInfo->staticActParams[i];
 					break;
 				case ACT_ARRAY_PASSING:
 					CHKiRet(tplToArray(pAction->ppTpl[i], pMsg,
@@ -956,8 +956,8 @@ releaseDoActionParams(action_t * const pAction, wti_t * const pWti)
 			/* TODO: we can save time by not freeing everything,
 			 * but that's left for a later optimization.
 			 */
-			free(pWrkrInfo->staticActStrings[j]);
-			pWrkrInfo->staticActStrings[j] = NULL;
+			free(pWrkrInfo->staticActParams[j]);
+			pWrkrInfo->staticActParams[j] = NULL;
 			pWrkrInfo->staticLenStrings[j] = 0;
 		}
 	case ACT_MSG_PASSING:
@@ -1078,8 +1078,8 @@ actionFreeParams(action_t * const pThis, wti_t * const pWti)
 			/* TODO: we can save time by not freeing everything,
 			 * but that's left for a later optimization.
 			 */
-			free(iparamCurr->staticActStrings[j]);
-			iparamCurr->staticActStrings[j] = NULL;
+			free(iparamCurr->staticActParams[j]);
+			iparamCurr->staticActParams[j] = NULL;
 			iparamCurr->staticLenStrings[j] = 0;
 		}
 	}
diff --git a/runtime/wti.h b/runtime/wti.h
index 3caa4a3e3..50f6d1854 100644
--- a/runtime/wti.h
+++ b/runtime/wti.h
@@ -46,8 +46,6 @@
 typedef struct actWrkrIParams {
 	int msgFlags;
 	/* following are caches to save allocs if not absolutely necessary */
-	uchar *staticActStrings[CONF_OMOD_NUMSTRINGS_MAXSIZE]; /**< for strings */
-				/* a cache to save malloc(), if not absolutely necessary */
 	unsigned staticLenStrings[CONF_OMOD_NUMSTRINGS_MAXSIZE];
 				/* and the same for the message length (if used) */
 	void *staticActParams[CONF_OMOD_NUMSTRINGS_MAXSIZE];
@@ -64,8 +62,6 @@ typedef struct actWrkrInfo {
 	actWrkrIParams_t *iparams;
 	int currIParam;
 	int maxIParams;	/* current max */
-	uchar *staticActStrings[CONF_OMOD_NUMSTRINGS_MAXSIZE]; /**< for strings */
-				/* a cache to save malloc(), if not absolutely necessary */
 	unsigned staticLenStrings[CONF_OMOD_NUMSTRINGS_MAXSIZE];
 				/* and the same for the message length (if used) */
 	void *staticActParams[CONF_OMOD_NUMSTRINGS_MAXSIZE]; /* for non-strings */

