commit e1cd89c507b41e4021ce6fb0d19d230f6a932ccd
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Dec 1 21:38:42 2011 -0600

    [SCSI] qla4xxx: a small loop fix
    
    When the qla4xxx_get_fwddb_entry returns QLA_ERROR
    the nex_idx is not updated,
          for (idx = 0; idx < max_ddbs; idx = next_idx) {
                    ret = qla4xxx_get_fwddb_entry(ha, idx, NULL, 0, NULL,
                                                  &next_idx, &state, &conn_err,
                                                    NULL, NULL);
                    if (ret == QLA_ERROR)
                            continue;
    
    This means there is a risk that the 'idx < max_ddbs' condition will never
    met and the loop will loop forever.
    Fix this by explicitly increasing the next_idx in the error condition.
    
    Maybe a break instead of continue is more appropriate, leaving the decision
    on the qlogic maintainer.
    
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Mike Christie <michaelc@cs.wisc.edu>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>

diff --git a/drivers/scsi/qla4xxx/ql4_init.c b/drivers/scsi/qla4xxx/ql4_init.c
index 0497873a1dd2..1bdfa8120ac8 100644
--- a/drivers/scsi/qla4xxx/ql4_init.c
+++ b/drivers/scsi/qla4xxx/ql4_init.c
@@ -787,8 +787,10 @@ void qla4xxx_free_ddb_index(struct scsi_qla_host *ha)
 		ret = qla4xxx_get_fwddb_entry(ha, idx, NULL, 0, NULL,
 					      &next_idx, &state, &conn_err,
 						NULL, NULL);
-		if (ret == QLA_ERROR)
+		if (ret == QLA_ERROR) {
+			next_idx++;
 			continue;
+		}
 		if (state == DDB_DS_NO_CONNECTION_ACTIVE ||
 		    state == DDB_DS_SESSION_FAILED) {
 			DEBUG2(ql4_printk(KERN_INFO, ha,

