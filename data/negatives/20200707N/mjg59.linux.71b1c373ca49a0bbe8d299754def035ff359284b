commit 71b1c373ca49a0bbe8d299754def035ff359284b
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Thu Apr 24 23:55:03 2014 +0200

    drm/i915: Sprinkle intel_edp_psr_update over crtc_enable/disable
    
    My plan here is to split up set_base into a prepare step, which does
    the pinning, and a commit stage, which updates the hw state. Eventually
    we should be able to move the prepare step at the beginning of any
    atomic update. For now I only want to move the commit step into the
    crtc_enable callbacks.
    
    As a prep step sprinkle intel_edp_psr_update all over the place so
    that we don't have to concern ourselves with that in the commit step.
    
    v2: Rebase on top of Ville's enable/disable functions for all planes.
    
    v3: Rebase more.
    
    Reviewed-by: Akash Goel <akash.goel@intel.com> (v2)
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

diff --git a/drivers/gpu/drm/i915/intel_display.c b/drivers/gpu/drm/i915/intel_display.c
index aa6daef427f3..4af3d64cda0e 100644
--- a/drivers/gpu/drm/i915/intel_display.c
+++ b/drivers/gpu/drm/i915/intel_display.c
@@ -3875,6 +3875,7 @@ static void intel_crtc_enable_planes(struct drm_crtc *crtc)
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_edp_psr_update(dev);
 	mutex_unlock(&dev->struct_mutex);
 }
 
@@ -4131,6 +4132,7 @@ static void ironlake_crtc_disable(struct drm_crtc *crtc)
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_edp_psr_update(dev);
 	mutex_unlock(&dev->struct_mutex);
 }
 
@@ -4178,6 +4180,7 @@ static void haswell_crtc_disable(struct drm_crtc *crtc)
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_edp_psr_update(dev);
 	mutex_unlock(&dev->struct_mutex);
 }
 
@@ -4620,6 +4623,7 @@ static void i9xx_crtc_disable(struct drm_crtc *crtc)
 
 	mutex_lock(&dev->struct_mutex);
 	intel_update_fbc(dev);
+	intel_edp_psr_update(dev);
 	mutex_unlock(&dev->struct_mutex);
 }
 

