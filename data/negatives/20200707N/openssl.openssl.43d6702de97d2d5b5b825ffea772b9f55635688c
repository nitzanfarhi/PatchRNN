commit 43d6702de97d2d5b5b825ffea772b9f55635688c
Author: FdaSilvaYY <fdasilvayy@gmail.com>
Date:   Sun Jan 31 19:49:39 2016 +0100

    fix code indentation issue
    
    ... related to engine_ref_debug macro.
    
    Signed-off-by: Rich Salz <rsalz@akamai.com>
    Reviewed-by: Kurt Roeckx <kurt@openssl.org>

diff --git a/crypto/engine/eng_init.c b/crypto/engine/eng_init.c
index 9a57e079ee..c5f3805765 100644
--- a/crypto/engine/eng_init.c
+++ b/crypto/engine/eng_init.c
@@ -75,8 +75,8 @@ int engine_unlocked_init(ENGINE *e)
          */
         e->struct_ref++;
         e->funct_ref++;
-        engine_ref_debug(e, 0, 1)
-            engine_ref_debug(e, 1, 1)
+        engine_ref_debug(e, 0, 1);
+        engine_ref_debug(e, 1, 1);
     }
     return to_return;
 }
diff --git a/crypto/engine/eng_int.h b/crypto/engine/eng_int.h
index d75ba5fd0a..804214d9ae 100644
--- a/crypto/engine/eng_int.h
+++ b/crypto/engine/eng_int.h
@@ -87,7 +87,7 @@ extern "C" {
                 (unsigned int)(e), (isfunct ? "funct" : "struct"), \
                 ((isfunct) ? ((e)->funct_ref - (diff)) : ((e)->struct_ref - (diff))), \
                 ((isfunct) ? (e)->funct_ref : (e)->struct_ref), \
-                (__FILE__), (__LINE__));
+                (__FILE__), (__LINE__))
 
 # else
 
diff --git a/crypto/engine/eng_lib.c b/crypto/engine/eng_lib.c
index f684e8fc9b..7b13c36502 100644
--- a/crypto/engine/eng_lib.c
+++ b/crypto/engine/eng_lib.c
@@ -71,8 +71,8 @@ ENGINE *ENGINE_new(void)
         return NULL;
     }
     ret->struct_ref = 1;
-    engine_ref_debug(ret, 0, 1)
-        CRYPTO_new_ex_data(CRYPTO_EX_INDEX_ENGINE, ret, &ret->ex_data);
+    engine_ref_debug(ret, 0, 1);
+    CRYPTO_new_ex_data(CRYPTO_EX_INDEX_ENGINE, ret, &ret->ex_data);
     return ret;
 }
 
diff --git a/crypto/engine/eng_list.c b/crypto/engine/eng_list.c
index 1c152c73a2..b47bb4d491 100644
--- a/crypto/engine/eng_list.c
+++ b/crypto/engine/eng_list.c
@@ -141,9 +141,9 @@ static int engine_list_add(ENGINE *e)
      * Having the engine in the list assumes a structural reference.
      */
     e->struct_ref++;
-    engine_ref_debug(e, 0, 1)
-        /* However it came to be, e is the last item in the list. */
-        engine_list_tail = e;
+    engine_ref_debug(e, 0, 1);
+    /* However it came to be, e is the last item in the list. */
+    engine_list_tail = e;
     e->next = NULL;
     return 1;
 }
@@ -188,7 +188,7 @@ ENGINE *ENGINE_get_first(void)
     ret = engine_list_head;
     if (ret) {
         ret->struct_ref++;
-        engine_ref_debug(ret, 0, 1)
+        engine_ref_debug(ret, 0, 1);
     }
     CRYPTO_w_unlock(CRYPTO_LOCK_ENGINE);
     return ret;
@@ -202,7 +202,7 @@ ENGINE *ENGINE_get_last(void)
     ret = engine_list_tail;
     if (ret) {
         ret->struct_ref++;
-        engine_ref_debug(ret, 0, 1)
+        engine_ref_debug(ret, 0, 1);
     }
     CRYPTO_w_unlock(CRYPTO_LOCK_ENGINE);
     return ret;
@@ -221,7 +221,7 @@ ENGINE *ENGINE_get_next(ENGINE *e)
     if (ret) {
         /* Return a valid structural refernce to the next ENGINE */
         ret->struct_ref++;
-        engine_ref_debug(ret, 0, 1)
+        engine_ref_debug(ret, 0, 1);
     }
     CRYPTO_w_unlock(CRYPTO_LOCK_ENGINE);
     /* Release the structural reference to the previous ENGINE */
@@ -241,7 +241,7 @@ ENGINE *ENGINE_get_prev(ENGINE *e)
     if (ret) {
         /* Return a valid structural reference to the next ENGINE */
         ret->struct_ref++;
-        engine_ref_debug(ret, 0, 1)
+        engine_ref_debug(ret, 0, 1);
     }
     CRYPTO_w_unlock(CRYPTO_LOCK_ENGINE);
     /* Release the structural reference to the previous ENGINE */
@@ -346,7 +346,7 @@ ENGINE *ENGINE_by_id(const char *id)
             }
         } else {
             iterator->struct_ref++;
-            engine_ref_debug(iterator, 0, 1)
+            engine_ref_debug(iterator, 0, 1);
         }
     }
     CRYPTO_w_unlock(CRYPTO_LOCK_ENGINE);
diff --git a/crypto/engine/tb_asnmth.c b/crypto/engine/tb_asnmth.c
index 407023fdf6..b0d0d50974 100644
--- a/crypto/engine/tb_asnmth.c
+++ b/crypto/engine/tb_asnmth.c
@@ -238,7 +238,7 @@ const EVP_PKEY_ASN1_METHOD *ENGINE_pkey_asn1_find_str(ENGINE **pe,
     /* If found obtain a structural reference to engine */
     if (fstr.e) {
         fstr.e->struct_ref++;
-        engine_ref_debug(fstr.e, 0, 1)
+        engine_ref_debug(fstr.e, 0, 1);
     }
     *pe = fstr.e;
     CRYPTO_w_unlock(CRYPTO_LOCK_ENGINE);

