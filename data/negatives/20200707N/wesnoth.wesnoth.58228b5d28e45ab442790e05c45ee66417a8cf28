commit 58228b5d28e45ab442790e05c45ee66417a8cf28
Author: gfgtdf <f492343@rmqkr.net>
Date:   Tue May 19 15:59:12 2015 +0200

    clear the redo stack when toggeling shroud updates
    
    The previous behaviour causes OOS, assume this situation:
    Player1s turn, DSU is activated, player1 moves  a unit and then undoes
    the move. then he deactivates dsu and redoes the move. The result is
    that the move did not uncover shroud (but it should since the move was
    now done after DSU was deactivated).

diff --git a/src/actions/undo.cpp b/src/actions/undo.cpp
index 2018ceac7e..a76be74cf3 100644
--- a/src/actions/undo.cpp
+++ b/src/actions/undo.cpp
@@ -159,7 +159,7 @@ void undo_list::add_auto_shroud(bool turned_on)
 	/// @todo: Consecutive shroud actions can be collapsed into one.
 
 	// Do not call add(), as this should not clear the redo stack.
-	undos_.push_back(new undo::auto_shroud_action(turned_on));
+	add(new undo::auto_shroud_action(turned_on));
 }
 
 /**
@@ -209,8 +209,7 @@ void undo_list::add_update_shroud()
 {
 	/// @todo: Consecutive shroud actions can be collapsed into one.
 
-	// Do not call add(), as this should not clear the redo stack.
-	undos_.push_back(new undo::update_shroud_action());
+	add(new undo::update_shroud_action());
 }
 
 

