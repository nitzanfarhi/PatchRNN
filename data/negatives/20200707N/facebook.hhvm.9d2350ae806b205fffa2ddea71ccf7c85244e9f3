commit 9d2350ae806b205fffa2ddea71ccf7c85244e9f3
Author: Edwin Smith <smith@fb.com>
Date:   Fri Apr 22 14:22:42 2016 -0700

    Compact when last elem is deleted
    
    Summary:I noticed in some test cases that we had an average of 1.1
    probes per hashtable lookups on mixed arrays with size == 0.
    It turned out this was because of tombstones, because the array
    shrank to zero, but wasn't compacted. Update the compact heuristic
    to take care of this edge case.
    
    Reviewed By: markw65
    
    Differential Revision: D3196455
    
    fb-gh-sync-id: 5d71f622fcb51578c32ca23cd8da61d4365c516c
    fbshipit-source-id: 5d71f622fcb51578c32ca23cd8da61d4365c516c

diff --git a/hphp/runtime/base/mixed-array.h b/hphp/runtime/base/mixed-array.h
index 6ba274a074..a2df83b591 100644
--- a/hphp/runtime/base/mixed-array.h
+++ b/hphp/runtime/base/mixed-array.h
@@ -513,7 +513,7 @@ private:
   void eraseNoCompact(ssize_t pos);
   void erase(ssize_t pos) {
     eraseNoCompact(pos);
-    if (m_size < m_used / 2) {
+    if (m_size <= m_used / 2) {
       // Compact in order to keep elms from being overly sparse.
       compact(false);
     }

