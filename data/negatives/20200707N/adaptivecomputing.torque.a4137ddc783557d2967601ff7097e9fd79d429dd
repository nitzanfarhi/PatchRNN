commit a4137ddc783557d2967601ff7097e9fd79d429dd
Author: bdaw <bdaw@adaptivecomputing.com>
Date:   Wed Sep 11 15:56:52 2013 -0600

    trq-2169 Broke up a recursion situation by throwing each new request into the threadpool to be processed later.

diff --git a/src/server/issue_request.c b/src/server/issue_request.c
index 4ec9c674e..e35f2d598 100644
--- a/src/server/issue_request.c
+++ b/src/server/issue_request.c
@@ -255,12 +255,13 @@ void reissue_to_svr(
   time_t         time_now = time(NULL);
   char          *br_id = (char *)pwt->wt_parm1;
   batch_request *preq = get_remove_batch_request(br_id);
+  char *serverName = strdup(preq->rq_host);
 
   /* if not timed-out, retry send to remote server */
   if (preq != NULL)
     {
     if (((time_now - preq->rq_time) > PBS_NET_RETRY_LIMIT) ||
-        (issue_to_svr(preq->rq_host, preq, pwt->wt_parmfunc) != PBSE_NONE))
+        (issue_to_svr(serverName, preq, pwt->wt_parmfunc) != PBSE_NONE))
       {
       /* either timed-out or got hard error, tell post-function  */
       
@@ -272,6 +273,7 @@ void reissue_to_svr(
       }
     }
 
+  free(serverName);
   free(pwt->wt_mutex);
   free(pwt);
   }  /* END reissue_to_svr() */
@@ -371,6 +373,33 @@ int issue_to_svr(
   }  /* END issue_to_svr() */
 
 
+/*
+ * que_to_local_svr - queue a batch request to a local server to be
+ * processed on another thread.
+ * This function parses the server name, looks up its host address,
+ * makes a connection and called issue_request (above) to send
+ * the request.
+ *
+ * Returns:  0 on success,
+ *   -1 on permanent error (no such host)
+ *
+ * On temporary error, establish a work_task to retry after a delay.
+ */
+
+int que_to_local_svr(struct batch_request *preq)                     /* I */
+  {
+  preq->rq_fromsvr = 1;
+  preq->rq_perm = ATR_DFLAG_MGRD | ATR_DFLAG_MGWR | ATR_DFLAG_SvWR;
+
+  if (preq->rq_id == NULL)
+    get_batch_request_id(preq);
+
+  set_task(WORK_Immed, 0, reissue_to_svr, preq->rq_id, TRUE);
+  return(PBSE_NONE);
+  }  /* END issue_to_svr() */
+
+
+
 
 
 /*
diff --git a/src/server/req_register.c b/src/server/req_register.c
index 6591fbc7f..60d730cdf 100644
--- a/src/server/req_register.c
+++ b/src/server/req_register.c
@@ -118,6 +118,7 @@
 /* External functions */
 
 extern int issue_to_svr(char *svr, struct batch_request *, void (*func)(struct work_task *));
+extern int que_to_local_svr(struct batch_request *preq);
 extern long calc_job_cost(job *);
 
 
@@ -2411,7 +2412,17 @@ int send_depend_req(
   svraddr1 = get_hostaddr(&my_err, server_name);
   svraddr2 = get_hostaddr(&my_err, pparent->dc_svr);
 
-  if ((rc = issue_to_svr(pparent->dc_svr, preq, NULL)) != PBSE_NONE)
+  if(svraddr1 == svraddr2)
+    {
+    snprintf(preq->rq_host,sizeof(preq->rq_host),"%s",pparent->dc_svr);
+    rc = que_to_local_svr(preq);
+    }
+  else
+    {
+    rc = issue_to_svr(pparent->dc_svr, preq, NULL);
+    }
+
+  if (rc != PBSE_NONE)
     {
     /* local requests have already been processed and freed. Do not attempt to
      * free or reference again. */

