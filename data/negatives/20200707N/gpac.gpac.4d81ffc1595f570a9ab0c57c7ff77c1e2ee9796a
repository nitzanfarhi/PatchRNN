commit 4d81ffc1595f570a9ab0c57c7ff77c1e2ee9796a
Author: Jean Le Feuvre <jeanlf@users.sourceforge.net>
Date:   Tue May 29 17:03:17 2007 +0000

    no message
    
    
    git-svn-id: http://svn.code.sf.net/p/gpac/code/trunk/gpac@576 63c20433-aa62-49bd-875c-5a186b69a8fb

diff --git a/src/terminal/inline.c b/src/terminal/inline.c
index 535d18630..f7ccdad84 100644
--- a/src/terminal/inline.c
+++ b/src/terminal/inline.c
@@ -256,10 +256,14 @@ static void IS_InsertObject(GF_InlineScene *is, GF_MediaObject *mo, Bool lock_ti
 		esd->ESID = esd->OCRESID = 65534;
 		gf_list_add(odm->OD->ESDescriptors, esd);
 	} else {
-		char *frag = strrchr(mo->URLs.vals[0].url, '#');
-//		if (frag) frag[0] = 0;
-		odm->OD->URLString = strdup(mo->URLs.vals[0].url);
-//		if (frag) frag[0] = '#';
+		if (mo->type==GF_MEDIA_OBJECT_SCENE) {
+			char *frag = strrchr(mo->URLs.vals[0].url, '#');
+			if (frag) frag[0] = 0;
+			odm->OD->URLString = strdup(mo->URLs.vals[0].url);
+			if (frag) frag[0] = '#';
+		} else {
+			odm->OD->URLString = strdup(mo->URLs.vals[0].url);
+		}
 		if (lock_timelines) odm->flags |= GF_ODM_INHERIT_TIMELINE;
 	}
 
@@ -665,8 +669,10 @@ void gf_is_render(GF_Node *n, void *render_stack, Bool is_destroy)
 GF_EXPORT
 void gf_is_attach_to_renderer(GF_InlineScene *is)
 {
-	if (is->graph_attached==1) return;
-	if (gf_sg_get_root_node(is->graph)==NULL) return;
+	if ((is->graph_attached==1) || (gf_sg_get_root_node(is->graph)==NULL) ) {
+		gf_term_invalidate_renderer(is->root_od->term);
+		return;
+	}
 	is->graph_attached = 1;
 	/*main display scene, setup renderer*/
 	if (is->root_od->term->root_scene == is) {
diff --git a/src/terminal/media_object.c b/src/terminal/media_object.c
index 8bfeecd3d..a1679060e 100644
--- a/src/terminal/media_object.c
+++ b/src/terminal/media_object.c
@@ -369,8 +369,13 @@ void gf_mo_release_data(GF_MediaObject *mo, u32 nb_bytes, s32 forceDrop)
 		}
 
 		if (forceDrop<0) {
-			gf_odm_lock(mo->odm, 0);
-			return;
+			/*only allow for explicit last frame keeping if only one node is using the resource
+			otherwise this would block the composition memory*/
+			if (mo->num_open>1) forceDrop=0;
+			else {
+				gf_odm_lock(mo->odm, 0);
+				return;
+			}
 		}
 
 		/*discard frame*/

