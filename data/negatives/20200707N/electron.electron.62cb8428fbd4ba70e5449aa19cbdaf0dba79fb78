commit 62cb8428fbd4ba70e5449aa19cbdaf0dba79fb78
Author: deepak1556 <hop2deep@gmail.com>
Date:   Wed Aug 24 20:22:35 2016 +0530

    use schemes from global instead of commandline

diff --git a/atom/browser/atom_browser_client.cc b/atom/browser/atom_browser_client.cc
index 87f18316a..80951e7d6 100644
--- a/atom/browser/atom_browser_client.cc
+++ b/atom/browser/atom_browser_client.cc
@@ -9,6 +9,7 @@
 #endif
 
 #include "atom/browser/api/atom_api_app.h"
+#include "atom/browser/api/atom_api_protocol.h"
 #include "atom/browser/atom_access_token_store.h"
 #include "atom/browser/atom_browser_context.h"
 #include "atom/browser/atom_browser_main_parts.h"
@@ -24,7 +25,6 @@
 #include "base/files/file_util.h"
 #include "base/stl_util.h"
 #include "base/strings/string_number_conversions.h"
-#include "base/strings/string_split.h"
 #include "base/strings/string_util.h"
 #include "chrome/browser/printing/printing_message_filter.h"
 #include "chrome/browser/renderer_host/pepper/chrome_browser_pepper_host_factory.h"
@@ -282,17 +282,11 @@ bool AtomBrowserClient::CanCreateWindow(
 
 void AtomBrowserClient::GetAdditionalAllowedSchemesForFileSystem(
     std::vector<std::string>* additional_schemes) {
-  // Parse --standard-schemes=scheme1,scheme2
-  base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
-  std::string custom_schemes = command_line->GetSwitchValueASCII(
-      switches::kStandardSchemes);
-  if (!custom_schemes.empty()) {
-    std::vector<std::string> schemes_list = base::SplitString(
-        custom_schemes, ",", base::TRIM_WHITESPACE, base::SPLIT_WANT_NONEMPTY);
+  auto schemes_list = api::GetStandardSchemes();
+  if (!schemes_list.empty())
     additional_schemes->insert(additional_schemes->end(),
                                schemes_list.begin(),
                                schemes_list.end());
-  }
 }
 
 brightray::BrowserMainParts* AtomBrowserClient::OverrideCreateBrowserMainParts(

