commit eba32cfeb1935cc7e901c24736a8983cfe0f0f19
Author: Vassil Vassilev <vasil.georgiev.vasilev@cern.ch>
Date:   Thu Jul 26 13:42:31 2012 +0000

    Allocate storage only if we will fill it.
    
    
    git-svn-id: http://root.cern.ch/svn/root/trunk@45238 27541ba8-7e3a-0410-8455-c3a389f83636

diff --git a/cint/cling/lib/Interpreter/DeclExtractor.cpp b/cint/cling/lib/Interpreter/DeclExtractor.cpp
index 9360d5d8d8..0a313e3f02 100644
--- a/cint/cling/lib/Interpreter/DeclExtractor.cpp
+++ b/cint/cling/lib/Interpreter/DeclExtractor.cpp
@@ -44,12 +44,12 @@ namespace cling {
 
   bool DeclExtractor::ExtractDecl(Decl* D) {
     FunctionDecl* FD = dyn_cast<FunctionDecl>(D);
-    llvm::SmallVector<NamedDecl*, 4> TouchedDecls;
 
     if (FD) {
       if (FD->getNameAsString().find("__cling_Un1Qu3"))
         return true;
 
+      llvm::SmallVector<NamedDecl*, 4> TouchedDecls;
       CompoundStmt* CS = dyn_cast<CompoundStmt>(FD->getBody());
       assert(CS && "Function body not a CompoundStmt?");
       DeclContext* DC = FD->getTranslationUnitDecl();
@@ -57,8 +57,7 @@ namespace cling {
       assert(TUScope == m_Sema->getScopeForContext(DC) && "TU scope from DC?");
       llvm::SmallVector<Stmt*, 4> Stmts;
 
-      for (CompoundStmt::body_iterator I = CS->body_begin(),
-             EI = CS->body_end();
+      for (CompoundStmt::body_iterator I = CS->body_begin(), EI = CS->body_end();
            I != EI; ++I) {
         DeclStmt* DS = dyn_cast<DeclStmt>(*I);
         if (!DS) {

