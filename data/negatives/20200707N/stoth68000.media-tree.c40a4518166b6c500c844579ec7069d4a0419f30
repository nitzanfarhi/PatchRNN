commit c40a4518166b6c500c844579ec7069d4a0419f30
Author: Matthew Garrett <mjg59@srcf.ucam.org>
Date:   Sun Jan 20 10:24:26 2013 +0000

    acpi-cpufreq: Do not load on K8
    
    de3ed81d746d ("[CPUFREQ] Change link order of x86 cpufreq modules")
    changed cpufreq drivers link order so that powernow-k8 gets loaded first
    due to earlier K8s having BIOS bugs.
    
    However, now that acpi-cpufreq supports both AMD and Intel CPUs with HW
    P-states, we want to load it first, so that cases where acpi-cpufreq and
    powernow-k8 are both built-in and powernow-k8 initializing first, can be
    addressed.
    
    So, make sure that even if acpi-cpufreq gets loaded first, it errors out
    on K8s and powernow-k8 can be loaded then successfully.
    
    Signed-off-by: Matthew Garrett <mjg59@srcf.ucam.org>
    References: http://lkml.kernel.org/r/20130118162347.GA31499@srcf.ucam.org
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

diff --git a/drivers/cpufreq/acpi-cpufreq.c b/drivers/cpufreq/acpi-cpufreq.c
index 7b0d49d78c61..22f9b47c5c74 100644
--- a/drivers/cpufreq/acpi-cpufreq.c
+++ b/drivers/cpufreq/acpi-cpufreq.c
@@ -762,6 +762,12 @@ static int acpi_cpufreq_cpu_init(struct cpufreq_policy *policy)
 
 	switch (perf->control_register.space_id) {
 	case ACPI_ADR_SPACE_SYSTEM_IO:
+		if (boot_cpu_data.x86_vendor == X86_VENDOR_AMD &&
+		    boot_cpu_data.x86 == 0xf) {
+			pr_debug("AMD K8 systems must use native drivers.\n");
+			result = -ENODEV;
+			goto err_unreg;
+		}
 		pr_debug("SYSTEM IO addr space\n");
 		data->cpu_feature = SYSTEM_IO_CAPABLE;
 		break;

