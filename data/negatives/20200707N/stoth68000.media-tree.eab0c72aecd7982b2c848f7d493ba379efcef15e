commit eab0c72aecd7982b2c848f7d493ba379efcef15e
Author: Rusty Russell <rusty@rustcorp.com.au>
Date:   Wed May 2 19:27:09 2007 +0200

    [PATCH] x86-64: Introduce load_TLS to the "for" loop.
    
    GCC (4.1 at least) unrolls it anyway, but I can't believe this code
    was ever justifiable.  (I've also submitted a patch which cleans up
    i386, which is even uglier).
    
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Andi Kleen <ak@suse.de>
    Cc: Andi Kleen <ak@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>

diff --git a/include/asm-x86_64/desc.h b/include/asm-x86_64/desc.h
index 7726e74db536..ac991b5ca0fd 100644
--- a/include/asm-x86_64/desc.h
+++ b/include/asm-x86_64/desc.h
@@ -135,16 +135,13 @@ static inline void set_ldt_desc(unsigned cpu, void *addr, int size)
 	(info)->useable		== 0	&& \
 	(info)->lm		== 0)
 
-#if TLS_SIZE != 24
-# error update this code.
-#endif
-
 static inline void load_TLS(struct thread_struct *t, unsigned int cpu)
 {
+	unsigned int i;
 	u64 *gdt = (u64 *)(cpu_gdt(cpu) + GDT_ENTRY_TLS_MIN);
-	gdt[0] = t->tls_array[0];
-	gdt[1] = t->tls_array[1];
-	gdt[2] = t->tls_array[2];
+
+	for (i = 0; i < GDT_ENTRY_TLS_ENTRIES; i++)
+		gdt[i] = t->tls_array[i];
 } 
 
 /*

