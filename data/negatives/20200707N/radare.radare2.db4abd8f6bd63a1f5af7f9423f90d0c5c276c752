commit db4abd8f6bd63a1f5af7f9423f90d0c5c276c752
Author: Kai Renken <code@koffeinsucht.de>
Date:   Wed Mar 18 12:48:30 2015 +0100

    Fix #2061 - Add JSON style output to radiff2

diff --git a/binr/radiff2/radiff2.c b/binr/radiff2/radiff2.c
index 6bdc161d2..a81c0b346 100644
--- a/binr/radiff2/radiff2.c
+++ b/binr/radiff2/radiff2.c
@@ -2,6 +2,7 @@
 
 #include <r_diff.h>
 #include <r_core.h>
+#include <r_hash.h>
 
 enum {
 	MODE_DIFF,
@@ -16,14 +17,17 @@ static int showcount = 0;
 static int useva = R_TRUE;
 static int delta = 0;
 static int showbare = R_FALSE;
+static int json_started = 0;
+static int diffmode = 0; 
 
 static int cb(RDiff *d, void *user, RDiffOp *op) {
-	int i, rad = (int)(size_t)user;
+	int i; //, diffmode = (int)(size_t)user;
 	if (showcount) {
 		count++;
 		return 1;
 	}
-	if (rad) {
+	switch (diffmode) {
+	case 'r':
 		if (op->a_len == op->b_len) {
 			printf ("wx ");
 			for (i=0; i<op->b_len; i++)
@@ -43,7 +47,22 @@ static int cb(RDiff *d, void *user, RDiffOp *op) {
 			}
 			delta += (op->b_off - op->a_off);
 		}
-	} else {
+		return 1;
+	case 'j':
+		if (json_started)
+			printf(",\n");
+		json_started = 1;
+		printf ("{\"offset\":%d,", op->a_off);
+		printf("\"from\":\"");
+		for (i = 0;i<op->a_len;i++)
+			printf ("%02x", op->a_buf[i]);
+		printf ("\", \"to\":\"");
+		for (i=0; i<op->b_len; i++)
+			printf ("%02x", op->b_buf[i]);
+		printf ("\"}"); //,\n");
+		return 1;
+	case 0:
+	default:
 		printf ("0x%08"PFMT64x" ", op->a_off);
 		for (i = 0;i<op->a_len;i++)
 			printf ("%02x", op->a_buf[i]);
@@ -51,8 +70,8 @@ static int cb(RDiff *d, void *user, RDiffOp *op) {
 		for (i=0; i<op->b_len; i++)
 			printf ("%02x", op->b_buf[i]);
 		printf (" 0x%08"PFMT64x"\n", op->b_off);
+		return 1;
 	}
-	return 1;
 }
 
 static RCore* opencore(const char *f) {
@@ -124,6 +143,14 @@ static void dump_cols (ut8 *a, int as, ut8 *b, int bs, int w) {
 		printf ("...\n");
 }
 
+static void handle_sha256 (const ut8 *block, int len) {
+	int i = 0;
+	RHash *ctx = r_hash_new (R_TRUE, R_HASH_SHA256);
+	const ut8 *c = r_hash_do_sha256 (ctx, block, len);
+	for (i=0; i<R_HASH_SIZE_SHA256; i++) printf ("%02x", c[i]);
+	r_hash_free (ctx);
+}
+
 int main(int argc, char **argv) {
 	const char *addr = NULL;
 	RCore *c, *c2;
@@ -132,13 +159,13 @@ int main(int argc, char **argv) {
 	int bits = 0;
 	char *file, *file2;
 	ut8 *bufa, *bufb;
-	int o, sza, szb, rad = 0, delta = 0;
+	int o, sza, szb, /*diffmode = 0,*/ delta = 0;
 	int mode = MODE_DIFF;
 	int diffops = 0;
 	int threshold = -1;
 	double sim;
 
-	while ((o = getopt (argc, argv, "a:b:Cnpg:Orhcdsvxt:")) != -1) {
+	while ((o = getopt (argc, argv, "a:b:Cnpg:Ojrhcdsvxt:")) != -1) {
 		switch (o) {
 		case 'a':
 			arch = optarg;
@@ -150,7 +177,7 @@ int main(int argc, char **argv) {
 			useva = R_FALSE;
 			break;
 		case 'r':
-			rad = 1;
+			diffmode = 'r';
 			break;
 		case 'g':
 			mode = MODE_GRAPH;
@@ -185,6 +212,9 @@ int main(int argc, char **argv) {
 		case 'v':
 			printf ("radiff2 v"R2_VERSION"\n");
 			return 0;
+		case 'j':
+			diffmode = 'j';
+			break;
 		default:
 			return show_help (0);
 		}
@@ -271,8 +301,18 @@ int main(int argc, char **argv) {
 	case MODE_DIFF:
 		d = r_diff_new (0LL, 0LL);
 		r_diff_set_delta (d, delta);
-		r_diff_set_callback (d, &cb, (void *)(size_t)rad);
+		if (diffmode == 'j') {
+			printf("{\"files\":[{\"filename\":\"%s\", \"size\":%d, \"sha256\":\"", file, sza); 
+			handle_sha256 (bufa, sza);
+			printf("\"},\n{\"filename\":\"%s\", \"size\":%d, \"sha256\":\"", file2, szb);
+			handle_sha256 (bufb, szb);
+			printf("\"}],\n");
+			printf("\"changes\":[");
+		}
+		r_diff_set_callback (d, &cb, 0);//(void *)(size_t)diffmode);
 		r_diff_buffers (d, bufa, sza, bufb, szb);
+		if (diffmode == 'j')
+			printf("]}\n");
 		r_diff_free (d);
 		break;
 	case MODE_DIST:

