commit e83b171568e6a69cff5eb592907b71e480b535ac
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Oct 20 15:59:30 2017 -0700

    net: systemport: Guard against unmapped TX ring
    
    Because SYSTEMPORT is a (semi) normal network device, the stack may attempt to
    queue packets on it oustide of the DSA slave transmit path.  When that happens,
    the DSA layer has not had a chance to tag packets with the appropriate per-port
    and per-queue information, and if that happens and we don't have a port 0 queue
    0 available (e.g: on boards where this does not exist), we will hit a NULL
    pointer de-reference in bcm_sysport_select_queue().
    
    Guard against such cases by testing for the TX ring validity.
    
    Fixes: 84ff33eeb23d ("net: systemport: Establish DSA network device queue mapping")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bcmsysport.c b/drivers/net/ethernet/broadcom/bcmsysport.c
index dafc26690555..1d9d5f986e14 100644
--- a/drivers/net/ethernet/broadcom/bcmsysport.c
+++ b/drivers/net/ethernet/broadcom/bcmsysport.c
@@ -2040,6 +2040,9 @@ static u16 bcm_sysport_select_queue(struct net_device *dev, struct sk_buff *skb,
 	port = BRCM_TAG_GET_PORT(queue);
 	tx_ring = priv->ring_map[q + port * priv->per_port_num_tx_queues];
 
+	if (unlikely(!tx_ring))
+		return fallback(dev, skb);
+
 	return tx_ring->index;
 }
 

