commit 2d9c86774756193edff2a2a9077264f666c626de
Author: Rafael J. Wysocki <rjw@sisk.pl>
Date:   Mon Jul 30 22:40:32 2012 +0200

    ACPI / PCI: Do not try to acquire _OSC control if that is hopeless
    
    If acpi_pci_osc_support() fails for the given flags, it doesn't make
    sense to call acpi_pci_osc_control_set() down the road for the same
    flags, because it will certainly fail too.  Moreover, problem
    diagnostics is then harder, because it is not too easy to identify
    the reason of the _OSC failure in those cases.
    
    For this reason, check the status returned by acpi_pci_osc_support()
    for PCIe support flags and do not attempt to execute
    acpi_pci_osc_control_set() for those flags and print a message if
    it's "failure".  For compatibility with the existing code, disable
    ASPM in that case too.
    
    Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
    Signed-off-by: Len Brown <len.brown@intel.com>

diff --git a/drivers/acpi/pci_root.c b/drivers/acpi/pci_root.c
index 7aff6312ce7c..c86b39217400 100644
--- a/drivers/acpi/pci_root.c
+++ b/drivers/acpi/pci_root.c
@@ -571,8 +571,15 @@ static int __devinit acpi_pci_root_add(struct acpi_device *device)
 			OSC_CLOCK_PWR_CAPABILITY_SUPPORT;
 	if (pci_msi_enabled())
 		flags |= OSC_MSI_SUPPORT;
-	if (flags != base_flags)
-		acpi_pci_osc_support(root, flags);
+	if (flags != base_flags) {
+		status = acpi_pci_osc_support(root, flags);
+		if (ACPI_FAILURE(status)) {
+			dev_info(root->bus->bridge, "ACPI _OSC support "
+				"notification failed, disabling PCIe ASPM\n");
+			pcie_no_aspm();
+			flags = base_flags;
+		}
+	}
 
 	if (!pcie_ports_disabled
 	    && (flags & ACPI_PCIE_REQ_SUPPORT) == ACPI_PCIE_REQ_SUPPORT) {

