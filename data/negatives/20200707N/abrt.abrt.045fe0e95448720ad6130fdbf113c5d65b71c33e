commit 045fe0e95448720ad6130fdbf113c5d65b71c33e
Author: Jakub Filak <jfilak@redhat.com>
Date:   Fri Aug 26 11:39:05 2016 +0200

    lib: normalize slashes of configured paths
    
    ABRT tools often compare file system paths. This is stemming from the
    nature of ABRT data that are regular directories and files.
    
    To make those compassions reliable one must compare canonical paths.
    
    This patch adds normalization/canonicalization of slashes of paths
    defined in configuration files.
    
    Please notice that we cannot use the realpath function because it works
    only for existing files and directories and, for example, paths of the
    DumpLocation option may not exist.
    
    I intentionally ignore "." and ".." because I do not expect users to put
    such paths to configuration file and I do not want to make the
    processing too complex. On the other hand, slashes can be multiplied by
    accident or by a script.
    
    Signed-off-by: Jakub Filak <jfilak@redhat.com>

diff --git a/src/lib/abrt_conf.c b/src/lib/abrt_conf.c
index 345541f1..bea051b4 100644
--- a/src/lib/abrt_conf.c
+++ b/src/lib/abrt_conf.c
@@ -39,6 +39,29 @@ void free_abrt_conf_data()
     g_settings_dump_location = NULL;
 }
 
+/* Beware - the function normalizes only slashes - that's the most often
+ * problem we have to face.
+ */
+static char *xstrdup_normalized_path(const char *path)
+{
+    const size_t len = strlen(path);
+    char *const res = xzalloc(len + 1);
+
+    res[0] = path[0];
+
+    const char *p = path + 1;
+    char *r = res;
+    for (; p - path < len; ++p)
+        if (*p != '/' || *r != '/')
+            *++r = *p;
+
+    /* remove trailing slash if the path is not '/' */
+    if (r - res > 1 && *r == '/')
+        *r = '\0';
+
+    return res;
+}
+
 static void ParseCommon(map_string_t *settings, const char *conf_filename)
 {
     const char *value;
@@ -46,7 +69,7 @@ static void ParseCommon(map_string_t *settings, const char *conf_filename)
     value = get_map_string_item_or_NULL(settings, "WatchCrashdumpArchiveDir");
     if (value)
     {
-        g_settings_sWatchCrashdumpArchiveDir = xstrdup(value);
+        g_settings_sWatchCrashdumpArchiveDir = xstrdup_normalized_path(value);
         remove_map_string_item(settings, "WatchCrashdumpArchiveDir");
     }
 
@@ -66,7 +89,7 @@ static void ParseCommon(map_string_t *settings, const char *conf_filename)
     value = get_map_string_item_or_NULL(settings, "DumpLocation");
     if (value)
     {
-        g_settings_dump_location = xstrdup(value);
+        g_settings_dump_location = xstrdup_normalized_path(value);
         remove_map_string_item(settings, "DumpLocation");
     }
     else

