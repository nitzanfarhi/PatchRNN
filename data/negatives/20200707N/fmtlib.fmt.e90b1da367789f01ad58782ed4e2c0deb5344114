commit e90b1da367789f01ad58782ed4e2c0deb5344114
Author: Sebastian KÃ¶nig <skoenig@gmail.com>
Date:   Wed Mar 28 18:33:49 2018 +0200

    Fix linker errors using fmt as shared library in MSVC

diff --git a/include/fmt/core.h b/include/fmt/core.h
index fd53cfb..0d5b9c2 100644
--- a/include/fmt/core.h
+++ b/include/fmt/core.h
@@ -405,7 +405,7 @@ struct error_handler {
   FMT_CONSTEXPR error_handler(const error_handler &) {}
 
   // This function is intentionally not constexpr to give a compile-time error.
-  void on_error(const char *message);
+  FMT_API void on_error(const char *message);
 };
 
 // Formatting of wide characters and strings into a narrow output is disallowed:
diff --git a/include/fmt/format.h b/include/fmt/format.h
index 0e25c4a..db3a7c8 100644
--- a/include/fmt/format.h
+++ b/include/fmt/format.h
@@ -905,7 +905,7 @@ class add_thousands_sep {
 };
 
 template <typename Char>
-Char thousands_sep(locale_provider *lp);
+FMT_API Char thousands_sep(locale_provider *lp);
 
 // Formats a decimal unsigned integer value writing into buffer.
 // thousands_sep is a functor that is called after writing each char to
diff --git a/src/format.cc b/src/format.cc
index 1e164f9..738fd44 100644
--- a/src/format.cc
+++ b/src/format.cc
@@ -13,7 +13,7 @@ template struct internal::basic_data<void>;
 
 // Explicit instantiations for char.
 
-template char internal::thousands_sep(locale_provider *lp);
+template FMT_API char internal::thousands_sep(locale_provider *lp);
 
 template void basic_fixed_buffer<char>::grow(std::size_t);
 
@@ -30,7 +30,7 @@ template FMT_API int internal::char_traits<char>::format_float(
 
 // Explicit instantiations for wchar_t.
 
-template wchar_t internal::thousands_sep(locale_provider *lp);
+template FMT_API wchar_t internal::thousands_sep(locale_provider *lp);
 
 template void basic_fixed_buffer<wchar_t>::grow(std::size_t);
 

