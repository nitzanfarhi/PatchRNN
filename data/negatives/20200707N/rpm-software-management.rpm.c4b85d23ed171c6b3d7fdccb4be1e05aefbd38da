commit c4b85d23ed171c6b3d7fdccb4be1e05aefbd38da
Author: ewt <devnull@localhost>
Date:   Fri Jan 8 03:12:11 1999 +0000

    const cleanups
    
    CVS patchset: 2680
    CVS date: 1999/01/08 03:12:11

diff --git a/lib/depends.h b/lib/depends.h
index ec1c1d147..1a9f98cac 100644
--- a/lib/depends.h
+++ b/lib/depends.h
@@ -11,7 +11,7 @@ struct availablePackage {
     char ** files;
     char * name, * version, * release;
     int epoch, hasEpoch, providesCount, filesCount;
-    void * key;
+    const void * key;
     rpmRelocation * relocs;
     FD_t fd;
 } ;
diff --git a/lib/rpmlib.h b/lib/rpmlib.h
index 9a9404e0c..828b81b1e 100644
--- a/lib/rpmlib.h
+++ b/lib/rpmlib.h
@@ -339,19 +339,19 @@ struct rpmDependencyConflict {
        which isn't needed as well */
     char * needsName, * needsVersion;
     int needsFlags;
-    void * suggestedPackage;			/* NULL if none */
+    const void * suggestedPackage;			/* NULL if none */
     enum { RPMDEP_SENSE_REQUIRES, RPMDEP_SENSE_CONFLICTS } sense;
 } ;
 
 /* db may be NULL, but don't do things which require the database! */
-/*@only@*/ rpmTransactionSet rpmtransCreateSet(rpmdb db, char * rootdir);
+/*@only@*/ rpmTransactionSet rpmtransCreateSet(rpmdb db, const char * rootdir);
 
 /* if fd is NULL, the callback specified in rpmtransCreateSet() is used to
    open and close the file descriptor. If Header is NULL, the fd is always
    used, otherwise fd is only needed (and only opened) for actual package 
    installation */
 int rpmtransAddPackage(rpmTransactionSet rpmdep, Header h, FD_t fd,
-			void * key, int update, rpmRelocation * relocs);
+			const void * key, int update, rpmRelocation * relocs);
 void rpmtransAvailablePackage(rpmTransactionSet rpmdep, Header h, void * key);
 void rpmtransRemovePackage(rpmTransactionSet rpmdep, int dboffset);
 void rpmtransFree(/*@only@*/ rpmTransactionSet rpmdep);
@@ -380,7 +380,7 @@ typedef enum rpmProblemType_e { RPMPROB_BADARCH,
 
 typedef struct rpmProblem_s {
     Header h, altH;
-    void * key;
+    const void * key;
     rpmProblemType type;
     int ignoreProblem;
     char * str1;

