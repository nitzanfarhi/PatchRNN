commit 99602572812442d47403d85f376ad51298dd82a6
Author: Masami Hiramatsu <mhiramat@redhat.com>
Date:   Mon Apr 28 02:14:27 2008 -0700

    list.h: add list_is_singular()
    
    Add list_is_singular() to check a list has just one entry.
    
    list_is_singular() is useful to check whether a list_head which have been
    temporarily allocated for listing objects can be released or not.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@redhat.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/include/linux/list.h b/include/linux/list.h
index dac16f99c701..b4a939b6b625 100644
--- a/include/linux/list.h
+++ b/include/linux/list.h
@@ -319,6 +319,15 @@ static inline int list_empty_careful(const struct list_head *head)
 	return (next == head) && (next == head->prev);
 }
 
+/**
+ * list_is_singular - tests whether a list has just one entry.
+ * @head: the list to test.
+ */
+static inline int list_is_singular(const struct list_head *head)
+{
+	return !list_empty(head) && (head->next == head->prev);
+}
+
 static inline void __list_splice(struct list_head *list,
 				 struct list_head *head)
 {

