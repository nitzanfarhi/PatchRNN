commit 9db619e66503494e41159de3c76fafabe80d016b
Author: Wolfgang Walter <wolfgang.walter@studentenwerk.mhn.de>
Date:   Thu Sep 20 15:51:46 2007 -0400

    rpc: fix garbage in printk in svc_tcp_accept()
    
    we upgraded the kernel of a nfs-server from 2.6.17.11 to 2.6.22.6. Since
    then we get the message
    
    lockd: too many open TCP sockets, consider increasing the number of nfsd threads
    lockd: last TCP connect from ^\\236^\Ã‰^D
    
    These random characters in the second line are caused by a bug in
    svc_tcp_accept.
    
    (Note: there are two previous __svc_print_addr(sin, buf, sizeof(buf))
    calls in this function, either of which would initialize buf correctly;
    but both are inside "if"'s and are not necessarily executed.  This is
    less obvious in the second case, which is inside a dprintk(), which is a
    macro which expands to an if statement.)
    
    Signed-off-by: Wolfgang Walter <wolfgang.walter@studentenwerk.mhn.de>
    Signed-off-by: J. Bruce Fields <bfields@citi.umich.edu>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/net/sunrpc/svcsock.c b/net/sunrpc/svcsock.c
index 1a899924023f..036ab520df21 100644
--- a/net/sunrpc/svcsock.c
+++ b/net/sunrpc/svcsock.c
@@ -1110,7 +1110,8 @@ svc_tcp_accept(struct svc_sock *svsk)
 						   serv->sv_name);
 				printk(KERN_NOTICE
 				       "%s: last TCP connect from %s\n",
-				       serv->sv_name, buf);
+				       serv->sv_name, __svc_print_addr(sin,
+							buf, sizeof(buf)));
 			}
 			/*
 			 * Always select the oldest socket. It's not fair,

