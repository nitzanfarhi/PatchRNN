commit bac821a6e3404330d509fd3a245bf7701f210c7c
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Wed Jul 18 12:35:28 2012 +0000

    powerpc/ftrace: Trace function graph entry before updating index
    
    As Colin Cross ported my x86 change to ARM, he also pointed out that
    powerpc is also behind in this fix.
    
    The commit 722b3c746953 "ftrace/graph: Trace function entry before
    updating index" fixes an issue with function graph tracing for x86,
    where if the called entry function decides not to trace interrupts, it
    can fail the check if an interrupt comes in just after the
    curr_ret_stack is updated.
    
    The solution is to call the entry function first, then update the
    curr_ret_stack if the entry function wants to be traced.
    
    Cc: Colin Cross <ccross@android.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/kernel/ftrace.c b/arch/powerpc/kernel/ftrace.c
index 91b46b7f6f0d..1fb78561096a 100644
--- a/arch/powerpc/kernel/ftrace.c
+++ b/arch/powerpc/kernel/ftrace.c
@@ -630,18 +630,17 @@ void prepare_ftrace_return(unsigned long *parent, unsigned long self_addr)
 		return;
 	}
 
-	if (ftrace_push_return_trace(old, self_addr, &trace.depth, 0) == -EBUSY) {
-		*parent = old;
-		return;
-	}
-
 	trace.func = self_addr;
+	trace.depth = current->curr_ret_stack + 1;
 
 	/* Only trace if the calling function expects to */
 	if (!ftrace_graph_entry(&trace)) {
-		current->curr_ret_stack--;
 		*parent = old;
+		return;
 	}
+
+	if (ftrace_push_return_trace(old, self_addr, &trace.depth, 0) == -EBUSY)
+		*parent = old;
 }
 #endif /* CONFIG_FUNCTION_GRAPH_TRACER */
 

