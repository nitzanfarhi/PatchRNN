commit 27012382bc221a8cf6ca67ced19df699b0ba8e78
Author: Lars Ellenberg <lars.ellenberg@linbit.com>
Date:   Tue Jul 24 10:13:55 2012 +0200

    drbd: take error path in drbd_adm_down if interrupted by signal
    
    drbd_adm_down() does adm_detach(), which can fail with various error
    codes, or be interrupted by a signal.
    
    The interrupted by signal case was not properly handled,
    leading to
            block drbd0: ASSERT( mdev->state.disk == D_DISKLESS &&
                                 mdev->state.conn == C_STANDALONE ) in drbd/drbd_worker.c
    and further to destroying objects while still in use, and resulting crashes.
    
    Detect the interruption, and take the error path out.
    
    Signed-off-by: Philipp Reisner <philipp.reisner@linbit.com>
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>

diff --git a/drivers/block/drbd/drbd_nl.c b/drivers/block/drbd/drbd_nl.c
index bbc5c2f4a9b4..323293e88878 100644
--- a/drivers/block/drbd/drbd_nl.c
+++ b/drivers/block/drbd/drbd_nl.c
@@ -3188,7 +3188,7 @@ int drbd_adm_down(struct sk_buff *skb, struct genl_info *info)
 	/* detach */
 	idr_for_each_entry(&adm_ctx.tconn->volumes, mdev, i) {
 		retcode = adm_detach(mdev, 0);
-		if (retcode < SS_SUCCESS) {
+		if (retcode < SS_SUCCESS || retcode > NO_ERROR) {
 			drbd_msg_put_info("failed to detach");
 			goto out;
 		}

