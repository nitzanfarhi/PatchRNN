commit 6929e24e4cc46ce8d5b7dd8f8bdf4244c8d77f76
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 14 17:53:01 2013 +0100

    net: cwdavinci_cpdma: export symbols for cpsw
    
    With the support for ARM AM33xx in multiplatform kernels
    in 3.9, an older bug appears in ARM allmodconfig:
    When the cpsw driver is built as a module with cpdma
    support enabled, it uses symbols that the cpdma driver
    does not export.
    
    Without this patch, building allmodconfig results in:
    
    ERROR: "cpdma_ctlr_int_ctrl" [drivers/net/ethernet/ti/ti_cpsw.ko] undefined!
    ERROR: "cpdma_control_set" [drivers/net/ethernet/ti/ti_cpsw.ko] undefined!
    ERROR: "cpdma_ctlr_eoi" [drivers/net/ethernet/ti/ti_cpsw.ko] undefined!
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: David S. Miller <davem@davemloft.net>
    Cc: Mugunthan V N <mugunthanvnm@ti.com>
    Cc: Vaibhav Hiremath <hvaibhav@ti.com>
    Cc: Richard Cochran <richardcochran@gmail.com>
    Cc: netdev@vger.kernel.org

diff --git a/drivers/net/ethernet/ti/davinci_cpdma.c b/drivers/net/ethernet/ti/davinci_cpdma.c
index 49956730cd8d..1abe0964a5ab 100644
--- a/drivers/net/ethernet/ti/davinci_cpdma.c
+++ b/drivers/net/ethernet/ti/davinci_cpdma.c
@@ -473,11 +473,13 @@ int cpdma_ctlr_int_ctrl(struct cpdma_ctlr *ctlr, bool enable)
 	spin_unlock_irqrestore(&ctlr->lock, flags);
 	return 0;
 }
+EXPORT_SYMBOL_GPL(cpdma_ctlr_int_ctrl);
 
 void cpdma_ctlr_eoi(struct cpdma_ctlr *ctlr)
 {
 	dma_reg_write(ctlr, CPDMA_MACEOIVECTOR, 0);
 }
+EXPORT_SYMBOL_GPL(cpdma_ctlr_eoi);
 
 struct cpdma_chan *cpdma_chan_create(struct cpdma_ctlr *ctlr, int chan_num,
 				     cpdma_handler_fn handler)
@@ -984,3 +986,4 @@ int cpdma_control_set(struct cpdma_ctlr *ctlr, int control, int value)
 	spin_unlock_irqrestore(&ctlr->lock, flags);
 	return ret;
 }
+EXPORT_SYMBOL_GPL(cpdma_control_set);

