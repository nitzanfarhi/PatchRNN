commit dc10c643e8a8d008fd16dd6706e9e0018eadf8d2
Author: NeilBrown <neilb@suse.de>
Date:   Mon Mar 19 12:46:37 2012 +1100

    md: allow re-add to failed arrays.
    
    When an array is failed (some data inaccessible) then there is no
    point attempting to add a spare as it could not possibly be recovered.
    
    However that may be value in re-adding a recently removed device.
    e.g. if there is a write-intent-bitmap and it is clear, then access
    to the data could be restored by this action.
    
    So don't reject a re-add to a failed array for RAID10 and RAID5 (the
    only arrays  types that check for a failed array).
    
    Signed-off-by: NeilBrown <neilb@suse.de>

diff --git a/drivers/md/raid10.c b/drivers/md/raid10.c
index 1a19c962f860..f4f3edcdaf8d 100644
--- a/drivers/md/raid10.c
+++ b/drivers/md/raid10.c
@@ -1483,7 +1483,7 @@ static int raid10_add_disk(struct mddev *mddev, struct md_rdev *rdev)
 		 * very different from resync
 		 */
 		return -EBUSY;
-	if (!enough(conf, -1))
+	if (rdev->saved_raid_disk < 0 && !enough(conf, -1))
 		return -EINVAL;
 
 	if (rdev->raid_disk >= 0)
diff --git a/drivers/md/raid5.c b/drivers/md/raid5.c
index 99b2bbf8b5d8..d38d235cc39d 100644
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -5361,7 +5361,7 @@ static int raid5_add_disk(struct mddev *mddev, struct md_rdev *rdev)
 	if (mddev->recovery_disabled == conf->recovery_disabled)
 		return -EBUSY;
 
-	if (has_failed(conf))
+	if (rdev->saved_raid_disk < 0 && has_failed(conf))
 		/* no point adding a device */
 		return -EINVAL;
 

