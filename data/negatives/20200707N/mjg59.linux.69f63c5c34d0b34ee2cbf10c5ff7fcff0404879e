commit 69f63c5c34d0b34ee2cbf10c5ff7fcff0404879e
Author: KAMBAROV, ZAUR <kambarov@berkeley.edu>
Date:   Tue Jun 28 20:45:12 2005 -0700

    [PATCH] coverity: tty_ldisc_ref return null check
    
    We add a check of the return value of tty_ldisc_ref(), which
    is checked 7 out of 8 times, e.g.:
    
    149             ld = tty_ldisc_ref(tty);
    150             if (ld != NULL) {
    151                     if (ld->set_termios)
    152                             (ld->set_termios)(tty, &old_termios);
    153                     tty_ldisc_deref(ld);
    154             }
    
    This defect was found automatically by Coverity Prevent, a static analysis
    tool.
    
    (akpm: presumably `ld' is never NULL.  Oh well)
    
    Signed-off-by: Zaur Kambarov <zkambarov@coverity.com>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/drivers/char/tty_ioctl.c b/drivers/char/tty_ioctl.c
index 58597993954f..f19cf9d7792d 100644
--- a/drivers/char/tty_ioctl.c
+++ b/drivers/char/tty_ioctl.c
@@ -476,11 +476,11 @@ int n_tty_ioctl(struct tty_struct * tty, struct file * file,
 			ld = tty_ldisc_ref(tty);
 			switch (arg) {
 			case TCIFLUSH:
-				if (ld->flush_buffer)
+				if (ld && ld->flush_buffer)
 					ld->flush_buffer(tty);
 				break;
 			case TCIOFLUSH:
-				if (ld->flush_buffer)
+				if (ld && ld->flush_buffer)
 					ld->flush_buffer(tty);
 				/* fall through */
 			case TCOFLUSH:

