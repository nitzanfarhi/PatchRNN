commit 8d7da1d8c2aa5564af442b4371216b4a4288cd5a
Author: Alexander Curtin <alexander.curtin@unisys.com>
Date:   Wed Mar 23 22:15:51 2016 -0400

    staging: unisys: visorbus: replaced vague 'p' variable with 'pos'
    
    In the case of client_bus_info_show, the variable 'p' was used to
    indicate the position in the output buffer. This was changed to 'pos' to
    indicate that it kept track of the current position in the output
    buffer.
    
    Signed-off-by: Alexander Curtin <alexander.curtin@unisys.com>
    Signed-off-by: David Kershner <david.kershner@unisys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/unisys/visorbus/visorbus_main.c b/drivers/staging/unisys/visorbus/visorbus_main.c
index 41a6d3a0d1ca..33407a760ab9 100644
--- a/drivers/staging/unisys/visorbus/visorbus_main.c
+++ b/drivers/staging/unisys/visorbus/visorbus_main.c
@@ -422,7 +422,7 @@ static ssize_t client_bus_info_show(struct device *dev,
 
 	int i, x, remain = PAGE_SIZE;
 	unsigned long off;
-	char *p = buf;
+	char *pos = buf;
 	u8 *partition_name;
 	struct ultra_vbus_deviceinfo dev_info;
 
@@ -430,10 +430,10 @@ static ssize_t client_bus_info_show(struct device *dev,
 	if (channel) {
 		if (vdev->name)
 			partition_name = vdev->name;
-		x = snprintf(p, remain,
+		x = snprintf(pos, remain,
 			     "Client device / client driver info for %s partition (vbus #%d):\n",
 			     partition_name, vdev->chipset_dev_no);
-		p += x;
+		pos += x;
 		remain -= x;
 		x = visorchannel_read(channel,
 				      offsetof(struct
@@ -441,9 +441,9 @@ static ssize_t client_bus_info_show(struct device *dev,
 					       chp_info),
 				      &dev_info, sizeof(dev_info));
 		if (x >= 0) {
-			x = vbuschannel_devinfo_to_string(&dev_info, p,
+			x = vbuschannel_devinfo_to_string(&dev_info, pos,
 							  remain, -1);
-			p += x;
+			pos += x;
 			remain -= x;
 		}
 		x = visorchannel_read(channel,
@@ -452,9 +452,9 @@ static ssize_t client_bus_info_show(struct device *dev,
 					       bus_info),
 				      &dev_info, sizeof(dev_info));
 		if (x >= 0) {
-			x = vbuschannel_devinfo_to_string(&dev_info, p,
+			x = vbuschannel_devinfo_to_string(&dev_info, pos,
 							  remain, -1);
-			p += x;
+			pos += x;
 			remain -= x;
 		}
 		off = offsetof(struct spar_vbus_channel_protocol, dev_info);
@@ -465,8 +465,8 @@ static ssize_t client_bus_info_show(struct device *dev,
 					      off, &dev_info, sizeof(dev_info));
 			if (x >= 0) {
 				x = vbuschannel_devinfo_to_string
-				    (&dev_info, p, remain, i);
-				p += x;
+				    (&dev_info, pos, remain, i);
+				pos += x;
 				remain -= x;
 			}
 			off += sizeof(dev_info);

