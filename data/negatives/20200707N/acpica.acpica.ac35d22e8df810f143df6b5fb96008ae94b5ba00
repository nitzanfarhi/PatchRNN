commit ac35d22e8df810f143df6b5fb96008ae94b5ba00
Author: rmoore1 <rmoore1>
Date:   Wed May 24 20:40:05 2006 +0000

    For shiftleft and shiftright, check for shiftcount larger than current bit width. C compiler cannot be counted on to do this. BZ 395

diff --git a/source/components/executer/exmisc.c b/source/components/executer/exmisc.c
index ddab6d5a6..21f065ba8 100644
--- a/source/components/executer/exmisc.c
+++ b/source/components/executer/exmisc.c
@@ -2,7 +2,7 @@
 /******************************************************************************
  *
  * Module Name: exmisc - ACPI AML (p-code) execution - specific opcodes
- *              $Revision: 1.142 $
+ *              $Revision: 1.143 $
  *
  *****************************************************************************/
 
@@ -557,11 +557,27 @@ AcpiExDoMathOp (
 
     case AML_SHIFT_LEFT_OP:         /* ShiftLeft (Operand, ShiftCount, Result)*/
 
+        /*
+         * We need to check if the shiftcount is larger than the integer bit
+         * width since the behavior of this is not well-defined in the C language.
+         */
+        if (Integer1 >= AcpiGbl_IntegerBitWidth)
+        {
+            return (0);
+        }
         return (Integer0 << Integer1);
 
 
     case AML_SHIFT_RIGHT_OP:        /* ShiftRight (Operand, ShiftCount, Result) */
 
+        /*
+         * We need to check if the shiftcount is larger than the integer bit
+         * width since the behavior of this is not well-defined in the C language.
+         */
+        if (Integer1 >= AcpiGbl_IntegerBitWidth)
+        {
+            return (0);
+        }
         return (Integer0 >> Integer1);
 
 

