commit b895a7353b739e7186f6f51f3a415485b5afd80f
Author: Benjamin Robin <dev@benjarobin.fr>
Date:   Mon Feb 15 23:26:34 2016 +0100

    time-util: Rename and fix call of deserialize_timestamp_value()
    
    The deserialize_timestamp_value() is renamed timestamp_deserialize() to be more
    consistent with dual_timestamp_deserialize()
    And add the NULL check back on realtime and monotonic

diff --git a/src/basic/time-util.c b/src/basic/time-util.c
index ac5988fdf..0b4f5ab5b 100644
--- a/src/basic/time-util.c
+++ b/src/basic/time-util.c
@@ -449,7 +449,7 @@ int dual_timestamp_deserialize(const char *value, dual_timestamp *t) {
         assert(t);
 
         if (sscanf(value, "%llu %llu", &a, &b) != 2) {
-                log_debug("Failed to parse finish timestamp value %s.", value);
+                log_debug("Failed to parse dual timestamp value \"%s\": %m", value);
                 return -EINVAL;
         }
 
@@ -459,15 +459,14 @@ int dual_timestamp_deserialize(const char *value, dual_timestamp *t) {
         return 0;
 }
 
-int deserialize_timestamp_value(const char *value, usec_t *timestamp) {
+int timestamp_deserialize(const char *value, usec_t *timestamp) {
         int r;
 
         assert(value);
 
         r = safe_atou64(value, timestamp);
-
         if (r < 0)
-                return log_debug_errno(r, "Failed to parse finish timestamp value \"%s\": %m", value);
+                return log_debug_errno(r, "Failed to parse timestamp value \"%s\": %m", value);
 
         return r;
 }
diff --git a/src/basic/time-util.h b/src/basic/time-util.h
index a826ad75e..77e3cd08d 100644
--- a/src/basic/time-util.h
+++ b/src/basic/time-util.h
@@ -99,7 +99,7 @@ char *format_timespan(char *buf, size_t l, usec_t t, usec_t accuracy);
 
 void dual_timestamp_serialize(FILE *f, const char *name, dual_timestamp *t);
 int dual_timestamp_deserialize(const char *value, dual_timestamp *t);
-int deserialize_timestamp_value(const char *value, usec_t *timestamp);
+int timestamp_deserialize(const char *value, usec_t *timestamp);
 
 int parse_timestamp(const char *t, usec_t *usec);
 
diff --git a/src/login/logind-session.c b/src/login/logind-session.c
index 9874cdae5..e088225be 100644
--- a/src/login/logind-session.c
+++ b/src/login/logind-session.c
@@ -446,8 +446,10 @@ int session_load(Session *s) {
                 safe_close(fd);
         }
 
-        deserialize_timestamp_value(realtime, &s->timestamp.realtime);
-        deserialize_timestamp_value(monotonic, &s->timestamp.monotonic);
+        if (realtime)
+                timestamp_deserialize(realtime, &s->timestamp.realtime);
+        if (monotonic)
+                timestamp_deserialize(monotonic, &s->timestamp.monotonic);
 
         if (controller) {
                 if (bus_name_has_owner(s->manager->bus, controller, NULL) > 0)
diff --git a/src/login/logind-user.c b/src/login/logind-user.c
index aa27f73a8..a826321bf 100644
--- a/src/login/logind-user.c
+++ b/src/login/logind-user.c
@@ -321,8 +321,10 @@ int user_load(User *u) {
         if (s && s->display && display_is_local(s->display))
                 u->display = s;
 
-        deserialize_timestamp_value(realtime, &u->timestamp.realtime);
-        deserialize_timestamp_value(monotonic, &u->timestamp.monotonic);
+        if (realtime)
+                timestamp_deserialize(realtime, &u->timestamp.realtime);
+        if (monotonic)
+                timestamp_deserialize(monotonic, &u->timestamp.monotonic);
 
         return r;
 }
diff --git a/src/machine/machine.c b/src/machine/machine.c
index 7e92ffc47..7a7a1bb42 100644
--- a/src/machine/machine.c
+++ b/src/machine/machine.c
@@ -299,8 +299,10 @@ int machine_load(Machine *m) {
                         m->class = c;
         }
 
-        deserialize_timestamp_value(realtime, &m->timestamp.realtime);
-        deserialize_timestamp_value(monotonic, &m->timestamp.monotonic);
+        if (realtime)
+                timestamp_deserialize(realtime, &m->timestamp.realtime);
+        if (monotonic)
+                timestamp_deserialize(monotonic, &m->timestamp.monotonic);
 
         if (netif) {
                 size_t allocated = 0, nr = 0;

