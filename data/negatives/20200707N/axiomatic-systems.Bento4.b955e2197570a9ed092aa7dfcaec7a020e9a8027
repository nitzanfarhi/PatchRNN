commit b955e2197570a9ed092aa7dfcaec7a020e9a8027
Author: Gilles Boccon-Gibod <bok@bok.net>
Date:   Sun Feb 8 17:24:02 2015 -0800

    support for subtitles in mp4fragment

diff --git a/Source/C++/Apps/Mp4Fragment/Mp4Fragment.cpp b/Source/C++/Apps/Mp4Fragment/Mp4Fragment.cpp
index 9fa2127..ad5b0bb 100644
--- a/Source/C++/Apps/Mp4Fragment/Mp4Fragment.cpp
+++ b/Source/C++/Apps/Mp4Fragment/Mp4Fragment.cpp
@@ -70,7 +70,7 @@ PrintUsageAndExit()
             "  --quiet don't print out notice messages\n"
             "  --fragment-duration <milliseconds> (default = automatic)\n"
             "  --timescale <n> (use 10000000 for Smooth Streaming compatibility)\n"
-            "  --track <track-id or type> only include media from one track (pass a track ID or 'audio' or 'video')\n"
+            "  --track <track-id or type> only include media from one track (pass a track ID, 'audio', 'video' or 'subtitles')\n"
             "  --index (re)create the segment index\n"
             );
     exit(1);
@@ -325,6 +325,13 @@ Fragment(AP4_File&                input_file,
                 break;
             }
         }
+        // no audio track to anchor with, pick the first subtitles track
+        for (unsigned int i=0; i<cursors.ItemCount(); i++) {
+            if (cursors[i]->m_Track->GetType() == AP4_Track::TYPE_SUBTITLES) {
+                anchor_cursor = cursors[i];
+                break;
+            }
+        }
     }
     if (anchor_cursor == NULL) {
         // this shoudl never happen
@@ -891,8 +898,10 @@ main(int argc, char** argv)
     // iterate over all tracks
     TrackCursor*  video_track = NULL;
     TrackCursor*  audio_track = NULL;
+    TrackCursor*  subtitles_track = NULL;
     unsigned int video_track_count = 0;
     unsigned int audio_track_count = 0;
+    unsigned int subtitles_track_count = 0;
     for (AP4_List<AP4_Track>::Item* track_item = input_file.GetMovie()->GetTracks().FirstItem();
                                     track_item;
                                     track_item = track_item->GetNext()) {
@@ -929,6 +938,11 @@ main(int argc, char** argv)
                 audio_track = cursor;
             }
             audio_track_count++;
+        } else if (track->GetType() == AP4_Track::TYPE_SUBTITLES) {
+            if (subtitles_track == NULL) {
+                subtitles_track = cursor;
+            }
+            subtitles_track_count++;
         }
     }
 
@@ -952,6 +966,13 @@ main(int argc, char** argv)
                 fprintf(stderr, "ERROR: no video track found\n");
                 return 1;
             }
+        } else if (!strncmp("subtitles", track_selector, 9)) {
+            if (subtitles_track) {
+                selected_track_id = subtitles_track->m_Track->GetId();
+            } else {
+                fprintf(stderr, "ERROR: no subtitles track found\n");
+                return 1;
+            }
         } else {
             selected_track_id = (AP4_UI32)strtol(track_selector, NULL, 10);
             bool found = false;
@@ -968,8 +989,8 @@ main(int argc, char** argv)
         }
     }
     
-    if (video_track_count == 0 && audio_track_count == 0) {
-        fprintf(stderr, "ERROR: no audio or video track in the file\n");
+    if (video_track_count == 0 && audio_track_count == 0 && subtitles_track_count == 0) {
+        fprintf(stderr, "ERROR: no audio, video, or subtitles track in the file\n");
         return 1;
     }
     
diff --git a/Source/C++/Core/Ap4SampleEntry.cpp b/Source/C++/Core/Ap4SampleEntry.cpp
index e0abf3e..b621c02 100644
--- a/Source/C++/Core/Ap4SampleEntry.cpp
+++ b/Source/C++/Core/Ap4SampleEntry.cpp
@@ -1147,6 +1147,7 @@ AP4_SubtitleSampleEntry::AP4_SubtitleSampleEntry(
     m_SchemaLocation(schema_location),
     m_ImageMimeType(image_mime_type)
 {
+    SetSize(m_Size32+m_Namespace.GetLength()+1+m_SchemaLocation.GetLength()+1+m_ImageMimeType.GetLength()+1);
 }
 
 /*----------------------------------------------------------------------

