commit bc3116f23db8befb3cc3673aa25740cfd759512e
Author: Jan Kundr√°t <jkt@gentoo.org>
Date:   Mon Jun 14 17:00:09 2010 +0200

    Use separate widgets for distinct parsers

diff --git a/src/Gui/ProtocolLoggerWidget.cpp b/src/Gui/ProtocolLoggerWidget.cpp
index dd1f4a49..f668509d 100644
--- a/src/Gui/ProtocolLoggerWidget.cpp
+++ b/src/Gui/ProtocolLoggerWidget.cpp
@@ -16,6 +16,7 @@
    Boston, MA 02110-1301, USA.
 */
 
+#include <QTabWidget>
 #include <QTextEdit>
 #include <QVBoxLayout>
 #include "ProtocolLoggerWidget.h"
@@ -26,19 +27,42 @@ ProtocolLoggerWidget::ProtocolLoggerWidget(QWidget *parent) :
     QWidget(parent)
 {
     QVBoxLayout* layout = new QVBoxLayout( this );
-    w = new QTextEdit( this );
-    layout->addWidget( w );
+    tabs = new QTabWidget( this );
+    tabs->setTabsClosable( true );
+    layout->addWidget( tabs );
+    connect( tabs, SIGNAL(tabCloseRequested(int)), this, SLOT(closeTab(int)) );
 }
 
 void ProtocolLoggerWidget::parserLineReceived( uint parser, const QByteArray& line )
 {
-    w->setPlainText( w->toPlainText() + QString::fromAscii("<<< %1: %2\n").arg( QString::number( parser ), QString::fromLocal8Bit( line ) ) );
+    QTextEdit* e = getLogger( parser );
+    e->setPlainText( e->toPlainText() + QString::fromAscii("<<< %1: %2\n").arg( QString::number( parser ), QString::fromLocal8Bit( line ) ) );
 }
 
 void ProtocolLoggerWidget::parserLineSent( uint parser, const QByteArray& line )
 {
-    w->setPlainText( w->toPlainText() + QString::fromAscii(">>> %1: %2\n").arg( QString::number( parser ), QString::fromLocal8Bit( line ) ) );
+    QTextEdit* e = getLogger( parser );
+    e->setPlainText( e->toPlainText() + QString::fromAscii(">>> %1: %2\n").arg( QString::number( parser ), QString::fromLocal8Bit( line ) ) );
 }
 
+QTextEdit* ProtocolLoggerWidget::getLogger( const uint parser )
+{
+    QTextEdit* res = widgets[ parser ];
+    if ( ! res ) {
+        res = new QTextEdit();
+        tabs->addTab( res, tr("Parser %1").arg( parser ) );
+        widgets[ parser ] = res;
+    }
+    return res;
+}
+
+void ProtocolLoggerWidget::closeTab( int index )
+{
+    QTextEdit* w = qobject_cast<QTextEdit*>( tabs->widget( index ) );
+    Q_ASSERT( w );
+    uint parser = widgets.key( w );
+    widgets.remove( parser );
+    tabs->removeTab( index );
+}
 
 }
diff --git a/src/Gui/ProtocolLoggerWidget.h b/src/Gui/ProtocolLoggerWidget.h
index f5323c2c..d65adce9 100644
--- a/src/Gui/ProtocolLoggerWidget.h
+++ b/src/Gui/ProtocolLoggerWidget.h
@@ -20,8 +20,10 @@
 #ifndef GUI_PROTOCOLLOGGERWIDGET_H
 #define GUI_PROTOCOLLOGGERWIDGET_H
 
+#include <QMap>
 #include <QWidget>
 
+class QTabWidget;
 class QTextEdit;
 
 namespace Gui {
@@ -43,8 +45,17 @@ public slots:
     /** @short Parser just sent a piece of data */
     void parserLineSent( uint parser, const QByteArray& line );
 
+private slots:
+
+    /** @short A tab is requested to close */
+    void closeTab( int index );
+
 private:
-    QTextEdit* w;
+    QTabWidget* tabs;
+    QMap<uint, QTextEdit*> widgets;
+
+    /** @short Return (possibly newly created) logger for a given parser */
+    QTextEdit* getLogger( const uint parser );
 };
 
 }

