commit 0c8069e2e5f5ae82e6705c155f9e9b9c900f1f1d
Author: maekitalo <maekitalo@8dd45c8f-be11-0410-86c3-e0da43b70fc1>
Date:   Sun Feb 24 17:45:18 2013 +0000

    add a convenience method tnt::Tntnet::listen with just a port number to listen on all local interfaces; previously a empty string must be specified, which remains possible of course
    
    git-svn-id: svn://svn.code.sf.net/p/tntnet/code/trunk@1414 8dd45c8f-be11-0410-86c3-e0da43b70fc1

diff --git a/tntnet/framework/common/tnt/tntnet.h b/tntnet/framework/common/tnt/tntnet.h
index 8c87c606..b3f3cee2 100644
--- a/tntnet/framework/common/tnt/tntnet.h
+++ b/tntnet/framework/common/tnt/tntnet.h
@@ -101,10 +101,18 @@ namespace tnt
       /// Listening on the port does not actually happen here but when the
       /// application is started using the run-method.
       void listen(const std::string& ipaddr, unsigned short int port);
+      /// Listen on all local interfaces on the specified port.
+      void listen(unsigned short int port)
+      { listen(std::string(), port); }
+
       /// Set up a ssl listener on the specified ip address and port.
       /// Listening on the port does not actually happen here but when the
       /// application is started using the run-method.
       void sslListen(const std::string& certificateFile, const std::string& keyFile, const std::string& ipaddr, unsigned short int port);
+      /// Listen on all local interfaces on the specified port for ssl requests.
+      void sslListen(const std::string& certificateFile, const std::string& keyFile, unsigned short int port)
+      { sslListen(certificateFile, keyFile, std::string(), port); }
+
       /// Starts all needed threads and the application loop.
       /// If no listeners are set up using listen or sslListen, a default
       /// listener is instantiated. By default it listens on the ip address

