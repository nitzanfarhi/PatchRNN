commit fc1b253141b360f9c669d391b4ff663b984ef0c9
Author: Andreas Noever <andreas.noever@gmail.com>
Date:   Thu Jan 23 21:59:28 2014 +0100

    PCI: Don't scan random busses in pci_scan_bridge()
    
    When assigning a new bus number in pci_scan_bridge we check whether
    max+1 is free by calling pci_find_bus. If it does already exist then we
    assume that we are rescanning and that this is the right bus to scan.
    
    This is fragile. If max+1 lies outside of bus->busn_res.end then we will
    rescan some random bus from somewhere else in the hierachy. This patch
    checks for this case and prints a warning.
    
    [bhelgaas: add parent/child bus number info to dev_warn()]
    Signed-off-by: Andreas Noever <andreas.noever@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>

diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index 1436288924c3..509494381a7a 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -829,12 +829,16 @@ int pci_scan_bridge(struct pci_bus *bus, struct pci_dev *dev, int max, int pass)
 			goto out;
 		}
 
+		if (max >= bus->busn_res.end) {
+			dev_warn(&dev->dev, "can't allocate child bus %02x from %pR\n",
+				 max, &bus->busn_res);
+			goto out;
+		}
+
 		/* Clear errors */
 		pci_write_config_word(dev, PCI_STATUS, 0xffff);
 
-		/* Prevent assigning a bus number that already exists.
-		 * This can happen when a bridge is hot-plugged, so in
-		 * this case we only re-scan this bus. */
+		/* The bus will already exist if we are rescanning */
 		child = pci_find_bus(pci_domain_nr(bus), max+1);
 		if (!child) {
 			child = pci_add_new_bus(bus, dev, max+1);

