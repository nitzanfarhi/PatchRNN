commit 4dc93fcf0b95dc3fda4db917effae31fbb8ad2a8
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Tue Apr 10 10:49:51 2018 -0700

    igb: Fix queue selection on MAC filters on i210
    
    On the RAH registers there are semantic differences on the meaning of
    the "queue" parameter for traffic steering depending on the controller
    model: there is the 82575 meaning, which "queue" means a RX Hardware
    Queue, and the i350 meaning, where it is a reception pool.
    
    The previous behaviour was having no effect for i210 based controllers
    because the QSEL bit of the RAH register wasn't being set.
    
    This patch separates the condition in discrete cases, so the different
    handling is clearer.
    
    Fixes: 83c21335c876 ("igb: improve MAC filter handling")
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>

diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index cce7ada89255..9afee130c2aa 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -8763,12 +8763,17 @@ static void igb_rar_set_index(struct igb_adapter *adapter, u32 index)
 		if (is_valid_ether_addr(addr))
 			rar_high |= E1000_RAH_AV;
 
-		if (hw->mac.type == e1000_82575)
+		switch (hw->mac.type) {
+		case e1000_82575:
+		case e1000_i210:
 			rar_high |= E1000_RAH_POOL_1 *
 				    adapter->mac_table[index].queue;
-		else
+			break;
+		default:
 			rar_high |= E1000_RAH_POOL_1 <<
 				    adapter->mac_table[index].queue;
+			break;
+		}
 	}
 
 	wr32(E1000_RAL(index), rar_low);

