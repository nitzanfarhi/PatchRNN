commit 61b423a8a0bd9aeaa046f9a24bed42e3a953a936
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Oct 10 10:51:54 2014 -0700

    net: systemport: avoid unbalanced enable_irq_wake calls
    
    Multiple enable_irq_wake() calls will keep increasing the IRQ
    wake_depth, which ultimately leads to the following types of
    situation:
    
    1) enable Wake-on-LAN interrupt w/o password
    2) enable Wake-on-LAN interrupt w/ password
    3) enable Wake-on-LAN interrupt w/o password
    4) disable Wake-on-LAN interrupt
    
    After step 4), SYSTEMPORT would always wake-up the system no matter what
    wake-up device we use, which is not what we want. Fix this by making
    sure there are no unbalanced enable_irq_wake() calls.
    
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/broadcom/bcmsysport.c b/drivers/net/ethernet/broadcom/bcmsysport.c
index 075688188644..9ae36979bdee 100644
--- a/drivers/net/ethernet/broadcom/bcmsysport.c
+++ b/drivers/net/ethernet/broadcom/bcmsysport.c
@@ -436,7 +436,8 @@ static int bcm_sysport_set_wol(struct net_device *dev,
 	/* Flag the device and relevant IRQ as wakeup capable */
 	if (wol->wolopts) {
 		device_set_wakeup_enable(kdev, 1);
-		enable_irq_wake(priv->wol_irq);
+		if (priv->wol_irq_disabled)
+			enable_irq_wake(priv->wol_irq);
 		priv->wol_irq_disabled = 0;
 	} else {
 		device_set_wakeup_enable(kdev, 0);

