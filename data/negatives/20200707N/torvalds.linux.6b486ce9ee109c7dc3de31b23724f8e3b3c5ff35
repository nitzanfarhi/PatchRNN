commit 6b486ce9ee109c7dc3de31b23724f8e3b3c5ff35
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Wed Aug 23 16:55:45 2017 -0700

    scsi: lpfc: Fix bad sgl reposting after 2nd adapter reset
    
    Port issue was fixed, the hbacmd reset would take more than 8 minutes to
    complete.
    
    There were conflicting NVME SGL posting/reposting responsibilities
    between lpfc_online()/lpfc_sli4_hba_setup() and
    lpfc_nvme_create_localport().  The lpfc_online() causes a REPOST on
    existing NVME SGLs which is not released during the fc port reset.
    However, lpfc_nvme_create_localport() wants to allocate new NVME buffers
    and post them. Both cancelled out each other which had a side effect of
    hosing the mailbox handling that was used to remove the sgl lists -
    causing multiple 60s mbx timeouts.
    
    Fix by preserving all SGL lists over the fc port reset.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

diff --git a/drivers/scsi/lpfc/lpfc_nvme.c b/drivers/scsi/lpfc/lpfc_nvme.c
index 24dc69de6023..bb9ede2521b9 100644
--- a/drivers/scsi/lpfc/lpfc_nvme.c
+++ b/drivers/scsi/lpfc/lpfc_nvme.c
@@ -2181,8 +2181,15 @@ lpfc_nvme_create_localport(struct lpfc_vport *vport)
 		vport->localport = localport;
 		lport->vport = vport;
 		vport->nvmei_support = 1;
-		len  = lpfc_new_nvme_buf(vport, phba->sli4_hba.nvme_xri_max);
-		vport->phba->total_nvme_bufs += len;
+
+		/* Don't post more new bufs if repost already recovered
+		 * the nvme sgls.
+		 */
+		if (phba->sli4_hba.nvme_xri_cnt == 0) {
+			len  = lpfc_new_nvme_buf(vport,
+						 phba->sli4_hba.nvme_xri_max);
+			vport->phba->total_nvme_bufs += len;
+		}
 	}
 
 	return ret;

