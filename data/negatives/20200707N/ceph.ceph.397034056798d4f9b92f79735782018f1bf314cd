commit 397034056798d4f9b92f79735782018f1bf314cd
Author: Sage Weil <sage.weil@dreamhost.com>
Date:   Thu Mar 31 15:46:41 2011 -0700

    mds: try find_ino_peers for lookuphash requests
    
    Signed-off-by: Sage Weil <sage.weil@dreamhost.com>

diff --git a/src/mds/Server.cc b/src/mds/Server.cc
index 452526f5bb..01a5ada29a 100644
--- a/src/mds/Server.cc
+++ b/src/mds/Server.cc
@@ -2042,6 +2042,15 @@ void Server::handle_client_lookup_parent(MDRequest *mdr)
   reply_request(mdr, 0, in, dn);  // reply
 }
 
+struct C_MDS_LookupHash : public Context {
+  Server *server;
+  MDRequest *mdr;
+  C_MDS_LookupHash(Server *s, MDRequest *r) : server(s), mdr(r) {}
+  void finish(int r) {
+    server->_lookup_hash(mdr, r);
+  }
+};
+
 /* This function DOES clean up the mdr before returning*/
 void Server::handle_client_lookup_hash(MDRequest *mdr)
 {
@@ -2055,7 +2064,12 @@ void Server::handle_client_lookup_hash(MDRequest *mdr)
   if (!in) {
     // try the directory
     CInode *diri = mdcache->get_inode(req->get_filepath2().get_ino());
-    if (!diri || diri->state_test(CInode::STATE_PURGING)) {
+    if (!diri) {
+      mdcache->find_ino_peers(req->get_filepath2().get_ino(),
+			      new C_MDS_LookupHash(this, mdr), -1);
+      return;
+    }
+    if (diri->state_test(CInode::STATE_PURGING)) {
       reply_request(mdr, -ESTALE);
       return;
     }
@@ -2099,6 +2113,17 @@ void Server::handle_client_lookup_hash(MDRequest *mdr)
   reply_request(mdr, reply, in, in->get_parent_dn());
 }
 
+void Server::_lookup_hash(MDRequest *mdr, int r)
+{
+  dout(10) << "_lookup_hash " << mdr << " r=" << r << dendl;
+  if (r < 0) {
+    reply_request(mdr, r);
+    return;
+  }
+
+  dispatch_client_request(mdr);
+}
+
 
 /* This function takes responsibility for the passed mdr*/
 void Server::handle_client_open(MDRequest *mdr)
diff --git a/src/mds/Server.h b/src/mds/Server.h
index d9b87632ce..104d559a9a 100644
--- a/src/mds/Server.h
+++ b/src/mds/Server.h
@@ -137,6 +137,7 @@ public:
   void handle_client_stat(MDRequest *mdr);
   void handle_client_lookup_parent(MDRequest *mdr);
   void handle_client_lookup_hash(MDRequest *mdr);
+  void _lookup_hash(MDRequest *mdr, int r);
   void handle_client_readdir(MDRequest *mdr);
   void handle_client_file_setlock(MDRequest *mdr);
   void handle_client_file_readlock(MDRequest *mdr);

