commit a887d3a9f3e6d8f44b0546a4ff2446bd0cced03f
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Jul 22 09:11:16 2010 +0000

    In the frame_data structure, expand the per-packet
    encapsulation/data-link type to 16 bits, and shuffle some fields to
    eliminate some unnecessary padding - the net result should be no change
    in the structure size for 32 bits and a few bytes removed for 64 bits.
    
    This allows more encapsulation types - we've just about run out of the
    ones that fit in a signed 8-bit integer - and thus should fix bug 5025.
    
    svn path=/trunk/; revision=33613

diff --git a/epan/frame_data.c b/epan/frame_data.c
index 18b71e52df..3ce944bf56 100644
--- a/epan/frame_data.c
+++ b/epan/frame_data.c
@@ -197,9 +197,9 @@ frame_data_init(frame_data *fdata, guint32 num,
   fdata->cum_bytes = cum_bytes + phdr->len;
   fdata->cap_len = phdr->caplen;
   fdata->file_off = offset;
-  /* To save some memory, we coarcese it into a gint8 */
-  g_assert(phdr->pkt_encap <= G_MAXINT8);
-  fdata->lnk_t = (gint8) phdr->pkt_encap;
+  /* To save some memory, we coerce it into a gint16 */
+  g_assert(phdr->pkt_encap <= G_MAXINT16);
+  fdata->lnk_t = (gint16) phdr->pkt_encap;
   fdata->abs_ts.secs = phdr->ts.secs;
   fdata->abs_ts.nsecs = phdr->ts.nsecs;
   fdata->flags.passed_dfilter = 0;
diff --git a/epan/frame_data.h b/epan/frame_data.h
index 1a4f9ff6f0..85161e7d70 100644
--- a/epan/frame_data.h
+++ b/epan/frame_data.h
@@ -47,9 +47,9 @@ typedef struct _frame_data {
   guint32      pkt_len;     /* Packet length */
   guint32      cap_len;     /* Amount actually captured */
   guint32      cum_bytes;   /* Cumulative bytes into the capture */
-  guint16      subnum;      /* subframe number, for protocols that require this */
   gint64       file_off;    /* File offset */
-  gint8        lnk_t;       /* Per-packet encapsulation/data-link type */
+  guint16      subnum;      /* subframe number, for protocols that require this */
+  gint16       lnk_t;       /* Per-packet encapsulation/data-link type */
   struct {
     unsigned int passed_dfilter : 1; /* 1 = display, 0 = no display */
     unsigned int encoding       : 2; /* Character encoding (ASCII, EBCDIC...) */

