commit 435edcc2f821e2498ffbe12851ab11bef89ebd35
Author: Jan Kundr√°t <jkt@gentoo.org>
Date:   Fri Oct 8 21:51:57 2010 +0200

    More work on model roles inside the MailboxModel

diff --git a/src/Imap/Model/ItemRoles.h b/src/Imap/Model/ItemRoles.h
index 1feef7b6..d1151b2b 100644
--- a/src/Imap/Model/ItemRoles.h
+++ b/src/Imap/Model/ItemRoles.h
@@ -33,6 +33,8 @@ enum {
     /** @short A "random" offset */
     RoleBase = Qt::UserRole + 666,
 
+    /** @short Name of the mailbox */
+    RoleMailboxName,
     /** @short Total number of messages in a mailbox */
     RoleTotalMessageCount,
     /** @short Number of unread messages in a mailbox */
@@ -43,8 +45,8 @@ enum {
     RoleMailboxIsSelectable,
     /** @short The mailbox has child mailboxes */
     RoleMailboxHasChildmailboxes,
-    /** @short Informaiton about number of messages in the mailbox is being loaded */
-    RoleMailboxNumbersAreFetching,
+    /** @short Informaiton about whether the number of messages in the mailbox has already been loaded */
+    RoleMailboxNumbersFetched,
 
     /** @short Subject of the message */
     RoleMessageSubject,
diff --git a/src/Imap/Model/MailboxModel.cpp b/src/Imap/Model/MailboxModel.cpp
index 65d53d8f..00732a8e 100644
--- a/src/Imap/Model/MailboxModel.cpp
+++ b/src/Imap/Model/MailboxModel.cpp
@@ -21,6 +21,7 @@
 
 #include "MailboxModel.h"
 #include "MailboxTree.h"
+#include "ItemRoles.h"
 
 #include "iconloader/qticonloader.h"
 
@@ -231,6 +232,20 @@ QVariant MailboxModel::data( const QModelIndex& proxyIndex, int role ) const
                 default:
                     return QVariant();
             }
+        case RoleMailboxName:
+            return mbox->mailbox();
+        case RoleMailboxHasChildmailboxes:
+            return list->hasChildren( 0 );
+        case RoleMailboxIsINBOX:
+            return mbox->mailbox().toUpper() == QLatin1String("INBOX");
+        case RoleMailboxIsSelectable:
+            return mbox->isSelectable();
+        case RoleMailboxNumbersFetched:
+            return list->numbersFetched();
+        case RoleTotalMessageCount:
+            return list->totalMessageCount( static_cast<Imap::Mailbox::Model*>( sourceModel() ) );
+        case RoleUnreadMessageCount:
+            return list->unreadMessageCount( static_cast<Imap::Mailbox::Model*>( sourceModel() ) );
         default:
             return QAbstractProxyModel::data( createIndex( proxyIndex.row(), 0, proxyIndex.internalPointer() ), role );
     }

