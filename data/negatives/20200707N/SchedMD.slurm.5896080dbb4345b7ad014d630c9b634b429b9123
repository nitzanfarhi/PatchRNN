commit 5896080dbb4345b7ad014d630c9b634b429b9123
Author: Danny Auble <da@llnl.gov>
Date:   Tue Jan 6 19:35:03 2009 +0000

    slicker way of nameing files, also removed the .99999 factor to Priorty plugin to not calculate something for the next job coming in

diff --git a/src/common/assoc_mgr.c b/src/common/assoc_mgr.c
index 320f98e46e..c93f357042 100644
--- a/src/common/assoc_mgr.c
+++ b/src/common/assoc_mgr.c
@@ -2201,12 +2201,9 @@ extern int dump_assoc_mgr_state(char *state_save_location)
 	}
 
 	/* write the buffer to file */
-	old_file = xstrdup(state_save_location);
-	xstrcat(old_file, "/assoc_mgr_state.old");
-	reg_file = xstrdup(state_save_location);
-	xstrcat(reg_file, "/assoc_mgr_state");
-	new_file = xstrdup(state_save_location);
-	xstrcat(new_file, "/assoc_mgr_state.new");
+	reg_file = xstrdup_printf("%s/assoc_mgr_state", state_save_location);
+	old_file = xstrdup_printf("%s.old", reg_file);
+	new_file = xstrdup_printf("%s.new", reg_file);
 	
 	slurm_mutex_lock(&assoc_mgr_file_lock);
 	log_fd = creat(new_file, 0600);
@@ -2272,12 +2269,9 @@ extern int dump_assoc_mgr_state(char *state_save_location)
 		slurm_mutex_unlock(&assoc_mgr_association_lock);
 	}
 
-	old_file = xstrdup(state_save_location);
-	xstrcat(old_file, "/assoc_usage.old");
-	reg_file = xstrdup(state_save_location);
-	xstrcat(reg_file, "/assoc_usage");
-	new_file = xstrdup(state_save_location);
-	xstrcat(new_file, "/assoc_usage.new");
+	reg_file = xstrdup_printf("%s/assoc_usage", state_save_location);
+	old_file = xstrdup_printf("%s.old", reg_file);
+	new_file = xstrdup_printf("%s.new", reg_file);
 	
 	log_fd = creat(new_file, 0600);
 	if (log_fd == 0) {
diff --git a/src/plugins/priority/multifactor/priority_multifactor.c b/src/plugins/priority/multifactor/priority_multifactor.c
index 5932b53917..e3e86c7d13 100644
--- a/src/plugins/priority/multifactor/priority_multifactor.c
+++ b/src/plugins/priority/multifactor/priority_multifactor.c
@@ -340,13 +340,8 @@ static double _get_fairshare_priority( struct job_record *job_ptr )
 			((assoc->norm_shares - usage) + 1) / 2;
 		debug4("((%f - %Lf) + 1) / 2 = %Lf", assoc->norm_shares,
 		       usage, assoc->eused_shares);
-	} else {
-		/* Multiply by something really close to 1 so the next
-		   job will get a lower priority than the previous
-		   jobs if they are submitted during the polling
-		   period. */
-		assoc->eused_shares *= .99999;
 	}
+
 	usage = assoc->eused_shares;
 	slurm_mutex_unlock(&assoc_mgr_association_lock);
 

