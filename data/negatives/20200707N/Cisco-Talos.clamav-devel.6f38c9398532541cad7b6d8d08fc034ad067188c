commit 6f38c9398532541cad7b6d8d08fc034ad067188c
Author: Tomasz Kojm <tkojm@clamav.net>
Date:   Wed Jan 31 18:13:17 2007 +0000

    s/strdup/cli_strdup/g
    
    
    git-svn: trunk@2662

diff --git a/clamav-devel/libclamav/chmunpack.c b/clamav-devel/libclamav/chmunpack.c
index 719a9ef4e..70ee29d5e 100644
--- a/clamav-devel/libclamav/chmunpack.c
+++ b/clamav-devel/libclamav/chmunpack.c
@@ -458,7 +458,7 @@ static int read_chunk_entries(unsigned char *chunk, uint32_t chunk_len,
 		}
 		if (name_len > 0xFFFFFF) {
 			cli_dbgmsg("CHM file name too long: %llu\n", name_len);
-			file_e->name = (unsigned char *) strdup("truncated");
+			file_e->name = (unsigned char *) cli_strdup("truncated");
 	                if (!file_e->name) {
         	                free(file_e);
                 	        return FALSE;
diff --git a/clamav-devel/libclamav/htmlnorm.c b/clamav-devel/libclamav/htmlnorm.c
index b2fad1ee1..fb045744e 100644
--- a/clamav-devel/libclamav/htmlnorm.c
+++ b/clamav-devel/libclamav/htmlnorm.c
@@ -292,7 +292,7 @@ static void html_tag_arg_set(tag_arguments_t *tags, char *tag, char *value)
 	for (i=0; i < tags->count; i++) {
 		if (strcmp(tags->tag[i], tag) == 0) {
 			free(tags->value[i]);
-			tags->value[i] = strdup(value);
+			tags->value[i] = cli_strdup(value);
 			return;
 		}
 	}
@@ -323,16 +323,16 @@ static void html_tag_arg_add(tag_arguments_t *tags,
 		tags->contents[tags->count-1]=NULL;
 	}
 #endif
-	tags->tag[tags->count-1] = strdup(tag);
+	tags->tag[tags->count-1] = cli_strdup(tag);
 	if (value) {
 		if (*value == '"') {
-			tags->value[tags->count-1] = strdup(value+1);
+			tags->value[tags->count-1] = cli_strdup(value+1);
 			len = strlen(value+1);
 			if (len > 0) {
 				tags->value[tags->count-1][len-1] = '\0';
 			}
 		} else {
-			tags->value[tags->count-1] = strdup(value);
+			tags->value[tags->count-1] = cli_strdup(value);
 		}
 	} else {
 		tags->value[tags->count-1] = NULL;
@@ -1041,7 +1041,7 @@ static int cli_html_normalise(int fd, m_area_t *m_area, const char *dirname, tag
 						if (arg_action_value) {
 							if(in_form_action) 
 								free(in_form_action);							
-							in_form_action = strdup(arg_action_value);
+							in_form_action = cli_strdup(arg_action_value);
 						}
 #endif
 					} else if (strcmp(tag, "img") == 0) {
diff --git a/clamav-devel/libclamav/readdb.c b/clamav-devel/libclamav/readdb.c
index 3041f88a7..53c577183 100644
--- a/clamav-devel/libclamav/readdb.c
+++ b/clamav-devel/libclamav/readdb.c
@@ -109,7 +109,7 @@ static int cli_ac_addsig(struct cli_matcher *root, const char *virname, const ch
     if(strchr(hexsig, '(')) {
 	    char *hexcpy, *hexnew, *start, *h, *c;
 
-	if(!(hexcpy = strdup(hexsig))) {
+	if(!(hexcpy = cli_strdup(hexsig))) {
 	    if(new->offset)
 		free(new->offset);
 	    free(new);
@@ -316,7 +316,7 @@ int cli_parse_add(struct cli_matcher *root, const char *virname, const char *hex
 
 	root->ac_partsigs++;
 
-	if(!(hexcpy = strdup(hexsig)))
+	if(!(hexcpy = cli_strdup(hexsig)))
 	    return CL_EMEM;
 
 	len = strlen(hexsig);
@@ -466,12 +466,14 @@ int cli_parse_add(struct cli_matcher *root, const char *virname, const char *hex
 
 	strncpy(bm_new->virname, virname, virlen);
 
-	bm_new->offset = strdup(offset);
-	if(!bm_new->offset) {
-	    free(bm_new->pattern);
-	    free(bm_new->virname);
-	    free(bm_new);
-	    return CL_EMEM;
+	if(offset) {
+	    bm_new->offset = cli_strdup(offset);
+	    if(!bm_new->offset) {
+		free(bm_new->pattern);
+		free(bm_new->virname);
+		free(bm_new);
+		return CL_EMEM;
+	    }
 	}
 
 	bm_new->target = target;
@@ -1389,7 +1391,7 @@ int cl_statinidir(const char *dirname, struct cl_stat *dbstat)
 	dbstat->entries = 0;
 	dbstat->stattab = NULL;
 	dbstat->statdname = NULL;
-	dbstat->dir = strdup(dirname);
+	dbstat->dir = cli_strdup(dirname);
     } else {
         cli_errmsg("cl_statdbdir(): Null argument passed.\n");
 	return CL_ENULLARG;
diff --git a/clamav-devel/libclamav/sis.c b/clamav-devel/libclamav/sis.c
index 637ea999c..414270735 100644
--- a/clamav-devel/libclamav/sis.c
+++ b/clamav-devel/libclamav/sis.c
@@ -211,7 +211,7 @@ static int sis_extract_simple(int fd, char *mfile, uint32_t length, uint32_t off
 	    return CL_EMEM;
 	sprintf(subdir, "%s/%s", dir, typedir);
     } else {
-	if(!(subdir = strdup(dir)))
+	if(!(subdir = cli_strdup(dir)))
 	    return CL_EMEM;
     }
 
diff --git a/clamav-devel/libclamav/unrar/unrar.c b/clamav-devel/libclamav/unrar/unrar.c
index 6e0359f30..024c3b4c4 100644
--- a/clamav-devel/libclamav/unrar/unrar.c
+++ b/clamav-devel/libclamav/unrar/unrar.c
@@ -1557,7 +1557,7 @@ int cli_unrar_extract_next_prepare(rar_state_t* state,const char* dirname)
 		new_metadata->unpack_size = state->file_header->high_unpack_size * 0x100000000 + state->file_header->unpack_size;
 		new_metadata->crc = state->file_header->file_crc;
 		new_metadata->method = state->file_header->method;
-		new_metadata->filename = strdup(state->file_header->filename);
+		new_metadata->filename = cli_strdup(state->file_header->filename);
 		new_metadata->next = NULL;
 		new_metadata->encrypted = FALSE;
 	if (state->metadata_tail == NULL) {
diff --git a/clamav-devel/libclamav/vba_extract.c b/clamav-devel/libclamav/vba_extract.c
index 033dec67b..0bc539c21 100644
--- a/clamav-devel/libclamav/vba_extract.c
+++ b/clamav-devel/libclamav/vba_extract.c
@@ -462,7 +462,7 @@ vba_project_t *vba56_dir_read(const char *dir)
 		close(fd);
 		return NULL;
 	}
-	vba_project->dir = strdup(dir);
+	vba_project->dir = cli_strdup(dir);
 	vba_project->offset = (uint32_t *) cli_malloc (sizeof(uint32_t) *
 					record_count);
 	if (!vba_project->offset) {
@@ -1387,7 +1387,7 @@ static macro_extnames_t *wm_read_macro_extnames(int fd)
 				get_unicode_name(name_tmp, macro_extname->length*2, FALSE);
 			    free(name_tmp);
 			} else {
-			    macro_extname->extname = strdup("[no name]");
+			    macro_extname->extname = cli_strdup("[no name]");
 			    macro_extname->length = 10;
 			}
 		} else {
@@ -1408,7 +1408,7 @@ static macro_extnames_t *wm_read_macro_extnames(int fd)
 			    }
 			    macro_extname->extname[macro_extname->length] = '\0';
 			} else {
-			    macro_extname->extname = strdup("[no name]");
+			    macro_extname->extname = cli_strdup("[no name]");
 			    macro_extname->length = 10;
 			}
 		}
@@ -1635,7 +1635,7 @@ vba_project_t *wm_dir_read(const char *dir)
 			vba_project = NULL;
 			goto abort;
 		}
-		vba_project->dir = strdup(dir);
+		vba_project->dir = cli_strdup(dir);
 		vba_project->offset = (uint32_t *) cli_malloc(sizeof(uint32_t) *
 					macro_info->count);
 		if (!vba_project->offset) {
@@ -1668,7 +1668,7 @@ vba_project_t *wm_dir_read(const char *dir)
 		}
 		vba_project->count = macro_info->count;
 		for (i=0 ; i < macro_info->count ; i++) {
-			vba_project->name[i] = strdup("WordDocument");
+			vba_project->name[i] = cli_strdup("WordDocument");
 			vba_project->offset[i] = macro_info->macro_entry[i].offset;
 			vba_project->length[i] = macro_info->macro_entry[i].len;
 			vba_project->key[i] = macro_info->macro_entry[i].key;

