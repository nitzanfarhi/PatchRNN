commit b8cb7fc6d7083e1a061b55717e121805dbd91b9d
Author: Andreas Ericsson <ae@op5.se>
Date:   Tue Oct 9 20:43:33 2012 +0000

    lib/worker: Change delimiter so it doesn't clash with kvvec:PAIRSEP
    
    Since kvvec:PAIRSEP is a nul byte (as all values must be C strings),
    we run an unnecessary amount of memchr() calls for each worker
    result we get back (and send).
    
    We switch it to use "\1\0\0\0" instead (a nice 32-bit thing), which
    we now have to copy explicitly to the end of the kvv-buffer.
    
    Considering the fact that ascii code 1 is a non-printable character
    and therefore should be highly unusual in any normal output sequence,
    it should be pretty safe to use this.
    
    An estimate is that we gain at least 10-15% performance from this
    small change alone. Quite neat.
    
    Signed-off-by: Andreas Ericsson <ae@op5.se>
    
    git-svn-id: https://nagios.svn.sourceforge.net/svnroot/nagios/nagioscore/trunk@2316 5f96b256-904b-4d8d-8c98-d829582c6739

diff --git a/lib/worker.c b/lib/worker.c
index 20976c37..96b74051 100644
--- a/lib/worker.c
+++ b/lib/worker.c
@@ -171,6 +171,7 @@ int send_kvvec(int sd, struct kvvec *kvv)
 		 */
 		return 0;
 	}
+	memcpy(kvvb->buf + (kvvb->bufsize - MSG_DELIM_LEN_SEND), MSG_DELIM, MSG_DELIM_LEN_SEND);
 
 	/* use bufsize here, as it gets us the nul string delimiter */
 	ret = write(sd, kvvb->buf, kvvb->bufsize);
diff --git a/lib/worker.h b/lib/worker.h
index 918308d0..5f7bfc02 100644
--- a/lib/worker.h
+++ b/lib/worker.h
@@ -23,9 +23,9 @@
  * take care to use different MSG_DELIM_LEN depending on if we're
  * sending or receiving. Change this if PAIR_SEP alters.
  */
-#define MSG_DELIM "\0\0\0" /**< message limiter */
-#define MSG_DELIM_LEN (sizeof(MSG_DELIM) - 1) /**< message delimiter length */
-#define MSG_DELIM_LEN_SEND (MSG_DELIM_LEN - 1) /**< msg delim len when sendin */
+#define MSG_DELIM "\1\0\0" /**< message limiter */
+#define MSG_DELIM_LEN (sizeof(MSG_DELIM)) /**< message delimiter length */
+#define MSG_DELIM_LEN_SEND (MSG_DELIM_LEN) /**< msg delim len when sendin */
 #define MSG_DELIM_LEN_RECV (MSG_DELIM_LEN) /**< msg delimm len when receivin */
 #define PAIR_SEP 0 /**< pair separator for buf2kvvec() and kvvec2buf() */
 #define KV_SEP '=' /**< key/value separator for buf2kvvec() and kvvec2buf() */

