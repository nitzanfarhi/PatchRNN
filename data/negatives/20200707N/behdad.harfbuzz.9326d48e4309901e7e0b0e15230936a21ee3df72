commit 9326d48e4309901e7e0b0e15230936a21ee3df72
Author: Behdad Esfahbod <behdad@behdad.org>
Date:   Thu Oct 10 20:04:42 2013 +0200

    Don't use g_mapped_file_unref()
    
    Was introduced in glib 2.22.

diff --git a/src/test-buffer-serialize.cc b/src/test-buffer-serialize.cc
index 827b0513..2287b940 100644
--- a/src/test-buffer-serialize.cc
+++ b/src/test-buffer-serialize.cc
@@ -61,7 +61,7 @@ main (int argc, char **argv)
     GMappedFile *mf = g_mapped_file_new (argv[1], false, NULL);
     font_data = g_mapped_file_get_contents (mf);
     len = g_mapped_file_get_length (mf);
-    destroy = (hb_destroy_func_t) g_mapped_file_unref;
+    destroy = (hb_destroy_func_t) g_mapped_file_free;
     user_data = (void *) mf;
     mm = HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE;
 #else
diff --git a/src/test-size-params.cc b/src/test-size-params.cc
index 947b5669..7463599a 100644
--- a/src/test-size-params.cc
+++ b/src/test-size-params.cc
@@ -59,7 +59,7 @@ main (int argc, char **argv)
     GMappedFile *mf = g_mapped_file_new (argv[1], false, NULL);
     font_data = g_mapped_file_get_contents (mf);
     len = g_mapped_file_get_length (mf);
-    destroy = (hb_destroy_func_t) g_mapped_file_unref;
+    destroy = (hb_destroy_func_t) g_mapped_file_free;
     user_data = (void *) mf;
     mm = HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE;
 #else
diff --git a/src/test-would-substitute.cc b/src/test-would-substitute.cc
index 4731e265..6864c223 100644
--- a/src/test-would-substitute.cc
+++ b/src/test-would-substitute.cc
@@ -63,7 +63,7 @@ main (int argc, char **argv)
     GMappedFile *mf = g_mapped_file_new (argv[1], false, NULL);
     font_data = g_mapped_file_get_contents (mf);
     len = g_mapped_file_get_length (mf);
-    destroy = (hb_destroy_func_t) g_mapped_file_unref;
+    destroy = (hb_destroy_func_t) g_mapped_file_free;
     user_data = (void *) mf;
     mm = HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE;
 #else
diff --git a/src/test.cc b/src/test.cc
index 1acb6ead..0546fb76 100644
--- a/src/test.cc
+++ b/src/test.cc
@@ -62,7 +62,7 @@ main (int argc, char **argv)
     GMappedFile *mf = g_mapped_file_new (argv[1], false, NULL);
     font_data = g_mapped_file_get_contents (mf);
     len = g_mapped_file_get_length (mf);
-    destroy = (hb_destroy_func_t) g_mapped_file_unref;
+    destroy = (hb_destroy_func_t) g_mapped_file_free;
     user_data = (void *) mf;
     mm = HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE;
 #else
diff --git a/util/options.cc b/util/options.cc
index 66b5e151..aa969a69 100644
--- a/util/options.cc
+++ b/util/options.cc
@@ -436,11 +436,11 @@ font_options_t::get_font (void) const
 	font_data = g_mapped_file_get_contents (mf);
 	len = g_mapped_file_get_length (mf);
 	if (len) {
-	  destroy = (hb_destroy_func_t) g_mapped_file_unref;
+	  destroy = (hb_destroy_func_t) g_mapped_file_free;
 	  user_data = (void *) mf;
 	  mm = HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE;
 	} else
-	  g_mapped_file_unref (mf);
+	  g_mapped_file_free (mf);
       } else {
 	fail (false, "%s", error->message);
 	//g_error_free (error);

