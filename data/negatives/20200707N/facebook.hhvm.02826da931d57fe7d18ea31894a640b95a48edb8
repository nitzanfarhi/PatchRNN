commit 02826da931d57fe7d18ea31894a640b95a48edb8
Author: Jordan DeLong <jdelong@fb.com>
Date:   Fri Apr 17 11:34:42 2015 -0700

    Use ActRec::kNumArgsMask in funcPrologueRedispatch
    
    Summary: Instead of hardcoding.
    
    Reviewed By: @mxw, @jano
    
    Differential Revision: D2002277

diff --git a/hphp/runtime/vm/bytecode.h b/hphp/runtime/vm/bytecode.h
index 75bd1e132a..6c46e2a54c 100644
--- a/hphp/runtime/vm/bytecode.h
+++ b/hphp/runtime/vm/bytecode.h
@@ -237,7 +237,7 @@ struct ActRec {
     struct {
       union {
         ObjectData* m_this;    // This.
-        Class* m_cls;      // Late bound class.
+        Class* m_cls;          // Late bound class.
       };
       union {
         VarEnv* m_varEnv;       // Variable environment; only used when the
diff --git a/hphp/runtime/vm/jit/unique-stubs-x64.cpp b/hphp/runtime/vm/jit/unique-stubs-x64.cpp
index 276ed7adc1..1f52803978 100644
--- a/hphp/runtime/vm/jit/unique-stubs-x64.cpp
+++ b/hphp/runtime/vm/jit/unique-stubs-x64.cpp
@@ -375,7 +375,7 @@ void emitFuncPrologueRedispatch(UniqueStubs& uniqueStubs) {
   // ecx := num declared parameters
   a.    loadq  (rVmFp[AROFF(m_func)], rax);
   a.    loadl  (rVmFp[AROFF(m_numArgsAndFlags)], edx);
-  a.    andl   (0x1fffffff, edx);
+  a.    andl   (ActRec::kNumArgsMask, edx);
   a.    loadl  (rax[Func::paramCountsOff()], ecx);
   // see Func::finishedEmittingParams and Func::numParams for rationale
   a.    shrl   (0x1, ecx);

