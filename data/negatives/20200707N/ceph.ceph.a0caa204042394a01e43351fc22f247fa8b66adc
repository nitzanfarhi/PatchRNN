commit a0caa204042394a01e43351fc22f247fa8b66adc
Author: Radoslaw Zarzynski <rzarzynski@mirantis.com>
Date:   Sun Apr 17 12:22:27 2016 +0200

    rgw: allow giving perms in Swift ACLs to an identity who don't have a local account.
    
    Signed-off-by: Radoslaw Zarzynski <rzarzynski@mirantis.com>

diff --git a/src/rgw/rgw_acl.h b/src/rgw/rgw_acl.h
index 6ae2cbd062..f10998beb8 100644
--- a/src/rgw/rgw_acl.h
+++ b/src/rgw/rgw_acl.h
@@ -184,7 +184,7 @@ public:
 
   ACLGroupTypeEnum uri_to_group(string& uri);
   
-  void set_canon(const rgw_user& _id, string& _name, int perm) {
+  void set_canon(const rgw_user& _id, const string& _name, const  int perm) {
     type.set(ACL_TYPE_CANON_USER);
     id = _id;
     name = _name;
diff --git a/src/rgw/rgw_acl_swift.cc b/src/rgw/rgw_acl_swift.cc
index 731c98585d..228866ce08 100644
--- a/src/rgw/rgw_acl_swift.cc
+++ b/src/rgw/rgw_acl_swift.cc
@@ -138,6 +138,8 @@ void RGWAccessControlPolicy_SWIFT::add_grants(RGWRados * const store,
       if (rgw_get_user_info_by_uid(store, user, grant_user) < 0) {
         ldout(cct, 10) << "grant user does not exist: " << uid << dendl;
         /* skipping silently */
+        grant.set_canon(user, std::string(), perm);
+        acl.add_grant(&grant);
       } else {
         grant.set_canon(user, grant_user.display_name, perm);
         acl.add_grant(&grant);
@@ -224,6 +226,8 @@ void RGWAccessControlPolicy_SWIFTAcct::add_grants(RGWRados * const store,
       if (rgw_get_user_info_by_uid(store, user, grant_user) < 0) {
         ldout(cct, 10) << "grant user does not exist:" << uid << dendl;
         /* skipping silently */
+        grant.set_canon(user, std::string(), perm);
+        acl.add_grant(&grant);
       } else {
         grant.set_canon(user, grant_user.display_name, perm);
         acl.add_grant(&grant);

