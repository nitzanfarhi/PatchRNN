commit fb8fa3c67c78d2218c578164b756cd000b0736d1
Author: Tomas HÃ¤rdin <tomas.hardin@codemill.se>
Date:   Fri Mar 2 11:33:28 2012 +0100

    mxfdec: fix Avid AirSpeed files being misinterpreted as OP1a
    
    The "ECs != 1 -> OP1a" assumption was wrong. Luckily, the file
    that triggered that behavior had two ECs, not zero. Hence
    distinguishing between them is simple in this case.
    
    Signed-off-by: Michael Niedermayer <michaelni@gmx.at>
    Signed-off-by: Luca Barbato <lu_zero@gentoo.org>

diff --git a/libavformat/mxfdec.c b/libavformat/mxfdec.c
index a0bbd7a33..74a86a881 100644
--- a/libavformat/mxfdec.c
+++ b/libavformat/mxfdec.c
@@ -510,16 +510,20 @@ static int mxf_read_partition_pack(void *arg, AVIOContext *pb, int tag, int size
     else if (op[12] == 64&& op[13] == 1) mxf->op = OPSonyOpt;
     else if (op[12] == 0x10) {
         /* SMPTE 390m: "There shall be exactly one essence container"
-         * 2011_DCPTEST_24FPS.V.mxf violates this and is frame wrapped,
-         * which is why we assume OP1a. */
+         * The following block deals with files that violate this, namely:
+         * 2011_DCPTEST_24FPS.V.mxf - two ECs, OP1a
+         * abcdefghiv016f56415e.mxf - zero ECs, OPAtom, output by Avid AirSpeed */
         if (nb_essence_containers != 1) {
+            MXFOP op = nb_essence_containers ? OP1a : OPAtom;
+
             /* only nag once */
             if (!mxf->op)
                 av_log(mxf->fc, AV_LOG_WARNING,
-                       "\"OPAtom\" with %u ECs - assuming OP1a\n",
-                       nb_essence_containers);
+                       "\"OPAtom\" with %u ECs - assuming %s\n",
+                       nb_essence_containers,
+                       op == OP1a ? "OP1a" : "OPAtom");
 
-            mxf->op = OP1a;
+            mxf->op = op;
         } else
             mxf->op = OPAtom;
     } else {

