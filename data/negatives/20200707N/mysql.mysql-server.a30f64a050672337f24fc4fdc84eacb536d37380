commit a30f64a050672337f24fc4fdc84eacb536d37380
Author: Shaohua Wang <shaohua.wang@oracle.com>
Date:   Fri Mar 14 19:46:24 2014 +0800

    Set ibuf bitmap when finishing a page

diff --git a/storage/innobase/btr/btr0bulk.cc b/storage/innobase/btr/btr0bulk.cc
index 7f4d36f10bc..a90caf39d90 100644
--- a/storage/innobase/btr/btr0bulk.cc
+++ b/storage/innobase/btr/btr0bulk.cc
@@ -26,6 +26,7 @@ Created 03/11/2014 Shaohua Wang
 #include "btr0bulk.h"
 #include "btr0btr.h"
 #include "btr0cur.h"
+#include "ibuf0ibuf.h"
 
 char	innobase_enable_bulk_load;
 
@@ -311,6 +312,14 @@ void PageBulk::commit(bool	success)
 {
 	if (success) {
 		ut_ad(page_validate(m_page, m_index));
+
+		/* Set no free space left and no buffered changes in ibuf. */
+		if (!dict_index_is_clust(m_index)
+		    && !dict_table_is_temporary(m_index->table)
+		    && page_is_leaf(m_page)) {
+			ibuf_set_bitmap_for_bulk_load(
+				m_block, innobase_index_fill_factor == 100);
+        	}
 	}
 
 	mtr_commit(m_mtr);
diff --git a/storage/innobase/ibuf/ibuf0ibuf.cc b/storage/innobase/ibuf/ibuf0ibuf.cc
index 7de99803abb..e9b877a9092 100644
--- a/storage/innobase/ibuf/ibuf0ibuf.cc
+++ b/storage/innobase/ibuf/ibuf0ibuf.cc
@@ -5170,4 +5170,38 @@ ibuf_check_bitmap_on_import(
 	mutex_exit(&ibuf_mutex);
 	return(DB_SUCCESS);
 }
+
+/**********************************************************************//**
+Updates free bits and buffered bits for bulk load. */
+void
+ibuf_set_bitmap_for_bulk_load(
+/*==========================*/
+	buf_block_t*	block,	/*!< in: index page */
+	bool		reset)	/*!< in: if reset free val. */
+{
+	page_t*	bitmap_page;
+	mtr_t	mtr;
+	ulint	free_val;
+
+	ut_a(page_is_leaf(buf_block_get_frame(block)));
+
+	free_val = ibuf_index_page_calc_free(block);
+
+	mtr_start(&mtr);
+
+	bitmap_page = ibuf_bitmap_get_map_page(block->page.id,
+                                               block->page.size, &mtr);
+
+	free_val = reset ? 0 : ibuf_index_page_calc_free(block);
+	ibuf_bitmap_page_set_bits(
+		bitmap_page, block->page.id, block->page.size,
+		IBUF_BITMAP_FREE, free_val, &mtr);
+
+	ibuf_bitmap_page_set_bits(
+		bitmap_page, block->page.id, block->page.size,
+		IBUF_BITMAP_BUFFERED, FALSE, &mtr);
+
+	mtr_commit(&mtr);
+}
+
 #endif /* !UNIV_HOTBACKUP */
diff --git a/storage/innobase/include/ibuf0ibuf.h b/storage/innobase/include/ibuf0ibuf.h
index c2a005a2688..61496841416 100644
--- a/storage/innobase/include/ibuf0ibuf.h
+++ b/storage/innobase/include/ibuf0ibuf.h
@@ -448,6 +448,14 @@ ibuf_check_bitmap_on_import(
 	ulint		space_id)	/*!< in: tablespace identifier */
 	__attribute__((nonnull, warn_unused_result));
 
+/**********************************************************************//**
+Updates free bits and buffered bits for bulk load. */
+void
+ibuf_set_bitmap_for_bulk_load(
+/*==========================*/
+	buf_block_t*    block,	/*!< in: index page */
+	bool		reset);	/*!< in: if reset free val. */
+
 #define IBUF_HEADER_PAGE_NO	FSP_IBUF_HEADER_PAGE_NO
 #define IBUF_TREE_ROOT_PAGE_NO	FSP_IBUF_TREE_ROOT_PAGE_NO
 

