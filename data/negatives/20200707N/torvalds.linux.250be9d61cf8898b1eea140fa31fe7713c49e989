commit 250be9d61cf8898b1eea140fa31fe7713c49e989
Author: Shanker Donthineni <shankerd@codeaurora.org>
Date:   Mon Feb 19 09:38:07 2018 -0600

    KVM: arm/arm64: No need to zero CNTVOFF in kvm_timer_vcpu_put() for VHE
    
    In AArch64/AArch32, the virtual counter uses a fixed virtual offset
    of zero in the following situations as per ARMv8 specifications:
    
    1) HCR_EL2.E2H is 1, and CNTVCT_EL0/CNTVCT are read from EL2.
    2) HCR_EL2.{E2H, TGE} is {1, 1}, and either:
       — CNTVCT_EL0 is read from Non-secure EL0 or EL2.
       — CNTVCT is read from Non-secure EL0.
    
    So, no need to zero CNTVOFF_EL2/CNTVOFF for VHE case.
    
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Acked-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Shanker Donthineni <shankerd@codeaurora.org>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>

diff --git a/virt/kvm/arm/arch_timer.c b/virt/kvm/arm/arch_timer.c
index 70268c0bec79..86eca32474cc 100644
--- a/virt/kvm/arm/arch_timer.c
+++ b/virt/kvm/arm/arch_timer.c
@@ -541,9 +541,11 @@ void kvm_timer_vcpu_put(struct kvm_vcpu *vcpu)
 	 * The kernel may decide to run userspace after calling vcpu_put, so
 	 * we reset cntvoff to 0 to ensure a consistent read between user
 	 * accesses to the virtual counter and kernel access to the physical
-	 * counter.
+	 * counter of non-VHE case. For VHE, the virtual counter uses a fixed
+	 * virtual offset of zero, so no need to zero CNTVOFF_EL2 register.
 	 */
-	set_cntvoff(0);
+	if (!has_vhe())
+		set_cntvoff(0);
 }
 
 /*

