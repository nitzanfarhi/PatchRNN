commit 8998860c7b7deaae3c44721aa07b5cc0de2cd579
Author: Ruben Ayrapetyan <r.ayrapetyan@samsung.com>
Date:   Wed Dec 3 19:25:16 2014 +0300

    Extract non-inlineable long path from ecma_op_object_get_own_property.

diff --git a/src/libecmaoperations/ecma-objects.c b/src/libecmaoperations/ecma-objects.c
index e049cd36..eca9f661 100644
--- a/src/libecmaoperations/ecma-objects.c
+++ b/src/libecmaoperations/ecma-objects.c
@@ -67,29 +67,15 @@ ecma_op_object_get (ecma_object_t *obj_p, /**< the object */
 } /* ecma_op_object_get */
 
 /**
- * [[GetOwnProperty]] ecma object's operation
- *
- * See also:
- *          ECMA-262 v5, 8.6.2; ECMA-262 v5, Table 8
+ * Long path for ecma_op_object_get_own_property
  *
  * @return pointer to a property - if it exists,
  *         NULL (i.e. ecma-undefined) - otherwise.
  */
-ecma_property_t*
-ecma_op_object_get_own_property (ecma_object_t *obj_p, /**< the object */
-                                 ecma_string_t *property_name_p) /**< property name */
+static __noinline ecma_property_t*
+ecma_op_object_get_own_property_longpath (ecma_object_t *obj_p, /**< the object */
+                                          ecma_string_t *property_name_p) /**< property name */
 {
-  JERRY_ASSERT(obj_p != NULL
-               && !ecma_is_lexical_environment (obj_p));
-  JERRY_ASSERT(property_name_p != NULL);
-
-  ecma_property_t *prop_p = NULL;
-
-  if (likely (ecma_lcache_lookup (obj_p, property_name_p, &prop_p)))
-  {
-    return prop_p;
-  }
-
   const ecma_object_type_t type = ecma_get_object_type (obj_p);
   JERRY_ASSERT (type < ECMA_OBJECT_TYPE__COUNT);
 
@@ -107,7 +93,7 @@ ecma_op_object_get_own_property (ecma_object_t *obj_p, /**< the object */
     [ECMA_OBJECT_TYPE_STRING]            = &ecma_op_string_object_get_own_property
   };
 
-  prop_p = get_own_property[type] (obj_p, property_name_p);
+  ecma_property_t *prop_p = get_own_property[type] (obj_p, property_name_p);
 
   if (unlikely (prop_p == NULL))
   {
@@ -119,6 +105,35 @@ ecma_op_object_get_own_property (ecma_object_t *obj_p, /**< the object */
   }
 
   return prop_p;
+} /* ecma_op_object_get_own_property_longpath */
+
+/**
+ * [[GetOwnProperty]] ecma object's operation
+ *
+ * See also:
+ *          ECMA-262 v5, 8.6.2; ECMA-262 v5, Table 8
+ *
+ * @return pointer to a property - if it exists,
+ *         NULL (i.e. ecma-undefined) - otherwise.
+ */
+ecma_property_t*
+ecma_op_object_get_own_property (ecma_object_t *obj_p, /**< the object */
+                                 ecma_string_t *property_name_p) /**< property name */
+{
+  JERRY_ASSERT(obj_p != NULL
+               && !ecma_is_lexical_environment (obj_p));
+  JERRY_ASSERT(property_name_p != NULL);
+
+  ecma_property_t *prop_p = NULL;
+
+  if (likely (ecma_lcache_lookup (obj_p, property_name_p, &prop_p)))
+  {
+    return prop_p;
+  }
+  else
+  {
+    return ecma_op_object_get_own_property_longpath (obj_p, property_name_p);
+  }
 } /* ecma_op_object_get_own_property */
 
 /**

