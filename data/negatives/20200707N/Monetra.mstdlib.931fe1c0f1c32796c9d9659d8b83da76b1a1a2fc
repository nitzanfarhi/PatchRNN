commit 931fe1c0f1c32796c9d9659d8b83da76b1a1a2fc
Author: John Schember <john@nachtimwald.com>
Date:   Wed Apr 18 13:29:09 2018 -0400

    http: read body.

diff --git a/formats/http/m_http.c b/formats/http/m_http.c
index 13c3effae..33ff6c245 100644
--- a/formats/http/m_http.c
+++ b/formats/http/m_http.c
@@ -134,6 +134,10 @@ void M_http_clear_body(M_http_t *http)
 	if (http == NULL)
 		return;
 
+	http->have_body_len  = M_FALSE;
+	http->body_len_total = 0;
+	http->body_len_cur   = 0;
+
 	M_buf_cancel(http->body);
 	http->body = M_buf_create();
 }
@@ -576,17 +580,3 @@ M_http_method_t M_http_method_from_str(const char *method)
 
 	return M_HTTP_METHOD_UNKNOWN;
 }
-
-void M_http_set_body_length(M_http_t *http, size_t len)
-{
-	if (http == NULL)
-		return;
-	http->body_len = len;
-}
-
-size_t M_http_body_length(M_http_t *http)
-{
-	if (http == NULL)
-		return 0;
-	return http->body_len;
-}
diff --git a/formats/http/m_http_data.c b/formats/http/m_http_data.c
index cf58cb3d0..5e1f645a3 100644
--- a/formats/http/m_http_data.c
+++ b/formats/http/m_http_data.c
@@ -67,6 +67,7 @@ void M_http_body_append(M_http_t *http, const unsigned char *data, size_t len)
 	if (http == NULL || data == NULL || len == 0)
 		return;
 
+	http->body_len_cur += len;
 	M_buf_add_bytes(http->body, data, len);
 }
 
@@ -159,3 +160,25 @@ void M_http_add_chunk_trailer(M_http_t *http, const char *key, const char *val)
 
 	M_hash_dict_insert(http->trailers, key, val);
 }
+
+void M_http_set_body_length(M_http_t *http, size_t len)
+{
+	if (http == NULL)
+		return;
+	http->have_body_len  = M_TRUE;
+	http->body_len_total = len;
+}
+
+size_t M_http_body_length(M_http_t *http)
+{
+	if (http == NULL)
+		return 0;
+	return http->body_len_total;
+}
+
+size_t M_http_body_length_current(M_http_t *http)
+{
+	if (http == NULL)
+		return 0;
+	return http->body_len_cur;
+}
diff --git a/formats/http/m_http_int.h b/formats/http/m_http_int.h
index d25ed5acc..29f1c6ee4 100644
--- a/formats/http/m_http_int.h
+++ b/formats/http/m_http_int.h
@@ -49,10 +49,12 @@ struct M_http {
 	M_list_str_t          *set_cookies;
 	M_buf_t               *body;
 	char                  *settings_payload;
-	size_t                 body_len;
+	M_bool                 have_body_len;
+	size_t                 body_len_total;
+	size_t                 body_len_cur;
 	M_bool                 headers_complete;
-	M_bool                 body_complete;
 	M_bool                 chunked;
+	M_bool                 body_complete;
 	M_bool                 chunk_complete;
 	M_bool                 persist_conn;
 	M_bool                 want_upgrade;
@@ -66,5 +68,6 @@ void M_http_set_headers_int(M_hash_dict_t **cur_headers, const M_hash_dict_t *ne
 char *M_http_header_int(const M_hash_dict_t *d, const char *key);
 void M_http_set_body_length(M_http_t *http, size_t len);
 size_t M_http_body_length(M_http_t *http);
+size_t M_http_body_length_current(M_http_t *http);
 
 #endif
diff --git a/formats/http/m_http_reader.c b/formats/http/m_http_reader.c
index c7efc0c5a..121a4b4d0 100644
--- a/formats/http/m_http_reader.c
+++ b/formats/http/m_http_reader.c
@@ -83,7 +83,7 @@ static M_http_error_t M_http_read_start_line_response(M_http_t *http, M_parser_t
 }
 
 /* request-line = method SP request-target SP HTTP-version CRLF */
-static M_http_error_t M_http_read_start_line_request(M_http_t *http, M_parser_t *parser, size_t *len_read)
+static M_http_error_t M_http_read_start_line_request(M_http_t *http, M_parser_t *parser)
 {
 	char            *temp;
 	M_http_method_t  method;
@@ -152,7 +152,7 @@ done:
 	M_parser_destroy(msg);
 
 	if (!M_http_error_is_error(res))
-		*len_read += start_len - M_parser_len(parser);
+		*(len_read) += start_len - M_parser_len(parser);
 	return res;
 }
 
@@ -255,7 +255,7 @@ static M_http_error_t M_http_read_headers_validate(M_http_t *http)
 	return M_HTTP_ERROR_SUCCESS;
 }
 
-static M_http_error_t M_http_read_headers(M_http_t *http, M_parser_t *parser)
+static M_http_error_t M_http_read_headers(M_http_t *http, M_parser_t *parser, size_t *len_read)
 {
 	M_parser_t      *msg;
 	M_parser_t     **parts;
@@ -364,20 +364,49 @@ done:
 		M_http_clear_headers(http);
 		M_http_clear_chunked(http);
 		M_http_set_body_length(http, 0);
-		M_http_set_want_upgrade(http, M_FALSE);
+		M_http_set_want_upgrade(http, M_FALSE, M_FALSE, NULL);
 		M_http_set_persistent_conn(http, M_FALSE);
 	} else {
-		*len_read += start_len - M_parser_len(parser);
+		*(len_read) += start_len - M_parser_len(parser);
 	}
 	return res;
 }
 
-static M_http_error_t M_http_read_chunked(M_http_t *http, M_parser_t *parser)
+static M_http_error_t M_http_read_chunked(M_http_t *http, M_parser_t *parser, size_t *len_read)
 {
 }
 
-static M_http_error_t M_http_read_body(M_http_t *http, M_parser_t *parser)
+static M_http_error_t M_http_read_body(M_http_t *http, M_parser_t *parser, size_t *len_read)
 {
+	unsigned char buf[8*1024];
+	size_t total;
+	size_t cur;
+	size_t len;
+
+	total = M_http_body_length(http);
+
+	/* If total is unknown then everything is body
+ 	 * and it ends with the connection is closed. */
+	if (!M_http_have_body_length(http)) {
+		*(len_read) += M_parser_len(parser);
+		M_parser_read_buf(parser, buf, M_parser_len(parser));
+		return M_HTTP_ERROR_SUCCESS;
+	}
+
+	cur = M_http_body_length_current(http);
+	if (cur == total)
+		return M_HTTP_ERROR_SUCCESS_END;
+
+	do {
+		len          = M_parser_read_bytes_max(parser, total-cur, buf, sizeof(buf));
+		M_http_body_append(http, buf, len);
+		cur         += len;
+		*(len_read) += len;
+	} while (len > 0 && cur != total);
+
+	if (cur == total)
+		return M_HTTP_ERROR_SUCCESS_END;
+	return M_HTTP_ERROR_SUCCESS;
 }
 
 /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
@@ -399,14 +428,14 @@ M_http_error_t M_http_read(M_http_t *http, const unsigned char *data, size_t dat
 		goto done;
 
 	if (!M_http_headers_complete(http))
-		res = M_http_read_headers(http, parser);
+		res = M_http_read_headers(http, parser, len_read);
 	if (M_http_error_is_error(res) || !M_http_headers_complete(http))
 		goto done;
 
 	if (M_http_is_chunked(http)) {
-		res = M_http_read_chunked(http, parser);
+		res = M_http_read_chunked(http, parser, len_read);
 	} else {
-		res = M_http_read_body(http, parser);
+		res = M_http_read_body(http, parser, len_read);
 	}
 	if (M_http_error_is_error(res))
 		goto done;

