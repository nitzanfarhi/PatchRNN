commit 9e4114b3913cff37be509224116b6f58a2a3918f
Author: Rashmica Gupta <rashmica.g@gmail.com>
Date:   Mon Apr 10 12:04:04 2017 +1000

    powerpc/mm: Fix hash table dump when memory is not contiguous
    
    The current behaviour of the hash table dump assumes that memory is contiguous
    and iterates from the start of memory to (start + size of memory). When memory
    isn't physically contiguous, this doesn't work.
    
    If memory exists at 0-5 GB and 6-10 GB then the current approach will check if
    entries exist in the hash table from 0GB to 9GB. This patch changes the
    behaviour to iterate over any holes up to the end of memory.
    
    Fixes: 1515ab932156 ("powerpc/mm: Dump hash table")
    Signed-off-by: Rashmica Gupta <rashmica.g@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

diff --git a/arch/powerpc/mm/dump_hashpagetable.c b/arch/powerpc/mm/dump_hashpagetable.c
index d979709a0239..c6b900f54c07 100644
--- a/arch/powerpc/mm/dump_hashpagetable.c
+++ b/arch/powerpc/mm/dump_hashpagetable.c
@@ -468,7 +468,7 @@ static void walk_linearmapping(struct pg_state *st)
 	unsigned long psize = 1 << mmu_psize_defs[mmu_linear_psize].shift;
 
 	for (addr = PAGE_OFFSET; addr < PAGE_OFFSET +
-			memblock_phys_mem_size(); addr += psize)
+			memblock_end_of_DRAM(); addr += psize)
 		hpte_find(st, addr, mmu_linear_psize);
 }
 

