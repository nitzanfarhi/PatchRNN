commit 7282c4ef0b66bb3b715ba8875e4e30392e77c7c1
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Tue Oct 25 13:50:46 2016 +0300

    usb: dwc3: gadget: stop touching HWO TRBs
    
    Say we have three requests prepared to the HW (reqA,
    reqB, and reqC). All of them are composed of
    SG-lists with several entries and they all requests
    interrupt only on last TRBs of the SG-list.
    
    When we get interrupt for reqA, it could be that
    reqB is already half-way transferred and some of its
    TRBs will have HWO already cleared.
    
    It's okay to free up TRBs without HWO bit set, but
    we need to guarantee we don't giveback a request
    that's half-way transferred as that will confuse
    gadget drivers.
    
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>

diff --git a/drivers/usb/dwc3/gadget.c b/drivers/usb/dwc3/gadget.c
index 317bb9aed4a4..4643c25702ae 100644
--- a/drivers/usb/dwc3/gadget.c
+++ b/drivers/usb/dwc3/gadget.c
@@ -2104,6 +2104,9 @@ static int dwc3_cleanup_done_reqs(struct dwc3 *dwc, struct dwc3_ep *dep,
 			for_each_sg(sg, s, pending, i) {
 				trb = &dep->trb_pool[dep->trb_dequeue];
 
+				if (trb->ctrl & DWC3_TRB_CTRL_HWO)
+					break;
+
 				req->sg = sg_next(s);
 				req->num_pending_sgs--;
 

