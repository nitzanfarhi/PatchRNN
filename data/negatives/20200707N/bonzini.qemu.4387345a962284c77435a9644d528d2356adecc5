commit 4387345a962284c77435a9644d528d2356adecc5
Author: Peter Maydell <peter.maydell@linaro.org>
Date:   Fri Mar 28 15:29:47 2014 +0000

    tcg: Avoid stores to unaligned addresses
    
    Avoid stores to unaligned addresses in TCG code generation, by using the
    usual memcpy() approach. (Using bswap.h would drag a lot of QEMU baggage
    into TCG, so it's simpler just to do direct memcpy() here.)
    
    Reviewed-by: Alex Benn√©e <alex.bennee@linaro.org>
    Signed-off-by: Peter Maydell <peter.maydell@linaro.org>
    Signed-off-by: Richard Henderson <rth@twiddle.net>

diff --git a/tcg/tcg.c b/tcg/tcg.c
index e71f7a0975..293f00bc5a 100644
--- a/tcg/tcg.c
+++ b/tcg/tcg.c
@@ -125,21 +125,21 @@ static inline void tcg_out8(TCGContext *s, uint8_t v)
 static inline void tcg_out16(TCGContext *s, uint16_t v)
 {
     uint8_t *p = s->code_ptr;
-    *(uint16_t *)p = v;
+    memcpy(p, &v, sizeof(v));
     s->code_ptr = p + 2;
 }
 
 static inline void tcg_out32(TCGContext *s, uint32_t v)
 {
     uint8_t *p = s->code_ptr;
-    *(uint32_t *)p = v;
+    memcpy(p, &v, sizeof(v));
     s->code_ptr = p + 4;
 }
 
 static inline void tcg_out64(TCGContext *s, uint64_t v)
 {
     uint8_t *p = s->code_ptr;
-    *(uint64_t *)p = v;
+    memcpy(p, &v, sizeof(v));
     s->code_ptr = p + 8;
 }
 

