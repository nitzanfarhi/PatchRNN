commit 600914ba524130583fa5acdd00df4aa7aa44b173
Author: Bjorn Helgaas <bjorn.helgaas@hp.com>
Date:   Wed Jan 14 10:04:25 2009 -0700

    PCI/x86: make early dump handle multi-function devices
    
    The early "dump PCI config space" code skips many multi-function
    devices.  This patch fixes that, so it dumps all devices in PCI
    domain 0.
    
    We should not skip the rest of the functions if CLASS_REVISION is
    0xffffffff.  Often multi-function devices have gaps in the function ID
    space, e.g., 1c.0 and 1c.2 exist but 1c.1 doesn't.  The CLASS_REVISION
    of the non-existent 1c.1 function will appear to be 0xffffffff.
    
    We should only look at the HEADER_TYPE of function zero.  Often the
    "multi-function" is set in function zero, but not in other functions.
    
    Signed-off-by: Bjorn Helgaas <bjorn.helgaas@hp.com>
    Signed-off-by: Jesse Barnes <jbarnes@virtuousgeek.org>

diff --git a/arch/x86/pci/early.c b/arch/x86/pci/early.c
index f6adf2c6d751..c1a2cd541724 100644
--- a/arch/x86/pci/early.c
+++ b/arch/x86/pci/early.c
@@ -96,18 +96,21 @@ void early_dump_pci_devices(void)
 			for (func = 0; func < 8; func++) {
 				u32 class;
 				u8 type;
+
 				class = read_pci_config(bus, slot, func,
 							PCI_CLASS_REVISION);
 				if (class == 0xffffffff)
-					break;
+					continue;
 
 				early_dump_pci_device(bus, slot, func);
 
-				/* No multi-function device? */
-				type = read_pci_config_byte(bus, slot, func,
+				if (func == 0) {
+					type = read_pci_config_byte(bus, slot,
+								    func,
 							       PCI_HEADER_TYPE);
-				if (!(type & 0x80))
-					break;
+					if (!(type & 0x80))
+						break;
+				}
 			}
 		}
 	}

