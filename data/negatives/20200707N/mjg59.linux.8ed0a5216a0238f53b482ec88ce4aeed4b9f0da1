commit 8ed0a5216a0238f53b482ec88ce4aeed4b9f0da1
Author: Neil Brown <neilb@notabene.brown>
Date:   Sat Jun 28 08:31:29 2008 +1000

    Enable setting of 'offset' and 'size' of a hot-added spare.
    
    offset_store and rdev_size_store allow control of the region of a
    device which is to be using in an md/raid array.
    They only allow these values to be set when an array is being assembled,
    as changing them on an active array could be dangerous.
    However when adding a spare device to an array, we might need to
    set the offset and size before starting recovery.  So allow
    these values to be set also if "->raid_disk < 0" which indicates that
    the device is still a spare.
    
    Signed-off-by: Neil Brown <neilb@suse.de>

diff --git a/drivers/md/md.c b/drivers/md/md.c
index 9e3ce432e37e..3b5cd4ef54f1 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -1984,7 +1984,7 @@ offset_store(mdk_rdev_t *rdev, const char *buf, size_t len)
 	unsigned long long offset = simple_strtoull(buf, &e, 10);
 	if (e==buf || (*e && *e != '\n'))
 		return -EINVAL;
-	if (rdev->mddev->pers)
+	if (rdev->mddev->pers && rdev->raid_disk >= 0)
 		return -EBUSY;
 	if (rdev->size && rdev->mddev->external)
 		/* Must set offset before size, so overlap checks
@@ -2023,7 +2023,7 @@ rdev_size_store(mdk_rdev_t *rdev, const char *buf, size_t len)
 
 	if (e==buf || (*e && *e != '\n'))
 		return -EINVAL;
-	if (my_mddev->pers)
+	if (my_mddev->pers && rdev->raid_disk >= 0)
 		return -EBUSY;
 	rdev->size = size;
 	if (size > oldsize && rdev->mddev->external) {

