commit c6a3c851a287980e47b45bf191a3b78d9d8508e2
Author: David Daney <ddaney@caviumnetworks.com>
Date:   Wed Dec 23 13:18:54 2009 -0800

    MIPS: Octeon: Add sched_clock() to csrc-octeon.c
    
    With the advent of function graph tracing on MIPS, Octeon needs a high
    precision sched_clock() implementation.  Without it, most timing
    numbers are reported as 0.000.
    
    This new sched_clock just uses the 64-bit cycle counter appropriately
    scaled.
    
    Signed-off-by: David Daney <ddaney@caviumnetworks.com>
    Patchwork: http://patchwork.linux-mips.org/patch/805/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>

diff --git a/arch/mips/cavium-octeon/csrc-octeon.c b/arch/mips/cavium-octeon/csrc-octeon.c
index 96110f217dcd..96df821fbd81 100644
--- a/arch/mips/cavium-octeon/csrc-octeon.c
+++ b/arch/mips/cavium-octeon/csrc-octeon.c
@@ -50,6 +50,13 @@ static struct clocksource clocksource_mips = {
 	.flags		= CLOCK_SOURCE_IS_CONTINUOUS,
 };
 
+unsigned long long notrace sched_clock(void)
+{
+	return clocksource_cyc2ns(read_c0_cvmcount(),
+				  clocksource_mips.mult,
+				  clocksource_mips.shift);
+}
+
 void __init plat_time_init(void)
 {
 	clocksource_mips.rating = 300;

