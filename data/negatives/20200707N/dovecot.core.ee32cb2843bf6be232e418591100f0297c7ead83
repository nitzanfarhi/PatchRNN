commit ee32cb2843bf6be232e418591100f0297c7ead83
Author: Timo Sirainen <tss@iki.fi>
Date:   Sun Mar 16 07:25:40 2008 +0200

    If CONDSTORE is enabled only after mailbox has been selected, send
    HIGHESTMODSEQ so client knows if it had missed some changes.
    
    --HG--
    branch : HEAD

diff --git a/src/imap/client.c b/src/imap/client.c
index 06f84fafa..622531b1f 100644
--- a/src/imap/client.c
+++ b/src/imap/client.c
@@ -782,9 +782,25 @@ int client_output(struct client *client)
 
 void client_enable(struct client *client, enum mailbox_feature features)
 {
+	struct mailbox_status status;
+
+	if ((client->enabled_features & features) == features)
+		return;
+
 	client->enabled_features |= features;
-	if (client->mailbox != NULL)
-		mailbox_enable(client->mailbox, features);
+	if (client->mailbox == NULL)
+		return;
+
+	mailbox_enable(client->mailbox, features);
+	if ((features & MAILBOX_FEATURE_CONDSTORE) != 0) {
+		/* CONDSTORE being enabled while mailbox is selected.
+		   Notify client of the latest HIGHESTMODSEQ. */
+		mailbox_get_status(client->mailbox,
+				   STATUS_HIGHESTMODSEQ, &status);
+		client_send_line(client, t_strdup_printf(
+			"* OK [HIGHESTMODSEQ %llu]",
+			(unsigned long long)status.highest_modseq));
+	}
 }
 
 void clients_init(void)
diff --git a/src/imap/cmd-select.c b/src/imap/cmd-select.c
index 28778313f..6eaa4f30a 100644
--- a/src/imap/cmd-select.c
+++ b/src/imap/cmd-select.c
@@ -22,6 +22,8 @@ struct imap_select_context {
 	ARRAY_TYPE(seq_range) qresync_known_uids;
 	ARRAY_TYPE(uint32_t) qresync_sample_seqset;
 	ARRAY_TYPE(uint32_t) qresync_sample_uidset;
+
+	unsigned int condstore:1;
 };
 
 static int select_qresync_get_uids(struct imap_select_context *ctx,
@@ -157,8 +159,7 @@ select_parse_options(struct imap_select_context *ctx,
 		args++;
 
 		if (strcmp(name, "CONDSTORE") == 0)
-			client_enable(ctx->cmd->client,
-				      MAILBOX_FEATURE_CONDSTORE);
+			ctx->condstore = TRUE;
 		else if (strcmp(name, "QRESYNC") == 0) {
 			if (!select_parse_qresync(ctx, args))
 				return FALSE;
@@ -367,6 +368,12 @@ bool cmd_select_full(struct client_command_context *cmd, bool readonly)
 		client_send_line(client, "* OK [CLOSED]");
 	}
 
+	if (ctx->condstore) {
+		/* Enable while no mailbox is opened to avoid sending
+		   HIGHESTMODSEQ for previously opened mailbox */
+		client_enable(client, MAILBOX_FEATURE_CONDSTORE);
+	}
+
 	ret = select_open(ctx, mailbox, readonly);
 	cmd_select_finish(ctx, ret);
 	return TRUE;

