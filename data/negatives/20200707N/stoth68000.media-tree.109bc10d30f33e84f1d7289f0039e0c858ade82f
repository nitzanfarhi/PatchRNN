commit 109bc10d30f33e84f1d7289f0039e0c858ade82f
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Oct 3 09:13:45 2011 -0400

    drm/radeon/kms: fix regression in DP aux defer handling
    
    An incorrect ordering in the error checking code lead
    to DP aux defer being skipped in the aux native write
    path.  Move the bytes transferred check (ret == 0)
    below the defer check.
    
    Tracked down by: Brad Campbell <brad@fnarfbargle.com>
    
    Fixes:
    https://bugs.freedesktop.org/show_bug.cgi?id=41121
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: Brad Campbell <brad@fnarfbargle.com>
    Cc: stable@kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>

diff --git a/drivers/gpu/drm/radeon/atombios_dp.c b/drivers/gpu/drm/radeon/atombios_dp.c
index 7ad43c6b1db7..f526fa77e320 100644
--- a/drivers/gpu/drm/radeon/atombios_dp.c
+++ b/drivers/gpu/drm/radeon/atombios_dp.c
@@ -158,14 +158,14 @@ static int radeon_dp_aux_native_read(struct radeon_connector *radeon_connector,
 	while (1) {
 		ret = radeon_process_aux_ch(dig_connector->dp_i2c_bus,
 					    msg, msg_bytes, recv, recv_bytes, delay, &ack);
-		if (ret == 0)
-			return -EPROTO;
 		if (ret < 0)
 			return ret;
 		if ((ack & AUX_NATIVE_REPLY_MASK) == AUX_NATIVE_REPLY_ACK)
 			return ret;
 		else if ((ack & AUX_NATIVE_REPLY_MASK) == AUX_NATIVE_REPLY_DEFER)
 			udelay(400);
+		else if (ret == 0)
+			return -EPROTO;
 		else
 			return -EIO;
 	}

