commit 9110540f7f2bbcc3577d2580a696fbb7af68c892
Author: Dave Peterson <dsp@llnl.gov>
Date:   Sun Mar 26 01:38:55 2006 -0800

    [PATCH] EDAC: use EXPORT_SYMBOL_GPL
    
    Change all instances of EXPORT_SYMBOL() in the core EDAC module to
    EXPORT_SYMBOL_GPL().
    
    Signed-off-by: David S. Peterson <dsp@llnl.gov>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/drivers/edac/edac_mc.c b/drivers/edac/edac_mc.c
index bb3460457fa3..905f58ba8e16 100644
--- a/drivers/edac/edac_mc.c
+++ b/drivers/edac/edac_mc.c
@@ -45,7 +45,7 @@
 #ifdef CONFIG_EDAC_DEBUG
 /* Values of 0 to 4 will generate output */
 int edac_debug_level = 1;
-EXPORT_SYMBOL(edac_debug_level);
+EXPORT_SYMBOL_GPL(edac_debug_level);
 #endif
 
 /* EDAC Controls, setable by module parameter, and sysfs */
@@ -1211,7 +1211,7 @@ void edac_mc_dump_channel(struct channel_info *chan)
 	debugf4("\tchannel->label = '%s'\n", chan->label);
 	debugf4("\tchannel->csrow = %p\n\n", chan->csrow);
 }
-EXPORT_SYMBOL(edac_mc_dump_channel);
+EXPORT_SYMBOL_GPL(edac_mc_dump_channel);
 
 void edac_mc_dump_csrow(struct csrow_info *csrow)
 {
@@ -1227,7 +1227,7 @@ void edac_mc_dump_csrow(struct csrow_info *csrow)
 	debugf4("\tcsrow->channels = %p\n", csrow->channels);
 	debugf4("\tcsrow->mci = %p\n\n", csrow->mci);
 }
-EXPORT_SYMBOL(edac_mc_dump_csrow);
+EXPORT_SYMBOL_GPL(edac_mc_dump_csrow);
 
 void edac_mc_dump_mci(struct mem_ctl_info *mci)
 {
@@ -1243,7 +1243,7 @@ void edac_mc_dump_mci(struct mem_ctl_info *mci)
 		mci->mod_name, mci->ctl_name);
 	debugf3("\tpvt_info = %p\n\n", mci->pvt_info);
 }
-EXPORT_SYMBOL(edac_mc_dump_mci);
+EXPORT_SYMBOL_GPL(edac_mc_dump_mci);
 
 #endif  /* CONFIG_EDAC_DEBUG */
 
@@ -1351,7 +1351,7 @@ struct mem_ctl_info *edac_mc_alloc(unsigned sz_pvt, unsigned nr_csrows,
 
 	return mci;
 }
-EXPORT_SYMBOL(edac_mc_alloc);
+EXPORT_SYMBOL_GPL(edac_mc_alloc);
 
 /**
  * edac_mc_free:  Free a previously allocated 'mci' structure
@@ -1361,7 +1361,7 @@ void edac_mc_free(struct mem_ctl_info *mci)
 {
 	kfree(mci);
 }
-EXPORT_SYMBOL(edac_mc_free);
+EXPORT_SYMBOL_GPL(edac_mc_free);
 
 static struct mem_ctl_info *find_mci_by_pdev(struct pci_dev *pdev)
 {
@@ -1499,7 +1499,7 @@ int edac_mc_add_mc(struct mem_ctl_info *mci)
 	up(&mem_ctls_mutex);
 	return 1;
 }
-EXPORT_SYMBOL(edac_mc_add_mc);
+EXPORT_SYMBOL_GPL(edac_mc_add_mc);
 
 /**
  * edac_mc_del_mc: Remove sysfs entries for specified mci structure and
@@ -1528,7 +1528,7 @@ struct mem_ctl_info * edac_mc_del_mc(struct pci_dev *pdev)
 		mci->mod_name, mci->ctl_name, pci_name(mci->pdev));
 	return mci;
 }
-EXPORT_SYMBOL(edac_mc_del_mc);
+EXPORT_SYMBOL_GPL(edac_mc_del_mc);
 
 void edac_mc_scrub_block(unsigned long page, unsigned long offset, u32 size)
 {
@@ -1559,7 +1559,7 @@ void edac_mc_scrub_block(unsigned long page, unsigned long offset, u32 size)
 	if (PageHighMem(pg))
 		local_irq_restore(flags);
 }
-EXPORT_SYMBOL(edac_mc_scrub_block);
+EXPORT_SYMBOL_GPL(edac_mc_scrub_block);
 
 /* FIXME - should return -1 */
 int edac_mc_find_csrow_by_page(struct mem_ctl_info *mci, unsigned long page)
@@ -1597,7 +1597,7 @@ int edac_mc_find_csrow_by_page(struct mem_ctl_info *mci, unsigned long page)
 
 	return row;
 }
-EXPORT_SYMBOL(edac_mc_find_csrow_by_page);
+EXPORT_SYMBOL_GPL(edac_mc_find_csrow_by_page);
 
 /* FIXME - setable log (warning/emerg) levels */
 /* FIXME - integrate with evlog: http://evlog.sourceforge.net/ */
@@ -1660,7 +1660,7 @@ void edac_mc_handle_ce(struct mem_ctl_info *mci,
 					mci->csrows[row].grain);
 	}
 }
-EXPORT_SYMBOL(edac_mc_handle_ce);
+EXPORT_SYMBOL_GPL(edac_mc_handle_ce);
 
 void edac_mc_handle_ce_no_info(struct mem_ctl_info *mci, const char *msg)
 {
@@ -1671,7 +1671,7 @@ void edac_mc_handle_ce_no_info(struct mem_ctl_info *mci, const char *msg)
 	mci->ce_noinfo_count++;
 	mci->ce_count++;
 }
-EXPORT_SYMBOL(edac_mc_handle_ce_no_info);
+EXPORT_SYMBOL_GPL(edac_mc_handle_ce_no_info);
 
 void edac_mc_handle_ue(struct mem_ctl_info *mci,
 		unsigned long page_frame_number, unsigned long offset_in_page,
@@ -1724,7 +1724,7 @@ void edac_mc_handle_ue(struct mem_ctl_info *mci,
 	mci->ue_count++;
 	mci->csrows[row].ue_count++;
 }
-EXPORT_SYMBOL(edac_mc_handle_ue);
+EXPORT_SYMBOL_GPL(edac_mc_handle_ue);
 
 void edac_mc_handle_ue_no_info(struct mem_ctl_info *mci, const char *msg)
 {
@@ -1737,7 +1737,7 @@ void edac_mc_handle_ue_no_info(struct mem_ctl_info *mci, const char *msg)
 	mci->ue_noinfo_count++;
 	mci->ue_count++;
 }
-EXPORT_SYMBOL(edac_mc_handle_ue_no_info);
+EXPORT_SYMBOL_GPL(edac_mc_handle_ue_no_info);
 
 #ifdef CONFIG_PCI
 

