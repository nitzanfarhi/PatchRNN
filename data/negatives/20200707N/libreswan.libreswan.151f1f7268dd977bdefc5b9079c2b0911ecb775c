commit 151f1f7268dd977bdefc5b9079c2b0911ecb775c
Author: Michael Richardson <mcr@xelerance.com>
Date:   Mon Jan 22 16:53:17 2007 -0500

    http://bugs.xelerance.com/view.php?id=491
    
    Patch submitted by Delta Yeh <delta.yeh@gmail.com>
    
    This enabled NAT-T keepalives for agressive mode.
    
    Signed-off-by: Michael Richardson <mcr@xelerance.com>

diff --git a/programs/pluto/nat_traversal.c b/programs/pluto/nat_traversal.c
index 05c23f778..59730a57c 100644
--- a/programs/pluto/nat_traversal.c
+++ b/programs/pluto/nat_traversal.c
@@ -726,7 +726,9 @@ static void nat_traversal_ka_event_state (struct state *st, void *data)
 		st_newest = state_with_serialno(c->newest_isakmp_sa);
 		if ((st_newest)
 		    && ((st_newest->st_state==STATE_MAIN_R3)
-			|| (st_newest->st_state==STATE_MAIN_I4))
+			|| (st_newest->st_state==STATE_MAIN_I4)
+			|| (st_newest->st_state == STATE_AGGR_R2)
+			|| (st_newest->st_state == STATE_AGGR_I2))
 		    && (st_newest->hidden_variables.st_nat_traversal & NAT_T_DETECTED)
 		    && ((st_newest->hidden_variables.st_nat_traversal & LELEM(NAT_TRAVERSAL_NAT_BHND_ME))
 			|| (_force_ka)))
@@ -739,6 +741,41 @@ static void nat_traversal_ka_event_state (struct state *st, void *data)
 	    reset_cur_state();
 	    (*_kap_st)++;
 	}
+
+	if ( ((st->st_state == STATE_QUICK_R2)
+	      || (st->st_state == STATE_QUICK_I2))
+	     &&	(st->hidden_variables.st_nat_traversal & NAT_T_DETECTED)
+	     &&	((st->hidden_variables.st_nat_traversal & LELEM(NAT_TRAVERSAL_NAT_BHND_ME))
+		 || (_force_ka)))
+	{
+	    /**
+	     * - IPSEC SA established
+	     * - NAT-Traversal detected
+	     * - NAT-KeepAlive needed (we are NATed)
+	     */
+	    if (c->newest_ipsec_sa != st->st_serialno) {
+		/** 
+		 * if newest is also valid, ignore this one, we will only use
+		 * newest. 
+		 */
+		struct state *st_newest;
+		st_newest = state_with_serialno(c->newest_ipsec_sa);
+		if ((st_newest)
+		    && ((st_newest->st_state==STATE_QUICK_R2)
+			|| (st_newest->st_state == STATE_QUICK_I2))
+		    && (st_newest->hidden_variables.st_nat_traversal & NAT_T_DETECTED)
+		    && ((st_newest->hidden_variables.st_nat_traversal & LELEM(NAT_TRAVERSAL_NAT_BHND_ME))
+			|| (_force_ka)))
+		{
+		    return;
+		}
+	    }
+	    set_cur_state(st);
+	    nat_traversal_send_ka(st);
+	    reset_cur_state();
+	    (*_kap_st)++;
+	}
+	
 }
 
 void nat_traversal_ka_event (void)

