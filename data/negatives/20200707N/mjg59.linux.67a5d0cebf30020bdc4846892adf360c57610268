commit 67a5d0cebf30020bdc4846892adf360c57610268
Author: Tomasz Stanislawski <t.stanislaws@samsung.com>
Date:   Tue Aug 7 13:19:49 2012 -0300

    [media] v4l: vb2-dma-contig: add reference counting for a device from allocator context
    
    This patch adds taking reference to the device for MMAP buffers.
    Such buffers, may be exported using DMABUF mechanism. If the driver that
    created a queue is unloaded then the queue is released, the device might be
    released too.  However, buffers cannot be released if they are referenced by
    DMABUF descriptor(s). The device pointer kept in a buffer must be valid for the
    whole buffer's lifetime. Therefore MMAP buffers should take a reference to the
    device to avoid risk of dangling pointers.
    
    Signed-off-by: Tomasz Stanislawski <t.stanislaws@samsung.com>
    Acked-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Tested-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/drivers/media/v4l2-core/videobuf2-dma-contig.c b/drivers/media/v4l2-core/videobuf2-dma-contig.c
index 78c281c55ad7..b35f38e9f2d7 100644
--- a/drivers/media/v4l2-core/videobuf2-dma-contig.c
+++ b/drivers/media/v4l2-core/videobuf2-dma-contig.c
@@ -148,6 +148,7 @@ static void vb2_dc_put(void *buf_priv)
 		kfree(buf->sgt_base);
 	}
 	dma_free_coherent(buf->dev, buf->size, buf->vaddr, buf->dma_addr);
+	put_device(buf->dev);
 	kfree(buf);
 }
 
@@ -168,7 +169,8 @@ static void *vb2_dc_alloc(void *alloc_ctx, unsigned long size)
 		return ERR_PTR(-ENOMEM);
 	}
 
-	buf->dev = dev;
+	/* Prevent the device from being released while the buffer is used */
+	buf->dev = get_device(dev);
 	buf->size = size;
 
 	buf->handler.refcount = &buf->refcount;

