commit 546256fbd06d70a87381020ea8553fb78c9abf43
Author: Jouni Malinen <jouni.malinen@atheros.com>
Date:   Thu May 28 19:25:28 2009 +0300

    ath9k: Add sanity check for beacon_int in adhoc/mesh case
    
    It looks like mac80211 can request the driver to start beaconing with
    a beacon interval of zero in some cases (at least for mesh point). This
    does not sound correct and something may need to be fixed in
    mac80211. However, taken into account the unpleasantness of getting
    stuck in an infinite busy loop with rtnl_lock held, let's add a quick
    workaround in the driver to avoid the worst symptom while someone more
    familiar with the mesh implementation can figure out what should be done
    with mac80211 as far as beacon interval configuration is concerned.
    
    Signed-off-by: Jouni Malinen <jouni.malinen@atheros.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/drivers/net/wireless/ath/ath9k/beacon.c b/drivers/net/wireless/ath/ath9k/beacon.c
index 0c67ed2e83ce..3639a2e6987d 100644
--- a/drivers/net/wireless/ath/ath9k/beacon.c
+++ b/drivers/net/wireless/ath/ath9k/beacon.c
@@ -674,6 +674,14 @@ static void ath_beacon_config_adhoc(struct ath_softc *sc,
 
 	intval = conf->beacon_interval & ATH9K_BEACON_PERIOD;
 
+	/*
+	 * It looks like mac80211 may end up using beacon interval of zero in
+	 * some cases (at least for mesh point). Avoid getting into an
+	 * infinite loop by using a bit safer value instead..
+	 */
+	if (intval == 0)
+		intval = 100;
+
 	/* Pull nexttbtt forward to reflect the current TSF */
 
 	nexttbtt = TSF_TO_TU(sc->beacon.bc_tstamp >> 32, sc->beacon.bc_tstamp);

