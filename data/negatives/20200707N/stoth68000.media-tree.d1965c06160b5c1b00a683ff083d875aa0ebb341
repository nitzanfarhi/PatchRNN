commit d1965c06160b5c1b00a683ff083d875aa0ebb341
Author: Markos Chandras <markos.chandras@imgtec.com>
Date:   Wed Jan 15 14:07:57 2014 +0000

    MIPS: malta: malta-memory: Add free_init_pages_eva() callback
    
    Use a Malta specific function to free the init section once the
    kernel has booted. When operating in EVA mode, the physical memory
    is shifted to 0x80000000. Kernel is loaded into 0x80000000 (virtual)
    so the offset between physical and virtual addresses is 0.
    
    Signed-off-by: Markos Chandras <markos.chandras@imgtec.com>

diff --git a/arch/mips/mti-malta/malta-memory.c b/arch/mips/mti-malta/malta-memory.c
index 9235aee832c7..6d0f4ab3632d 100644
--- a/arch/mips/mti-malta/malta-memory.c
+++ b/arch/mips/mti-malta/malta-memory.c
@@ -111,6 +111,12 @@ fw_memblock_t * __init fw_getmdesc(int eva)
 	return &mdesc[0];
 }
 
+static void free_init_pages_eva_malta(void *begin, void *end)
+{
+	free_init_pages("unused kernel", __pa_symbol((unsigned long *)begin),
+			__pa_symbol((unsigned long *)end));
+}
+
 static int __init fw_memtype_classify(unsigned int type)
 {
 	switch (type) {
@@ -128,6 +134,8 @@ void __init fw_meminit(void)
 	fw_memblock_t *p;
 
 	p = fw_getmdesc(config_enabled(CONFIG_EVA));
+	free_init_pages_eva = (config_enabled(CONFIG_EVA) ?
+			       free_init_pages_eva_malta : NULL);
 
 	while (p->size) {
 		long type;

