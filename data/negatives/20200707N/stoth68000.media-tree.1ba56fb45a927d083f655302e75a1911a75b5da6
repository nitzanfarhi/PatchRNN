commit 1ba56fb45a927d083f655302e75a1911a75b5da6
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Tue Nov 13 13:10:59 2012 +0000

    vxlan: Update hard_header_len based on lowerdev when instantiating VXLAN
    
    In the event of a VXLAN device being linked to a device that has a
    hard_header_len greater than that of standard ethernet we could end up with
    the hard_header_len not being large enough for outgoing frames.  In order to
    prevent this we should update the length when a lowerdev is provided.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Acked-by: Stephen Hemminger <shemminger@vyatta.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/vxlan.c b/drivers/net/vxlan.c
index 3d0bf664ea35..8b5c61917076 100644
--- a/drivers/net/vxlan.c
+++ b/drivers/net/vxlan.c
@@ -1102,6 +1102,10 @@ static int vxlan_newlink(struct net *net, struct net_device *dev,
 
 		if (!tb[IFLA_MTU])
 			dev->mtu = lowerdev->mtu - VXLAN_HEADROOM;
+
+		/* update header length based on lower device */
+		dev->hard_header_len = lowerdev->hard_header_len +
+				       VXLAN_HEADROOM;
 	}
 
 	if (data[IFLA_VXLAN_TOS])

