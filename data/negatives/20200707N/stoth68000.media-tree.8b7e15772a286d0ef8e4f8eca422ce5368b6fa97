commit 8b7e15772a286d0ef8e4f8eca422ce5368b6fa97
Author: Michael S. Tsirkin <mst@dev.mellanox.co.il>
Date:   Sun May 27 18:06:42 2007 +0300

    IB/mthca: Fix handling of send CQE with error for QPs connected to SRQ
    
    mthca_free_err_wqe() currently treats both send and receive CQEs
    identically if a QP is using an SRQ.  But for Tavor hardware, send
    CQEs with error can be chained together even if the RQ is part of SRQ,
    so we may miss some CQEs.
    
    Fix by following the WQE chain for all send CQEs even for non-SRQ QPs.
    
    This fixes crashes in IPoIB CM:
    <https://bugs.openfabrics.org//show_bug.cgi?id=604>
    
    Signed-off-by: Michael S. Tsirkin <mst@dev.mellanox.co.il>
    Signed-off-by: Roland Dreier <rolandd@cisco.com>

diff --git a/drivers/infiniband/hw/mthca/mthca_qp.c b/drivers/infiniband/hw/mthca/mthca_qp.c
index 027664979fe2..eef415b12b2e 100644
--- a/drivers/infiniband/hw/mthca/mthca_qp.c
+++ b/drivers/infiniband/hw/mthca/mthca_qp.c
@@ -2284,10 +2284,10 @@ void mthca_free_err_wqe(struct mthca_dev *dev, struct mthca_qp *qp, int is_send,
 	struct mthca_next_seg *next;
 
 	/*
-	 * For SRQs, all WQEs generate a CQE, so we're always at the
-	 * end of the doorbell chain.
+	 * For SRQs, all receive WQEs generate a CQE, so we're always
+	 * at the end of the doorbell chain.
 	 */
-	if (qp->ibqp.srq) {
+	if (qp->ibqp.srq && !is_send) {
 		*new_wqe = 0;
 		return;
 	}

