commit 2ca230baeb7c61864cab9b53e37a3da28a2ca7e5
Author: Yinghai Lu <yinghai@kernel.org>
Date:   Thu Feb 17 14:46:37 2011 +0100

    x86-64, NUMA: Don't call __pa() with invalid address in numa_reset_distance()
    
    Do not call __pa(numa_distance) if it was not allocated before.
    Calling with invalid address triggers VIRTUAL_BUG_ON() in
    __phys_addr() if CONFIG_DEBUG_VIRTUAL.
    
    Also reported by Ingo.
    
     http://thread.gmane.org/gmane.linux.kernel/1101306/focus=1101785
    
    - v2: Change to check existing path as tj requested.
    - tj: Description update.
    
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Ingo Molnar <mingo@elte.hu>

diff --git a/arch/x86/mm/numa_64.c b/arch/x86/mm/numa_64.c
index 8ce617735900..1bd6de4aa714 100644
--- a/arch/x86/mm/numa_64.c
+++ b/arch/x86/mm/numa_64.c
@@ -371,11 +371,13 @@ static void __init numa_reset_distance(void)
 {
 	size_t size;
 
-	size = numa_distance_cnt * sizeof(numa_distance[0]);
-	memblock_x86_free_range(__pa(numa_distance),
-				__pa(numa_distance) + size);
+	if (numa_distance_cnt) {
+		size = numa_distance_cnt * sizeof(numa_distance[0]);
+		memblock_x86_free_range(__pa(numa_distance),
+					__pa(numa_distance) + size);
+		numa_distance_cnt = 0;
+	}
 	numa_distance = NULL;
-	numa_distance_cnt = 0;
 }
 
 /*

