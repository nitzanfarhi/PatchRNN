commit 1675dfc3bb3adca46ef5d400bb7fb1e7cfd5495e
Author: hzhao <hzhao@facebook.com>
Date:   Tue Sep 21 20:49:05 2010 -0700

    fixed libcore-ffi build with original class names
    
    Summary:
    This doesn't fix all the problems. Looks like your change around
    offsetget/set() broke it. Would you arc patch my diff and try to compile to see
    what's happening? Thanks.
    
    Test Plan:
    make -C ../facebook libcore-ffi
    
    DiffCamp Revision: 160777
    Reviewed By: mwilliams
    CC: mwilliams, hphp-diffs@lists
    Revert Plan:
    OK

diff --git a/src/compiler/analysis/function_scope.cpp b/src/compiler/analysis/function_scope.cpp
index 09dd7dca56..27a212a642 100644
--- a/src/compiler/analysis/function_scope.cpp
+++ b/src/compiler/analysis/function_scope.cpp
@@ -1582,10 +1582,10 @@ void FunctionScope::outputMethodWrapper(CodeGenerator &cg,
 
       if (type) cg_printf("return ");
       if (isStatic()) {
-        cg_printf("%sinvoke_mil(NULL, \"%s\", params, -1);\n",
+        cg_printf("%sinvoke(NULL, \"%s\", params, -1);\n",
                   Option::ObjectStaticPrefix, m_name.c_str());
       } else {
-        cg_printf("%sinvoke_mil(\"%s\", params, -1);\n",
+        cg_printf("%sinvoke(\"%s\", params, -1);\n",
                   Option::ObjectPrefix, m_name.c_str());
       }
     }
diff --git a/src/compiler/statement/method_statement.cpp b/src/compiler/statement/method_statement.cpp
index eebc90f401..67aa82c824 100644
--- a/src/compiler/statement/method_statement.cpp
+++ b/src/compiler/statement/method_statement.cpp
@@ -774,6 +774,7 @@ bool MethodStatement::outputFFI(CodeGenerator &cg, AnalysisResultPtr ar) {
 void MethodStatement::outputCPPFFIStub(CodeGenerator &cg,
                                        AnalysisResultPtr ar) {
   FunctionScopePtr funcScope = m_funcScope.lock();
+  ClassScopePtr clsScope = ar->getClassScope();
   bool varArgs = funcScope->isVariableArgument();
   bool ret = funcScope->getReturnType();
   string fname = funcScope->getId(cg);
@@ -784,7 +785,7 @@ void MethodStatement::outputCPPFFIStub(CodeGenerator &cg,
     return;
   }
 
-  if (fname == "__offsetget_lval") {
+  if (funcScope->getName() == "__offsetget_lval") {
     return;
   }
 
@@ -839,17 +840,16 @@ void MethodStatement::outputCPPFFIStub(CodeGenerator &cg,
     if (!inClass) {
       // simple function call
       cg_printf("%s%s(", Option::FunctionPrefix, fname.c_str());
-    }
-    else if (isStatic) {
+    } else if (isStatic) {
       // static method call
-      cg_printf("%s%s::%s%s(", Option::ClassPrefix, m_className.c_str(),
-                Option::MethodPrefix, fname.c_str());
-    }
-    else {
+      cg_printf("%s%s::%s%s(", Option::ClassPrefix,
+                clsScope->getId(cg).c_str(),
+                Option::MethodPrefix, funcScope->getName().c_str());
+    } else {
       // instance method call
       cg_printf("dynamic_cast<%s%s *>(target->getObjectData())->",
-                Option::ClassPrefix, m_className.c_str());
-      cg_printf("%s%s(", Option::MethodPrefix, fname.c_str());
+                Option::ClassPrefix, clsScope->getId(cg).c_str());
+      cg_printf("%s%s(", Option::MethodPrefix, funcScope->getName().c_str());
     }
 
     first = true;
@@ -1125,15 +1125,14 @@ void MethodStatement::outputJavaFFICPPStub(CodeGenerator &cg,
     return;
   }
 
-  if (fname == "__offsetget_lval") return;
+  if (funcScope->getName() == "__offsetget_lval") return;
 
   const char *clsName;
   if (inClass) {
     // uses capitalized original class name
     ClassScopePtr cls = ar->findClass(m_className);
     clsName = cls->getOriginalName().c_str();
-  }
-  else {
+  } else {
     clsName = "HphpMain";
   }
   string mangledName = "Java." + packageName + "." + clsName + "." + fname
@@ -1183,8 +1182,7 @@ void MethodStatement::outputJavaFFICPPStub(CodeGenerator &cg,
               Option::FFIFnPrefix,
               (inClass ? (m_className + "_cls_").c_str() : ""), fname.c_str());
     if (!isStatic || ac > 0 || varArgs) cg_printf(", ");
-  }
-  else {
+  } else {
     cg_printf("%s%s%s(", Option::FFIFnPrefix,
                          (inClass ? (m_className + "_cls_").c_str() : ""),
                          fname.c_str());

