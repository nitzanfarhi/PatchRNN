commit 6271b3721436679a0f3d6aef2630d6d214408309
Author: Eliot Horowitz <eliot@10gen.com>
Date:   Mon Aug 2 14:04:33 2010 -0400

    PeriodicBackgroundJob for things that run every x time period

diff --git a/util/background.cpp b/util/background.cpp
index df2162ae3e..a6d8290d61 100644
--- a/util/background.cpp
+++ b/util/background.cpp
@@ -96,5 +96,24 @@ namespace mongo {
             }
         }
     }
+    
+    void PeriodicBackgroundJob::run(){
+        // want to handle first one differently so inShutdown is obeyed nicely
+        sleepmillis( _millis );
+        
+        while ( ! inShutdown() ){
+            try {
+                runLoop();
+            }
+            catch ( std::exception& e ){
+                log( LL_ERROR ) << "PeriodicBackgroundJob [" << name() << "] error: " << e.what() << endl;
+            }
+            catch ( ... ){
+                log( LL_ERROR ) << "PeriodicBackgroundJob [" << name() << "] unknown error" << endl;
+            }
+            
+            sleepmillis( _millis );
+        }
+    }
 
 } // namespace mongo
diff --git a/util/background.h b/util/background.h
index 43f3ceb5ed..ee59455e06 100644
--- a/util/background.h
+++ b/util/background.h
@@ -91,4 +91,23 @@ namespace mongo {
         volatile State state;
     };
 
+    class PeriodicBackgroundJob : public BackgroundJob {
+    public:
+        PeriodicBackgroundJob( int millisToSleep ) 
+            : _millis( millisToSleep ){
+        }
+        
+        virtual ~PeriodicBackgroundJob(){}
+
+        /** this gets called every millisToSleep ms */
+        virtual void runLoop() = 0;
+        
+        virtual void run();
+
+
+    private:
+        int _millis;
+                
+    };
+
 } // namespace mongo

