commit fdcf77659c103388a67f40f2f8db239b57c1ce4e
Author: Ma JieYue <jieyue.majy@alibaba-inc.com>
Date:   Fri Nov 15 12:26:13 2013 +0800

    xen-netfront: fix missing rx_refill_timer when allocate memory failed
    
    There was a bug in xennet_alloc_rx_buffers, when allocating page or
    sk_buff failed, and at the same time rx_batch queue not empty,
    the rx_refill_timer timer won't be scheduled. If finally the remaining
    request buffers in rx ring less than what backend driver expected,
    the backend driver would think of rx ring as full and start dropping packets.
    In such situation, there is no way for the netfront driver to recover
    automatically, so that the device can not work properly.
    
    The patch fixes the problem by always scheduling rx_refill_timer timer when
    alloc_page or __netdev_alloc_skb fails, no matter whether rx_batch queue is
    empty or not. It ensures that the rx ring request buffers will finally meet
    the backend needs.
    
    Signed-off-by: Ma JieYue <jieyue.majy@alibaba-inc.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/xen-netfront.c b/drivers/net/xen-netfront.c
index dd1011e55cb5..5bd20d99acc8 100644
--- a/drivers/net/xen-netfront.c
+++ b/drivers/net/xen-netfront.c
@@ -277,12 +277,13 @@ static void xennet_alloc_rx_buffers(struct net_device *dev)
 		if (!page) {
 			kfree_skb(skb);
 no_skb:
-			/* Any skbuffs queued for refill? Force them out. */
-			if (i != 0)
-				goto refill;
 			/* Could not allocate any skbuffs. Try again later. */
 			mod_timer(&np->rx_refill_timer,
 				  jiffies + (HZ/10));
+
+			/* Any skbuffs queued for refill? Force them out. */
+			if (i != 0)
+				goto refill;
 			break;
 		}
 

