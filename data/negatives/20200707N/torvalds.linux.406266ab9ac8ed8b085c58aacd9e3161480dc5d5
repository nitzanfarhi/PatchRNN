commit 406266ab9ac8ed8b085c58aacd9e3161480dc5d5
Author: Jan Engelhardt <jengelh@medozas.de>
Date:   Wed Dec 9 22:00:38 2009 +0000

    btrfs: fix missing last-entry in readdir(3)
    
    parent 49313cdac7b34c9f7ecbb1780cfc648b1c082cd7 (v2.6.32-1-g49313cd)
    commit ff48c08e1c05c67e8348ab6f8a24de8034e0e34d
    Author: Jan Engelhardt <jengelh@medozas.de>
    Date:   Wed Dec 9 22:57:36 2009 +0100
    
    Btrfs: fix missing last-entry in readdir(3)
    
    When one does a 32-bit readdir(3), the last entry of a directory is
    missing. This is however not due to passing a large value to filldir,
    but it seems to have to do with glibc doing telldir or something
    quirky. In any case, this patch fixes it in practice.
    
    Signed-off-by: Jan Engelhardt <jengelh@medozas.de>
    Signed-off-by: Chris Mason <chris.mason@oracle.com>

diff --git a/fs/btrfs/inode.c b/fs/btrfs/inode.c
index 5440bab23635..d5aa97310943 100644
--- a/fs/btrfs/inode.c
+++ b/fs/btrfs/inode.c
@@ -3995,7 +3995,11 @@ static int btrfs_real_readdir(struct file *filp, void *dirent,
 
 	/* Reached end of directory/root. Bump pos past the last item. */
 	if (key_type == BTRFS_DIR_INDEX_KEY)
-		filp->f_pos = INT_LIMIT(off_t);
+		/*
+		 * 32-bit glibc will use getdents64, but then strtol -
+		 * so the last number we can serve is this.
+		 */
+		filp->f_pos = 0x7fffffff;
 	else
 		filp->f_pos++;
 nopos:

