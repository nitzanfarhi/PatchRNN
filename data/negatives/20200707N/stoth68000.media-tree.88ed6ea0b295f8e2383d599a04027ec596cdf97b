commit 88ed6ea0b295f8e2383d599a04027ec596cdf97b
Author: Sage Weil <sage@inktank.com>
Date:   Thu May 31 20:22:18 2012 -0700

    libceph: use con get/put ops from osd_client
    
    There were a few direct calls to ceph_con_{get,put}() instead of the con
    ops from osd_client.c.  This is a bug since those ops aren't defined to
    be ceph_con_get/put.
    
    This breaks refcounting on the ceph_osd structs that contain the
    ceph_connections, and could lead to all manner of strangeness.
    
    The purpose of the ->get and ->put methods in a ceph connection are
    to allow the connection to indicate it has a reference to something
    external to the messaging system, *not* to indicate something
    external has a reference to the connection.
    
    [elder@inktank.com: added that last sentence]
    
    Signed-off-by: Sage Weil <sage@newdream.net>
    Reviewed-by: Alex Elder <elder@inktank.com>
    (cherry picked from commit 0d47766f14211a73eaf54cab234db134ece79f49)

diff --git a/net/ceph/osd_client.c b/net/ceph/osd_client.c
index 13538da41dd6..ca59e66c9787 100644
--- a/net/ceph/osd_client.c
+++ b/net/ceph/osd_client.c
@@ -144,7 +144,7 @@ void ceph_osdc_release_request(struct kref *kref)
 		     req->r_pages, req->r_con_filling_msg);
 		ceph_con_revoke_message(req->r_con_filling_msg,
 				      req->r_reply);
-		ceph_con_put(req->r_con_filling_msg);
+		req->r_con_filling_msg->ops->put(req->r_con_filling_msg);
 	}
 	if (req->r_reply)
 		ceph_msg_put(req->r_reply);
@@ -1216,7 +1216,7 @@ static void handle_reply(struct ceph_osd_client *osdc, struct ceph_msg *msg,
 	if (req->r_con_filling_msg == con && req->r_reply == msg) {
 		dout(" dropping con_filling_msg ref %p\n", con);
 		req->r_con_filling_msg = NULL;
-		ceph_con_put(con);
+		con->ops->put(con);
 	}
 
 	if (!req->r_got_reply) {
@@ -2028,7 +2028,7 @@ static struct ceph_msg *get_reply(struct ceph_connection *con,
 		dout("get_reply revoking msg %p from old con %p\n",
 		     req->r_reply, req->r_con_filling_msg);
 		ceph_con_revoke_message(req->r_con_filling_msg, req->r_reply);
-		ceph_con_put(req->r_con_filling_msg);
+		req->r_con_filling_msg->ops->put(req->r_con_filling_msg);
 		req->r_con_filling_msg = NULL;
 	}
 
@@ -2063,7 +2063,7 @@ static struct ceph_msg *get_reply(struct ceph_connection *con,
 #endif
 	}
 	*skip = 0;
-	req->r_con_filling_msg = ceph_con_get(con);
+	req->r_con_filling_msg = con->ops->get(con);
 	dout("get_reply tid %lld %p\n", tid, m);
 
 out:

