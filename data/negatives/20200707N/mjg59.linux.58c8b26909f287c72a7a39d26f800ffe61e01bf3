commit 58c8b26909f287c72a7a39d26f800ffe61e01bf3
Author: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
Date:   Fri Oct 18 16:01:32 2013 +0000

    arm64/xen: get_dma_ops: return xen_dma_ops if we are running as xen_initial_domain
    
    We can't simply override arm_dma_ops with xen_dma_ops because devices
    are allowed to have their own dma_ops and they take precedence over
    arm_dma_ops. When running on Xen as initial domain, we always want
    xen_dma_ops to be the one in use.
    
    We introduce __generic_dma_ops to allow xen_dma_ops functions to call
    back to the native implementation.
    
    Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    CC: will.deacon@arm.com
    
    Changes in v7:
    - return xen_dma_ops only if we are the initial domain;
    - rename __get_dma_ops to __generic_dma_ops.

diff --git a/arch/arm64/include/asm/dma-mapping.h b/arch/arm64/include/asm/dma-mapping.h
index 59206b178494..fd0c0c0e447a 100644
--- a/arch/arm64/include/asm/dma-mapping.h
+++ b/arch/arm64/include/asm/dma-mapping.h
@@ -23,12 +23,15 @@
 
 #include <asm-generic/dma-coherent.h>
 
+#include <xen/xen.h>
+#include <asm/xen/hypervisor.h>
+
 #define ARCH_HAS_DMA_GET_REQUIRED_MASK
 
 #define DMA_ERROR_CODE	(~(dma_addr_t)0)
 extern struct dma_map_ops *dma_ops;
 
-static inline struct dma_map_ops *get_dma_ops(struct device *dev)
+static inline struct dma_map_ops *__generic_dma_ops(struct device *dev)
 {
 	if (unlikely(!dev) || !dev->archdata.dma_ops)
 		return dma_ops;
@@ -36,6 +39,14 @@ static inline struct dma_map_ops *get_dma_ops(struct device *dev)
 		return dev->archdata.dma_ops;
 }
 
+static inline struct dma_map_ops *get_dma_ops(struct device *dev)
+{
+	if (xen_initial_domain())
+		return xen_dma_ops;
+	else
+		return __generic_dma_ops(dev);
+}
+
 #include <asm-generic/dma-mapping-common.h>
 
 static inline dma_addr_t phys_to_dma(struct device *dev, phys_addr_t paddr)

