commit 3420c1f5e6c6dd4fe51be4d98da69b3197d608df
Author: Robert Moore <Robert.Moore@intel.com>
Date:   Wed Dec 2 14:09:03 2015 -0800

    Concatenate operator: Add extensions to support all ACPI objects
    
    Emits strings for all the object types besides int/str/buf.
    This simplifies and extends the usefulness of the Printf macros.

diff --git a/source/components/executer/exmisc.c b/source/components/executer/exmisc.c
index c2e04bb22..40fbdf0c7 100644
--- a/source/components/executer/exmisc.c
+++ b/source/components/executer/exmisc.c
@@ -338,6 +338,7 @@ AcpiExDoConcatenate (
     ACPI_OPERAND_OBJECT     *LocalOperand1 = Operand1;
     ACPI_OPERAND_OBJECT     *ReturnDesc;
     char                    *NewBuf;
+    const char              *TypeString;
     ACPI_STATUS             Status;
 
 
@@ -359,9 +360,42 @@ AcpiExDoConcatenate (
         break;
 
     case ACPI_TYPE_STRING:
+        /*
+         * Per the ACPI spec, Concatenate only supports int/str/buf.
+         * However, we support all objects here as an extension.
+         * This improves the usefulness of the Printf() macro.
+         * 12/2015.
+         */
+        switch (Operand1->Common.Type)
+        {
+        case ACPI_TYPE_INTEGER:
+        case ACPI_TYPE_STRING:
+        case ACPI_TYPE_BUFFER:
 
-        Status = AcpiExConvertToString (
-            Operand1, &LocalOperand1, ACPI_IMPLICIT_CONVERT_HEX);
+            Status = AcpiExConvertToString (
+                Operand1, &LocalOperand1, ACPI_IMPLICIT_CONVERT_HEX);
+            break;
+
+        default:
+            /*
+             * Just emit a string containing the object type.
+             */
+            TypeString = AcpiUtGetTypeName (Operand1->Common.Type);
+
+            LocalOperand1 = AcpiUtCreateStringObject (
+                ((ACPI_SIZE) strlen (TypeString) + 9)); /* 9 For "[Object]" */
+            if (!LocalOperand1)
+            {
+                Status = AE_NO_MEMORY;
+                goto Cleanup;
+            }
+
+            strcpy (LocalOperand1->String.Pointer, "[");
+            strcat (LocalOperand1->String.Pointer, TypeString);
+            strcat (LocalOperand1->String.Pointer, " Object]");
+            Status = AE_OK;
+            break;
+        }
         break;
 
     case ACPI_TYPE_BUFFER:
@@ -440,8 +474,7 @@ AcpiExDoConcatenate (
         /* Concatenate the strings */
 
         strcpy (NewBuf, Operand0->String.Pointer);
-        strcpy (NewBuf + Operand0->String.Length,
-            LocalOperand1->String.Pointer);
+        strcat (NewBuf, LocalOperand1->String.Pointer);
         break;
 
     case ACPI_TYPE_BUFFER:
diff --git a/source/include/acopcode.h b/source/include/acopcode.h
index 50bac808c..920f6a0e7 100644
--- a/source/include/acopcode.h
+++ b/source/include/acopcode.h
@@ -297,7 +297,7 @@
 #define ARGI_BUFFER_OP                  ARGI_LIST1 (ARGI_INTEGER)
 #define ARGI_BYTE_OP                    ARGI_INVALID_OPCODE
 #define ARGI_BYTELIST_OP                ARGI_INVALID_OPCODE
-#define ARGI_CONCAT_OP                  ARGI_LIST3 (ARGI_COMPUTEDATA,ARGI_COMPUTEDATA,   ARGI_TARGETREF)
+#define ARGI_CONCAT_OP                  ARGI_LIST3 (ARGI_ANYTYPE,    ARGI_ANYTYPE,       ARGI_TARGETREF)
 #define ARGI_CONCAT_RES_OP              ARGI_LIST3 (ARGI_BUFFER,     ARGI_BUFFER,        ARGI_TARGETREF)
 #define ARGI_COND_REF_OF_OP             ARGI_LIST2 (ARGI_OBJECT_REF, ARGI_TARGETREF)
 #define ARGI_CONNECTFIELD_OP            ARGI_INVALID_OPCODE

