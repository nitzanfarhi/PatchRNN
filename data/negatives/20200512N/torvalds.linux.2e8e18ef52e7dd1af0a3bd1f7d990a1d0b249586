commit 2e8e18ef52e7dd1af0a3bd1f7d990a1d0b249586
Author: David S. Miller <davem@davemloft.net>
Date:   Thu Apr 8 11:32:30 2010 -0700

    tcp: Set CHECKSUM_UNNECESSARY in tcp_init_nondata_skb
    
    Back in commit 04a0551c87363f100b04d28d7a15a632b70e18e7
    ("loopback: Drop obsolete ip_summed setting") we stopped
    setting CHECKSUM_UNNECESSARY in the loopback xmit.
    
    This is because such a setting was a lie since it implies that the
    checksum field of the packet is properly filled in.
    
    Instead what happens normally is that CHECKSUM_PARTIAL is set and
    skb->csum is calculated as needed.
    
    But this was only happening for TCP data packets (via the
    skb->ip_summed assignment done in tcp_sendmsg()).  It doesn't
    happen for non-data packets like ACKs etc.
    
    Fix this by setting skb->ip_summed in the common non-data packet
    constructor.  It already is setting skb->csum to zero.
    
    But this reminds us that we still have things like ip_output.c's
    ip_dev_loopback_xmit() which sets skb->ip_summed to the value
    CHECKSUM_UNNECESSARY, which Herbert's patch teaches us is not
    valid.  So we'll have to address that at some point too.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/ipv4/tcp_output.c b/net/ipv4/tcp_output.c
index 0ae7ce7a71a6..e46849989a53 100644
--- a/net/ipv4/tcp_output.c
+++ b/net/ipv4/tcp_output.c
@@ -350,6 +350,7 @@ static inline void TCP_ECN_send(struct sock *sk, struct sk_buff *skb,
  */
 static void tcp_init_nondata_skb(struct sk_buff *skb, u32 seq, u8 flags)
 {
+	skb->ip_summed = CHECKSUM_PARTIAL;
 	skb->csum = 0;
 
 	TCP_SKB_CB(skb)->flags = flags;

