commit 6e92dee6582a537158e10309676ae3cd76f1175b
Author: itojun <itojun@openbsd.org>
Date:   Sat Jun 8 21:51:08 2002 +0000

    splnet -> splsoftnet where appropriate

diff --git a/sys/net/if.c b/sys/net/if.c
index 502904478c4..f6e221c966a 100644
--- a/sys/net/if.c
+++ b/sys/net/if.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: if.c,v 1.59 2002/06/08 12:02:09 itojun Exp $	*/
+/*	$OpenBSD: if.c,v 1.60 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$NetBSD: if.c,v 1.35 1996/05/07 05:26:04 thorpej Exp $	*/
 
 /*
@@ -933,7 +933,7 @@ ifioctl(so, cmd, data, p)
 	if (((oif_flags ^ ifp->if_flags) & IFF_UP) != 0) {
 #ifdef INET6
 		if ((ifp->if_flags & IFF_UP) != 0) {
-			int s = splsoftnet();
+			int s = splnet();
 			in6_if_up(ifp);
 			splx(s);
 		}
diff --git a/sys/netinet6/frag6.c b/sys/netinet6/frag6.c
index 6d180787d85..dad99d4b7d6 100644
--- a/sys/netinet6/frag6.c
+++ b/sys/netinet6/frag6.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: frag6.c,v 1.16 2002/05/28 03:04:38 itojun Exp $	*/
+/*	$OpenBSD: frag6.c,v 1.17 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: frag6.c,v 1.40 2002/05/27 21:40:31 itojun Exp $	*/
 
 /*
@@ -732,7 +732,7 @@ void
 frag6_slowtimo()
 {
 	struct ip6q *q6;
-	int s = splnet();
+	int s = splsoftnet();
 
 	IP6Q_LOCK();
 	q6 = ip6q.ip6q_next;
diff --git a/sys/netinet6/in6.c b/sys/netinet6/in6.c
index fc9ac96ce99..dbc992fbce5 100644
--- a/sys/netinet6/in6.c
+++ b/sys/netinet6/in6.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: in6.c,v 1.42 2002/06/08 21:22:02 itojun Exp $	*/
+/*	$OpenBSD: in6.c,v 1.43 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: in6.c,v 1.198 2001/07/18 09:12:38 itojun Exp $	*/
 
 /*
@@ -1800,7 +1800,7 @@ in6_addmulti(maddr6, ifp, errorp)
 	struct	in6_ifaddr *ia;
 	struct	in6_ifreq ifr;
 	struct	in6_multi *in6m;
-	int	s = splnet();
+	int	s = splsoftnet();
 
 	*errorp = 0;
 	/*
@@ -1876,7 +1876,7 @@ in6_delmulti(in6m)
 	struct in6_multi *in6m;
 {
 	struct	in6_ifreq ifr;
-	int	s = splnet();
+	int	s = splsoftnet();
 
 	if (--in6m->in6m_refcount == 0) {
 		/*
diff --git a/sys/netinet6/ip6_mroute.c b/sys/netinet6/ip6_mroute.c
index 89997cd6f5d..5c8362b2e8e 100644
--- a/sys/netinet6/ip6_mroute.c
+++ b/sys/netinet6/ip6_mroute.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: ip6_mroute.c,v 1.24 2002/06/07 18:18:14 itojun Exp $	*/
+/*	$OpenBSD: ip6_mroute.c,v 1.25 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: ip6_mroute.c,v 1.45 2001/03/25 08:38:51 itojun Exp $	*/
 
 /*
@@ -302,7 +302,7 @@ get_sg_cnt(req)
 	struct mf6c *rt;
 	int s;
 
-	s = splnet();
+	s = splsoftnet();
 
 	MF6CFIND(req->src.sin6_addr, req->grp.sin6_addr, rt);
 	splx(s);
@@ -431,7 +431,7 @@ ip6_mrouter_done()
 	struct rtdetq *rte;
 	int s;
 
-	s = splnet();
+	s = splsoftnet();
 
 	/*
 	 * For each phyint in use, disable promiscuous reception of all IPv6
@@ -555,7 +555,7 @@ add_m6if(mifcp)
 		if ((ifp->if_flags & IFF_MULTICAST) == 0)
 			return EOPNOTSUPP;
 
-		s = splnet();
+		s = splsoftnet();
 
 		/*
 		 * Enable promiscuous reception of all IPv6 multicasts
@@ -570,7 +570,7 @@ add_m6if(mifcp)
 			return error;
 	}
 
-	s = splnet();
+	s = splsoftnet();
 
 	mifp->m6_flags     = mifcp->mif6c_flags;
 	mifp->m6_ifp       = ifp;
@@ -618,7 +618,7 @@ del_m6if(mifip)
 	if (mifp->m6_ifp == NULL)
 		return EINVAL;
 
-	s = splnet();
+	s = splsoftnet();
 
 	if (!(mifp->m6_flags & MIFF_REGISTER)) {
 		/*
@@ -680,7 +680,7 @@ add_m6fc(mfccp)
 			    mfccp->mf6cc_parent);
 #endif
 
-		s = splnet();
+		s = splsoftnet();
 
 		rt->mf6c_parent = mfccp->mf6cc_parent;
 		rt->mf6c_ifset = mfccp->mf6cc_ifset;
@@ -691,7 +691,7 @@ add_m6fc(mfccp)
 	/*
 	 * Find the entry for which the upcall was made and update
 	 */
-	s = splnet();
+	s = splsoftnet();
 
 	hash = MF6CHASH(mfccp->mf6cc_origin.sin6_addr,
 			mfccp->mf6cc_mcastgrp.sin6_addr);
@@ -863,7 +863,7 @@ del_m6fc(mfccp)
 		    ip6_sprintf(&mcastgrp.sin6_addr));
 #endif
 
-	s = splnet();
+	s = splsoftnet();
 
 	nptr = &mf6ctable[hash];
 	while ((rt = *nptr) != NULL) {
@@ -972,7 +972,7 @@ ip6_mforward(ip6, ifp, m)
 	/*
 	 * Determine forwarding mifs from the forwarding cache table
 	 */
-	s = splnet();
+	s = splsoftnet();
 	MF6CFIND(ip6->ip6_src, ip6->ip6_dst, rt);
 
 	/* Entry exists, so forward if necessary */
@@ -1194,7 +1194,7 @@ expire_upcalls(unused)
 	int i;
 	int s;
 
-	s = splnet();
+	s = splsoftnet();
 
 	for (i = 0; i < MF6CTBLSIZ; i++) {
 		if (n6expire[i] == 0)
@@ -1422,7 +1422,7 @@ phyint_send(ip6, mifp, m)
 	struct mbuf *mb_copy;
 	struct ifnet *ifp = mifp->m6_ifp;
 	int error = 0;
-	int s = splnet();
+	int s = splsoftnet();
 	static struct route_in6 ro;
 	struct	in6_multi *in6m;
 	struct sockaddr_in6 *dst6;
diff --git a/sys/netinet6/ip6_output.c b/sys/netinet6/ip6_output.c
index 822cc034763..5d51a668bc0 100644
--- a/sys/netinet6/ip6_output.c
+++ b/sys/netinet6/ip6_output.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: ip6_output.c,v 1.66 2002/06/08 21:22:03 itojun Exp $	*/
+/*	$OpenBSD: ip6_output.c,v 1.67 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: ip6_output.c,v 1.172 2001/03/25 09:55:56 itojun Exp $	*/
 
 /*
@@ -205,10 +205,10 @@ ip6_output(m0, opt, ro, flags, im6o, ifpp)
 
 #ifdef IPSEC
 	/*
-	 * splnet is chosen over spltdb because we are not allowed to
-	 * lower the level, and udp6_output calls us in splnet(). XXX check
+	 * splsoftnet is chosen over spltdb because we are not allowed to
+	 * lower the level, and udp6_output calls us in splsoftnet(). XXX check
 	 */
-	s = splnet();
+	s = splsoftnet();
 
 	/*
 	 * Check if there was an outgoing SA bound to the flow
diff --git a/sys/netinet6/mld6.c b/sys/netinet6/mld6.c
index 81ba71a236b..f0c47edf91c 100644
--- a/sys/netinet6/mld6.c
+++ b/sys/netinet6/mld6.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: mld6.c,v 1.14 2002/06/08 21:22:03 itojun Exp $	*/
+/*	$OpenBSD: mld6.c,v 1.15 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: mld6.c,v 1.26 2001/02/16 14:50:35 itojun Exp $	*/
 
 /*
@@ -134,7 +134,7 @@ void
 mld6_start_listening(in6m)
 	struct in6_multi *in6m;
 {
-	int s = splnet();
+	int s = splsoftnet();
 
 	/*
 	 * RFC2710 page 10:
@@ -359,7 +359,7 @@ mld6_fasttimeo()
 	if (!mld6_timers_are_running)
 		return;
 
-	s = splnet();
+	s = splsoftnet();
 	mld6_timers_are_running = 0;
 	IN6_FIRST_MULTI(step, in6m);
 	while (in6m != NULL) {
diff --git a/sys/netinet6/nd6.c b/sys/netinet6/nd6.c
index f7500e45aed..496b3b51713 100644
--- a/sys/netinet6/nd6.c
+++ b/sys/netinet6/nd6.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: nd6.c,v 1.49 2002/06/08 21:22:41 itojun Exp $	*/
+/*	$OpenBSD: nd6.c,v 1.50 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: nd6.c,v 1.280 2002/06/08 19:52:07 itojun Exp $	*/
 
 /*
@@ -380,7 +380,7 @@ nd6_timer(ignored_arg)
 	struct in6_ifaddr *ia6, *nia6;
 	struct in6_addrlifetime *lt6;
 
-	s = splnet();
+	s = splsoftnet();
 	timeout_set(&nd6_timer_ch, nd6_timer, NULL);
 	timeout_add(&nd6_timer_ch, nd6_prune * hz);
 
@@ -810,7 +810,7 @@ nd6_free(rt, gc)
 
 	if (!ip6_forwarding && ip6_accept_rtadv) { /* XXX: too restrictive? */
 		int s;
-		s = splnet();
+		s = splsoftnet();
 		dr = defrouter_lookup(&((struct sockaddr_in6 *)rt_key(rt))->sin6_addr,
 		    rt->rt_ifp);
 
@@ -1226,7 +1226,7 @@ nd6_ioctl(cmd, data, ifp)
 		 * obsolete API, use sysctl under net.inet6.icmp6
 		 */
 		bzero(drl, sizeof(*drl));
-		s = splnet();
+		s = splsoftnet();
 		dr = TAILQ_FIRST(&nd_defrouter);
 		while (dr && i < DRLSTSIZ) {
 			drl->defrouter[i].rtaddr = dr->rtaddr;
@@ -1262,7 +1262,7 @@ nd6_ioctl(cmd, data, ifp)
 		 * how about separating ioctls into two?
 		 */
 		bzero(oprl, sizeof(*oprl));
-		s = splnet();
+		s = splsoftnet();
 		pr = nd_prefix.lh_first;
 		while (pr && i < PRLSTSIZ) {
 			struct nd_pfxrouter *pfr;
@@ -1333,7 +1333,7 @@ nd6_ioctl(cmd, data, ifp)
 		/* flush all the prefix advertised by routers */
 		struct nd_prefix *pr, *next;
 
-		s = splnet();
+		s = splsoftnet();
 		for (pr = nd_prefix.lh_first; pr; pr = next) {
 			struct in6_ifaddr *ia, *ia_next;
 
@@ -1363,7 +1363,7 @@ nd6_ioctl(cmd, data, ifp)
 		/* flush all the default routers */
 		struct nd_defrouter *dr, *next;
 
-		s = splnet();
+		s = splsoftnet();
 		defrouter_reset();
 		for (dr = TAILQ_FIRST(&nd_defrouter); dr; dr = next) {
 			next = TAILQ_NEXT(dr, dr_entry);
@@ -1390,7 +1390,7 @@ nd6_ioctl(cmd, data, ifp)
 				*idp = htons(ifp->if_index);
 		}
 
-		s = splnet();
+		s = splsoftnet();
 		if ((rt = nd6_lookup(&nb_addr, 0, ifp)) == NULL ||
 		    (ln = (struct llinfo_nd6 *)rt->rt_llinfo) == NULL) {
 			error = EINVAL;
@@ -1654,7 +1654,7 @@ static void
 nd6_slowtimo(ignored_arg)
     void *ignored_arg;
 {
-	int s = splnet();
+	int s = splsoftnet();
 	struct nd_ifinfo *nd6if;
 	struct ifnet *ifp;
 
@@ -2009,7 +2009,7 @@ fill_drlist(oldp, oldlenp, ol)
 	struct nd_defrouter *dr;
 	size_t l;
 
-	s = splnet();
+	s = splsoftnet();
 
 	if (oldp) {
 		d = (struct in6_defrouter *)oldp;
@@ -2061,7 +2061,7 @@ fill_prlist(oldp, oldlenp, ol)
 	struct in6_prefix *pe = NULL;
 	size_t l;
 
-	s = splnet();
+	s = splsoftnet();
 
 	if (oldp) {
 		p = (struct in6_prefix *)oldp;
diff --git a/sys/netinet6/nd6_nbr.c b/sys/netinet6/nd6_nbr.c
index 41a63cb7846..dc15eb4a729 100644
--- a/sys/netinet6/nd6_nbr.c
+++ b/sys/netinet6/nd6_nbr.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: nd6_nbr.c,v 1.25 2002/06/08 21:29:13 itojun Exp $	*/
+/*	$OpenBSD: nd6_nbr.c,v 1.26 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: nd6_nbr.c,v 1.61 2001/02/10 16:06:14 jinmei Exp $	*/
 
 /*
@@ -774,7 +774,7 @@ nd6_na_input(m, off, icmp6len)
 			 * is only called under the network software interrupt
 			 * context.  However, we keep it just for safety.
 			 */
-			s = splnet();
+			s = splsoftnet();
 			dr = defrouter_lookup(in6, rt->rt_ifp);
 			if (dr)
 				defrtrlist_del(dr);
@@ -1173,7 +1173,7 @@ nd6_dad_timer(ifa)
 	struct in6_ifaddr *ia = (struct in6_ifaddr *)ifa;
 	struct dadq *dp;
 
-	s = splnet();		/* XXX */
+	s = splsoftnet();		/* XXX */
 
 	/* Sanity check */
 	if (ia == NULL) {
diff --git a/sys/netinet6/nd6_rtr.c b/sys/netinet6/nd6_rtr.c
index aa9ddc80a1f..62e6d3477e8 100644
--- a/sys/netinet6/nd6_rtr.c
+++ b/sys/netinet6/nd6_rtr.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: nd6_rtr.c,v 1.18 2002/06/08 21:22:41 itojun Exp $	*/
+/*	$OpenBSD: nd6_rtr.c,v 1.19 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: nd6_rtr.c,v 1.97 2001/02/07 11:09:13 itojun Exp $	*/
 
 /*
@@ -468,7 +468,7 @@ defrouter_addreq(new)
 	gate.sin6_scope_id = 0;	/* XXX */
 #endif
 
-	s = splnet();
+	s = splsoftnet();
 	error = rtrequest(RTM_ADD, (struct sockaddr *)&def,
 	    (struct sockaddr *)&gate, (struct sockaddr *)&mask,
 	    RTF_GATEWAY, &newrt);
@@ -722,7 +722,7 @@ defrouter_reset()
 void
 defrouter_select()
 {
-	int s = splnet();
+	int s = splsoftnet();
 	struct nd_defrouter *dr, *selected_dr = NULL, *installed_dr = NULL;
 	struct rtentry *rt = NULL;
 	struct llinfo_nd6 *ln = NULL;
@@ -878,7 +878,7 @@ defrtrlist_update(new)
 	struct nd_defrouter *new;
 {
 	struct nd_defrouter *dr, *n;
-	int s = splnet();
+	int s = splsoftnet();
 
 	if ((dr = defrouter_lookup(&new->rtaddr, new->ifp)) != NULL) {
 		/* entry exists */
@@ -1042,7 +1042,7 @@ nd6_prelist_add(pr, dr, newp)
 		new->ndpr_prefix.sin6_addr.s6_addr32[i] &=
 		    new->ndpr_mask.s6_addr32[i];
 
-	s = splnet();
+	s = splsoftnet();
 	/* link ndpr_entry to nd_prefix list */
 	LIST_INSERT_HEAD(&nd_prefix, new, ndpr_entry);
 	splx(s);
@@ -1096,7 +1096,7 @@ prelist_remove(pr)
 	if (pr->ndpr_refcnt > 0)
 		return;		/* notice here? */
 
-	s = splnet();
+	s = splsoftnet();
 
 	/* unlink ndpr_entry from nd_prefix list */
 	LIST_REMOVE(pr, ndpr_entry);
@@ -1124,7 +1124,7 @@ prelist_update(new, dr, m)
 	struct ifaddr *ifa;
 	struct ifnet *ifp = new->ndpr_ifp;
 	struct nd_prefix *pr;
-	int s = splnet();
+	int s = splsoftnet();
 	int error = 0;
 	int newprefix = 0;
 	int auth;
@@ -1936,7 +1936,7 @@ rt6_flush(gateway, ifp)
     struct ifnet *ifp;
 {
 	struct radix_node_head *rnh = rt_tables[AF_INET6];
-	int s = splnet();
+	int s = splsoftnet();
 
 	/* We'll care only link-local addresses */
 	if (!IN6_IS_ADDR_LINKLOCAL(gateway)) {
diff --git a/sys/netinet6/raw_ip6.c b/sys/netinet6/raw_ip6.c
index e6771276cdc..164f196ad77 100644
--- a/sys/netinet6/raw_ip6.c
+++ b/sys/netinet6/raw_ip6.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: raw_ip6.c,v 1.12 2002/06/07 22:08:41 itojun Exp $	*/
+/*	$OpenBSD: raw_ip6.c,v 1.13 2002/06/08 21:51:08 itojun Exp $	*/
 /*	$KAME: raw_ip6.c,v 1.69 2001/03/04 15:55:44 itojun Exp $	*/
 
 /*
@@ -597,7 +597,7 @@ rip6_usrreq(so, req, m, nam, control, p)
 			error = EACCES;
 			break;
 		}
-		s = splnet();
+		s = splsoftnet();
 		if ((error = soreserve(so, rip6_sendspace, rip6_recvspace)) != 0) {
 			splx(s);
 			break;

