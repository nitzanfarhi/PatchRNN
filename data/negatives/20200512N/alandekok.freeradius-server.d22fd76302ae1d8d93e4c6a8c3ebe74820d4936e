commit d22fd76302ae1d8d93e4c6a8c3ebe74820d4936e
Author: jcarneal <jcarneal>
Date:   Tue Jan 23 21:53:27 2001 +0000

    Just a couple of tweaks...exception handling, etc.

diff --git a/src/modules/rlm_sql/rlm_sql.c b/src/modules/rlm_sql/rlm_sql.c
index 445055409..c560f0eaf 100644
--- a/src/modules/rlm_sql/rlm_sql.c
+++ b/src/modules/rlm_sql/rlm_sql.c
@@ -236,6 +236,10 @@ static int rlm_sql_authorize(void *instance, REQUEST * request) {
 		sql_getvpdata(inst, sqlsocket, inst->config->sql_groupcheck_table, &check_tmp, name, PW_VP_GROUPDATA);
 		sql_getvpdata(inst, sqlsocket, inst->config->sql_authreply_table, &reply_tmp, name, PW_VP_USERDATA);
 		sql_getvpdata(inst, sqlsocket, inst->config->sql_groupreply_table, &reply_tmp, name, PW_VP_GROUPDATA);
+	} else if(found < 0) {
+		radlog(L_ERR, "rlm_sql:  SQL query error; rejecting user");
+		return -1;
+
 	} else {
 
 		int     gcheck, greply;
@@ -304,15 +308,16 @@ rlm_sql_authenticate(void *instance, REQUEST *request)
 
 	sprintf(querystr, query, inst->config->sql_authcheck_table, escaped_user);
 	sqlsocket = sql_get_socket(inst);
-	if (sql_select_query(inst, socket, querystr) < 0) {
+	if (sql_select_query(inst, sqlsocket, querystr) < 0) {
 		radlog(L_ERR,"rlm_sql_authenticate: database query error");
-		sql_release_socket(inst, socket);
+		sql_release_socket(inst, sqlsocket);
 		return RLM_MODULE_REJECT;
 	}
 
 	row = sql_fetch_row(sqlsocket);
 	sql_finish_select_query(sqlsocket);
 	sql_release_socket(inst, sqlsocket);
+	sql_free_result(sqlsocket);
 	free(querystr);
 
 	if (row == NULL) {
diff --git a/src/modules/rlm_sql/sql.c b/src/modules/rlm_sql/sql.c
index d2408478e..a339b9c78 100644
--- a/src/modules/rlm_sql/sql.c
+++ b/src/modules/rlm_sql/sql.c
@@ -601,7 +601,11 @@ int sql_getvpdata(SQL_INST *inst, SQLSOCK *sqlsocket, char *table, VALUE_PAIR **
 						table, table, inst->config->sql_realmgroup_table,
 						inst->config->sql_realmgroup_table, username,
 						inst->config->sql_realmgroup_table, table, table);
-	sql_select_query(inst, sqlsocket, querystr);
+	if (sql_select_query(inst, sqlsocket, querystr) < 0) {
+		radlog(L_ERR,"get_vpdata: database query error");
+		return -1;
+	}
+
 
 	while ((row = sql_fetch_row(sqlsocket))) {
 		if (sql_userparse(vp, row, mode) != 0) {
@@ -612,6 +616,7 @@ int sql_getvpdata(SQL_INST *inst, SQLSOCK *sqlsocket, char *table, VALUE_PAIR **
 		rows++;
 	}
 	sql_finish_select_query(sqlsocket);
+	sql_free_result(sqlsocket);
 
 	return rows;
 
@@ -735,10 +740,15 @@ int sql_check_multi(SQL_INST *inst, SQLSOCK *sqlsocket, char *name, VALUE_PAIR *
 		sprintf(authstr, "UserName = '%s'", name);
 	sprintf(querystr, "SELECT COUNT(*) FROM %s WHERE %s AND AcctStopTime = 0",
 					inst->config->sql_acct_table, authstr);
-	sql_select_query(inst, sqlsocket, querystr);
+	if (sql_select_query(inst, sqlsocket, querystr) < 0) {
+		radlog(L_ERR,"sql_check_multi: database query error");
+		return -1;
+	}
+
 	row = sql_fetch_row(sqlsocket);
 	count = atoi(row[0]);
 	sql_finish_select_query(sqlsocket);
+	sql_free_result(sqlsocket);
 
 	if (count < maxsimul)
 		return 0;
@@ -752,7 +762,10 @@ int sql_check_multi(SQL_INST *inst, SQLSOCK *sqlsocket, char *name, VALUE_PAIR *
 	count = 0;
 	sprintf(querystr, "SELECT * FROM %s WHERE %s AND AcctStopTime = 0",
 					inst->config->sql_acct_table, authstr);
-	sql_select_query(inst, sqlsocket, querystr);
+	if (sql_select_query(inst, sqlsocket, querystr) < 0) {
+		radlog(L_ERR,"sql_check_multi: database query error");
+		return -1;
+	}
 	while ((row = sql_fetch_row(sqlsocket))) {
 		int     check = sql_check_ts(row);
 
@@ -784,6 +797,7 @@ int sql_check_multi(SQL_INST *inst, SQLSOCK *sqlsocket, char *name, VALUE_PAIR *
 		}
 	}
 	sql_finish_select_query(sqlsocket);
+	sql_free_result(sqlsocket);
 
 	return (count < maxsimul) ? 0 : mpp;
 

