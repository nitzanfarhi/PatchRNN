commit 96020145760692df0596dbd09698138309031699
Author: Gordon Williams <gw@pur3.co.uk>
Date:   Tue Oct 25 11:35:50 2016 +0100

    extracting general purpose bluetooth code

diff --git a/libs/bluetooth/jswrap_bluetooth.c b/libs/bluetooth/jswrap_bluetooth.c
index 3022b041..2513cc53 100644
--- a/libs/bluetooth/jswrap_bluetooth.c
+++ b/libs/bluetooth/jswrap_bluetooth.c
@@ -712,23 +712,13 @@ Connect to a BLE device by MAC address
 */
 void jswrap_nrf_bluetooth_connect(JsVar *mac) {
 #if CENTRAL_LINK_COUNT>0
-  // untested
-  // Convert mac address to something readable - pretty hacky
-  if (!jsvIsString(mac) ||
-      jsvGetStringLength(mac)!=17 ||
-      jsvGetCharInString(mac, 2)!=':' ||
-      jsvGetCharInString(mac, 5)!=':' ||
-      jsvGetCharInString(mac, 8)!=':' ||
-      jsvGetCharInString(mac, 11)!=':' ||
-      jsvGetCharInString(mac, 14)!=':') {
+  // Convert mac address to something readable
+  ble_gap_addr_t peer_addr;
+  if (!bleVarToAddr(mac, &peer_addr)) {
     jsExceptionHere(JSET_TYPEERROR, "Expecting a mac address of the form aa:bb:cc:dd:ee:ff");
     return;
   }
-  ble_gap_addr_t peer_addr;
-  peer_addr.addr_type = BLE_GAP_ADDR_TYPE_RANDOM_STATIC; // not sure why this isn't public?
-  int i;
-  for (i=0;i<6;i++)
-    peer_addr.addr[5-i] = (chtod(jsvGetCharInString(mac, i*3))<<4) | chtod(jsvGetCharInString(mac, (i*3)+1));
+
   uint32_t              err_code;
   ble_gap_scan_params_t     m_scan_param;
   m_scan_param.active       = 0;            // Active scanning set.
diff --git a/targets/nrf5x/bluetooth_utils.c b/targets/nrf5x/bluetooth_utils.c
index ebf94498..00b63f22 100644
--- a/targets/nrf5x/bluetooth_utils.c
+++ b/targets/nrf5x/bluetooth_utils.c
@@ -41,6 +41,24 @@ JsVar *bleUUIDToStr(ble_uuid_t uuid) {
   return jsvVarPrintf("%04x%04x-%04x-%04x-%04x-%04x%04x%04x", wdata[7],wdata[6],wdata[5],wdata[4],wdata[3],wdata[2],wdata[1],wdata[0]);
 }
 
+// Convert a variable of the form "aa:bb:cc:dd:ee:ff" to a mac address
+bool bleVarToAddr(JsVar *mac, ble_gap_addr_t *addr) {
+  if (!jsvIsString(mac) ||
+      jsvGetStringLength(mac)!=17 ||
+      jsvGetCharInString(mac, 2)!=':' ||
+      jsvGetCharInString(mac, 5)!=':' ||
+      jsvGetCharInString(mac, 8)!=':' ||
+      jsvGetCharInString(mac, 11)!=':' ||
+      jsvGetCharInString(mac, 14)!=':') {
+    return false;
+  }
+  addr->addr_type = BLE_GAP_ADDR_TYPE_RANDOM_STATIC; // not sure why this isn't public?
+  int i;
+  for (i=0;i<6;i++)
+    addr->addr[5-i] = (chtod(jsvGetCharInString(mac, i*3))<<4) | chtod(jsvGetCharInString(mac, (i*3)+1));
+  return true;
+}
+
 /// BLE MAC address to string
 JsVar *bleAddrToStr(ble_gap_addr_t addr) {
   return jsvVarPrintf("%02x:%02x:%02x:%02x:%02x:%02x",
diff --git a/targets/nrf5x/bluetooth_utils.h b/targets/nrf5x/bluetooth_utils.h
index 51dfbbbb..616349b6 100644
--- a/targets/nrf5x/bluetooth_utils.h
+++ b/targets/nrf5x/bluetooth_utils.h
@@ -27,6 +27,9 @@
 // BLE UUID to string
 JsVar *bleUUIDToStr(ble_uuid_t uuid);
 
+/// Convert a variable of the form "aa:bb:cc:dd:ee:ff" to a mac address
+bool bleVarToAddr(JsVar *mac, ble_gap_addr_t *addr);
+
 /// BLE MAC address to string
 JsVar *bleAddrToStr(ble_gap_addr_t addr);
 

