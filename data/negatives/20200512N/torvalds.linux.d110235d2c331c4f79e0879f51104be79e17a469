commit d110235d2c331c4f79e0879f51104be79e17a469
Author: Peter Zijlstra <a.p.zijlstra@chello.nl>
Date:   Wed Jul 20 18:42:57 2011 +0200

    sched: Avoid creating superfluous NUMA domains on non-NUMA systems
    
    When creating sched_domains, stop when we've covered the entire
    target span instead of continuing to create domains, only to
    later find they're redundant and throw them away again.
    
    This avoids single node systems from touching funny NUMA
    sched_domain creation code and reduces the risks of the new
    SD_OVERLAP code.
    
    Requested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Anton Blanchard <anton@samba.org>
    Cc: mahesh@linux.vnet.ibm.com
    Cc: benh@kernel.crashing.org
    Cc: linuxppc-dev@lists.ozlabs.org
    Link: http://lkml.kernel.org/r/1311180177.29152.57.camel@twins
    Signed-off-by: Ingo Molnar <mingo@elte.hu>

diff --git a/kernel/sched.c b/kernel/sched.c
index 921adf6f6fad..14168c49a154 100644
--- a/kernel/sched.c
+++ b/kernel/sched.c
@@ -7436,6 +7436,8 @@ static int build_sched_domains(const struct cpumask *cpu_map,
 			sd = build_sched_domain(tl, &d, cpu_map, attr, sd, i);
 			if (tl->flags & SDTL_OVERLAP || sched_feat(FORCE_SD_OVERLAP))
 				sd->flags |= SD_OVERLAP;
+			if (cpumask_equal(cpu_map, sched_domain_span(sd)))
+				break;
 		}
 
 		while (sd->child)

