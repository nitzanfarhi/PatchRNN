commit 68fd2fd927e1d14c97f4faf4a5fe094abdb59380
Author: dwight <dwight@dmmb.local>
Date:   Sun May 23 16:05:08 2010 -0400

    fix packing for gcc

diff --git a/client/syncclusterconnection.cpp b/client/syncclusterconnection.cpp
index e8e223a57f..ba97c7ef84 100644
--- a/client/syncclusterconnection.cpp
+++ b/client/syncclusterconnection.cpp
@@ -25,7 +25,6 @@
 namespace mongo {
 
     SyncClusterConnection::SyncClusterConnection( const list<HostAndPort> & L)  {
-        int n = 0;
         {
             stringstream s;
             int n=0;
diff --git a/db/db.cpp b/db/db.cpp
index 1343c96b30..3b33e0afa6 100644
--- a/db/db.cpp
+++ b/db/db.cpp
@@ -325,7 +325,7 @@ namespace mongo {
     extern bool checkNsFilesOnLoad;
 
     void repairDatabases() {
-        LastError * le = lastError.get( true );
+		//        LastError * le = lastError.get( true );
         Client::GodScope gs;
         log(1) << "enter repairDatabases" << endl;
         
diff --git a/db/namespace.cpp b/db/namespace.cpp
index 09607c5da4..a002d5c8be 100644
--- a/db/namespace.cpp
+++ b/db/namespace.cpp
@@ -148,7 +148,7 @@ namespace mongo {
     }
 
     void NamespaceDetails::addDeletedRec(DeletedRecord *d, DiskLoc dloc) {
-        BOOST_STATIC_ASSERT( sizeof(NamespaceDetails::Extra) <= sizeof(NamespaceDetails) );
+		BOOST_STATIC_ASSERT( sizeof(NamespaceDetails::Extra) <= sizeof(NamespaceDetails) );
         {
             // defensive code: try to make us notice if we reference a deleted record
             (unsigned&) (((Record *) d)->data) = 0xeeeeeeee;
diff --git a/db/namespace.h b/db/namespace.h
index 664ec2d166..3481853e6c 100644
--- a/db/namespace.h
+++ b/db/namespace.h
@@ -179,24 +179,28 @@ namespace mongo {
                NIndexesBase  = 10
         };
     public:
-        struct ExtraOld {
+        struct ExtraOld {
             // note we could use this field for more chaining later, so don't waste it:
-            unsigned long long reserved1;
-            IndexDetails details[NIndexesExtra];
-            unsigned reserved2;
-            unsigned reserved3;
+            unsigned long long reserved1;
+            IndexDetails details[NIndexesExtra];
+            unsigned reserved2;
+            unsigned reserved3;
         };
         class Extra { 
-            long _next;
-            unsigned long reserved4; 
-            Extra(const Extra&) { assert(false); }
-            Extra& operator=(const Extra& r) { assert(false); return *this; }
+            long long _next;
+		public:
+            IndexDetails details[NIndexesExtra];
+		private:
+            unsigned reserved2;
+            unsigned reserved3;
+
+			Extra(const Extra&) { assert(false); }
+			Extra& operator=(const Extra& r) { assert(false); return *this; }
         public:
             Extra() { }
             long ofsFrom(NamespaceDetails *d) { 
                 return ((char *) this) - ((char *) d);
             }
-            IndexDetails details[NIndexesExtra];
             void init() { 
                 memset(this, 0, sizeof(Extra));
             }
@@ -209,10 +213,8 @@ namespace mongo {
                 memcpy(this, &e, sizeof(Extra));
                 _next = 0;
             }
-        private:
-            unsigned reserved2;
-            unsigned reserved3;
         };
+
         Extra* extra() { 
             if( extraOffset == 0 ) return 0;
             return (Extra *) (((char *) this) + extraOffset);
@@ -228,6 +230,8 @@ namespace mongo {
 
         BOOST_STATIC_ASSERT( NIndexesMax <= NIndexesBase + NIndexesExtra*2 );
         BOOST_STATIC_ASSERT( NIndexesMax <= 64 ); // multiKey bits
+		BOOST_STATIC_ASSERT( sizeof(NamespaceDetails::ExtraOld) == 496 );
+		BOOST_STATIC_ASSERT( sizeof(NamespaceDetails::Extra) == 496 );
 
         /* called when loaded from disk */
         void onLoad(const Namespace& k);
@@ -502,6 +506,8 @@ namespace mongo {
        todo: cleanup code, need abstractions and separation
     */
     class NamespaceDetailsTransient : boost::noncopyable {
+		BOOST_STATIC_ASSERT( sizeof(NamespaceDetails) == 496 );
+
         /* general ------------------------------------------------------------- */
     private:
         string _ns;

