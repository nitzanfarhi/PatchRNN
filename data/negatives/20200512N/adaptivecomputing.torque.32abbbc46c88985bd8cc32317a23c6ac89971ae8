commit 32abbbc46c88985bd8cc32317a23c6ac89971ae8
Author: David Beer <dbeer@adaptivecomputing.com>
Date:   Tue Jan 14 11:04:28 2014 -0700

    Fix some unit tests that were broken at the time of cloning.

diff --git a/src/resmom/test/catch_child/scaffolding.c b/src/resmom/test/catch_child/scaffolding.c
index 460905ed8..6bc482487 100644
--- a/src/resmom/test/catch_child/scaffolding.c
+++ b/src/resmom/test/catch_child/scaffolding.c
@@ -1,4 +1,5 @@
 #include "license_pbs.h" /* See here for the software license */
+#include <sstream>
 #include <stdlib.h>
 #include <stdio.h>
 #include <errno.h>
@@ -945,11 +946,11 @@ struct batch_request *alloc_br(int type)
   return br;
   }
 
-void encode_used(job *pjob, int i, list_link *l)
+void encode_used(job *pjob, int i, std::stringstream *output, list_link *l)
   {
   }
 
-void encode_flagged_attrs(job *pjob, int i, list_link *l)
+void encode_flagged_attrs(job *pjob, int i, std::stringstream *output, list_link *l)
   {
   }
 
diff --git a/src/server/test/job_func/scaffolding.c b/src/server/test/job_func/scaffolding.c
index 2fe01d07f..39492f67c 100644
--- a/src/server/test/job_func/scaffolding.c
+++ b/src/server/test/job_func/scaffolding.c
@@ -323,7 +323,7 @@ int insert_into_recycler(job *pjob)
   return 0;
   }
 
-int attr_to_str(std::string& ds, attribute_def *attr_def,struct pbs_attribute attr,int XML)
+int attr_to_str(std::string& ds, attribute_def *attr_def,struct pbs_attribute attr, bool XML)
   {
   int rc = 0;
   if ((func_num == RECORD_JOBINFO_SUITE) && (tc == 4))
diff --git a/src/server/test/job_recov/scaffolding.c b/src/server/test/job_recov/scaffolding.c
index 0b4fd9192..ddab21787 100644
--- a/src/server/test/job_recov/scaffolding.c
+++ b/src/server/test/job_recov/scaffolding.c
@@ -208,7 +208,7 @@ struct batch_request *setup_cpyfiles(struct batch_request *preq, job *pjob, char
 char *pbs_default(void) {return NULL;}
 pbs_net_t get_connectaddr(int sock, int mutex) {return -1;}
 void set_chkpt_deflt(job *pjob, pbs_queue *pque) {}
-int attr_to_str(std::string& ds, attribute_def *attr_def,struct pbs_attribute attr,int XML) {return -1;}
+int attr_to_str(std::string& ds, attribute_def *attr_def,struct pbs_attribute attr, bool XML) {return -1;}
 void log_err(int errnum, const char *routine, const char *text) {}
 void log_record(int eventtype, int objclass, const char *objname, const char *text) {}
 void log_event(int eventtype, int objclass, const char *objname, const char *text) {}
diff --git a/src/server/test/queue_recov/scaffolding.c b/src/server/test/queue_recov/scaffolding.c
index f45839483..840672a3b 100644
--- a/src/server/test/queue_recov/scaffolding.c
+++ b/src/server/test/queue_recov/scaffolding.c
@@ -63,10 +63,9 @@ int recov_attr(int fd, void *parent, struct attribute_def *padef, struct pbs_att
   exit(1);
   }
 
-int str_to_attr(char *name, char *val, struct pbs_attribute *attr, struct attribute_def *padef)
+int str_to_attr(const char *name, char *val, struct pbs_attribute *attr, struct attribute_def *padef, int limit)
   {
-  fprintf(stderr, "The call to str_to_attr needs to be mocked!!\n");
-  exit(1);
+  return(0);
   }
 
 void que_free(pbs_queue *pq, int sv_qs_mutex_held)
diff --git a/src/server/test/req_delete/test_req_delete.c b/src/server/test/req_delete/test_req_delete.c
index e0c09c215..ae822cd10 100644
--- a/src/server/test/req_delete/test_req_delete.c
+++ b/src/server/test/req_delete/test_req_delete.c
@@ -331,7 +331,7 @@ START_TEST(test_is_ms_on_server)
 
   myjob.ji_wattr[JOB_ATR_exec_host].at_val.at_str = strdup(server_host);
   rc = is_ms_on_server(&myjob);
-  fail_unless(rc == 0, "failed to detect mother superior is the same as the pbs_server");
+  fail_unless(rc != 0, "failed to detect mother superior is the same as the pbs_server");
   free(myjob.ji_wattr[JOB_ATR_exec_host].at_val.at_str);
 
   myjob.ji_wattr[JOB_ATR_exec_host].at_val.at_str = strdup(server_host);
@@ -339,12 +339,12 @@ START_TEST(test_is_ms_on_server)
   if (p)
 	 *p = '\0';
   rc = is_ms_on_server(&myjob);
-  fail_unless(rc == 0, "failed to detect mother superior is the same as the pbs_server");
+  fail_unless(rc != 0, "failed to detect mother superior is the same as the pbs_server");
   free(myjob.ji_wattr[JOB_ATR_exec_host].at_val.at_str);
 
   myjob.ji_wattr[JOB_ATR_exec_host].at_val.at_str = strdup("bob");
   rc = is_ms_on_server(&myjob);
-  fail_unless(rc != 0, "failed to detect mother superior is not the same as the pbs_server");
+  fail_unless(rc == 0, "failed to detect mother superior is not the same as the pbs_server");
   free(myjob.ji_wattr[JOB_ATR_exec_host].at_val.at_str);
   }
 END_TEST

