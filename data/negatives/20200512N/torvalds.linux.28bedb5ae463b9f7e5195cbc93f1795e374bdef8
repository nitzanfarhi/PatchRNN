commit 28bedb5ae463b9f7e5195cbc93f1795e374bdef8
Author: Pan Bian <bianpan2016@163.com>
Date:   Tue Jan 3 18:28:45 2017 +0200

    usb: return error code when platform_get_irq fails
    
    In function xhci_mtk_probe(), variable ret takes the return value. Its
    value should be negative on failures. However, when the call to function
    platform_get_irq() fails, it does not set the error code, and 0 will be
    returned. 0 indicates no error. As a result, the callers of function
    xhci_mtk_probe() will not be able to detect the error. This patch fixes
    the bug by assigning the return value of platform_get_irq() to variable
    ret if it fails.
    
    CC: <stable@vger.kernel.org>
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/host/xhci-mtk.c b/drivers/usb/host/xhci-mtk.c
index 1094ebd2838f..bac961cd24ad 100644
--- a/drivers/usb/host/xhci-mtk.c
+++ b/drivers/usb/host/xhci-mtk.c
@@ -579,8 +579,10 @@ static int xhci_mtk_probe(struct platform_device *pdev)
 		goto disable_ldos;
 
 	irq = platform_get_irq(pdev, 0);
-	if (irq < 0)
+	if (irq < 0) {
+		ret = irq;
 		goto disable_clk;
+	}
 
 	/* Initialize dma_mask and coherent_dma_mask to 32-bits */
 	ret = dma_set_coherent_mask(dev, DMA_BIT_MASK(32));

