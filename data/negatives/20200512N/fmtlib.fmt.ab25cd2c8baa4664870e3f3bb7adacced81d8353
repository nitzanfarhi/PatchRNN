commit ab25cd2c8baa4664870e3f3bb7adacced81d8353
Author: vitaut <victor.zverovich@gmail.com>
Date:   Wed Oct 21 08:30:10 2015 -0700

    Suppress a bogus coverity warning

diff --git a/format.cc b/format.cc
index 1510339..07a2226 100644
--- a/format.cc
+++ b/format.cc
@@ -140,7 +140,7 @@ template <>
 struct IntChecker<true> {
   template <typename T>
   static bool fits_in_int(T value) {
-    return value >= INT_MIN && value <= INT_MAX;
+    return internal::check(value >= INT_MIN) && value <= INT_MAX;
   }
 };
 
diff --git a/test/format-impl-test.cc b/test/format-impl-test.cc
index ec09e6e..dbf1f58 100644
--- a/test/format-impl-test.cc
+++ b/test/format-impl-test.cc
@@ -61,10 +61,10 @@ TEST(FormatTest, StrError) {
   EXPECT_ASSERT(fmt::safe_strerror(EDOM, message = 0, 0), "invalid buffer");
   EXPECT_ASSERT(fmt::safe_strerror(EDOM, message = buffer, 0), "invalid buffer");
   buffer[0] = 'x';
-#ifdef _GNU_SOURCE
+#if defined(_GNU_SOURCE) && !defined(__COVERITY__)
   // Use invalid error code to make sure that safe_strerror returns an error
   // message in the buffer rather than a pointer to a static string.
-  volatile int error_code = -1;
+  int error_code = -1;
 #else
   int error_code = EDOM;
 #endif
diff --git a/test/posix-test.cc b/test/posix-test.cc
index d38c952..7dd0dbb 100644
--- a/test/posix-test.cc
+++ b/test/posix-test.cc
@@ -326,11 +326,13 @@ TEST(FileTest, Dup) {
   EXPECT_EQ(FILE_CONTENT, read(copy, std::strlen(FILE_CONTENT)));
 }
 
+#ifndef __COVERITY__
 TEST(FileTest, DupError) {
-  volatile int value = -1;
+  int value = -1;
   EXPECT_SYSTEM_ERROR_NOASSERT(File::dup(value),
       EBADF, "cannot duplicate file descriptor -1");
 }
+#endif
 
 TEST(FileTest, Dup2) {
   File f = open_file();

