commit 7472e13374cc638dfd4871441f87a54508f15d19
Author: Jordan DeLong <jdelong@fb.com>
Date:   Sun Mar 1 11:28:17 2015 -0800

    Return the elapsed time from jit::Timer::stop
    
    Summary: Useful if you want to do something like AssertDetailImpl::log() if
    it's above some number.
    
    Reviewed By: @swtaarrs
    
    Differential Revision: D1880667

diff --git a/hphp/runtime/vm/jit/timer.cpp b/hphp/runtime/vm/jit/timer.cpp
index 8db77d8f5f..637544bdc5 100644
--- a/hphp/runtime/vm/jit/timer.cpp
+++ b/hphp/runtime/vm/jit/timer.cpp
@@ -77,8 +77,8 @@ Timer::~Timer() {
   stop();
 }
 
-void Timer::stop() {
-  if (!RuntimeOption::EvalJitTimer) return;
+int64_t Timer::stop() {
+  if (!RuntimeOption::EvalJitTimer) return 0;
 
   assert(!m_finished);
   auto const finish = getCPUTimeNanos();
@@ -89,6 +89,7 @@ void Timer::stop() {
   ++counter.count;
   counter.max = std::max(counter.max, elapsed);
   m_finished = true;
+  return elapsed;
 }
 
 Timer::CounterVec Timer::Counters() {
diff --git a/hphp/runtime/vm/jit/timer.h b/hphp/runtime/vm/jit/timer.h
index 62d899cecc..0fdfb323ed 100644
--- a/hphp/runtime/vm/jit/timer.h
+++ b/hphp/runtime/vm/jit/timer.h
@@ -93,7 +93,10 @@ struct Timer {
   explicit Timer(Name name);
   ~Timer();
 
-  void stop();
+  /*
+   * Stop the timer, and return the elapsed time in nanoseconds.
+   */
+  int64_t stop();
 
   typedef std::vector<std::pair<const char*, Counter>> CounterVec;
   static CounterVec Counters();

