commit 0bed896bccc83ffc46e9bb521bee095ae99211b5
Author: Shawn Webb <swebb@sourcefire.com>
Date:   Tue Jul 1 10:50:08 2014 -0400

    Check to make sure we should be adding properties

diff --git a/libclamav/pdf.c b/libclamav/pdf.c
index 5d7418b74..ac81d37d7 100644
--- a/libclamav/pdf.c
+++ b/libclamav/pdf.c
@@ -2947,6 +2947,9 @@ static void JBIG2Decode_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct p
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->ctx->wrkproperty))
         return;
 
@@ -3012,6 +3015,9 @@ static void JavaScript_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pd
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->ctx->wrkproperty))
         return;
 
@@ -3059,6 +3065,9 @@ static void Author_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfnam
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.author))
         pdf->stats.author = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/Author", NULL);
 #endif
@@ -3070,6 +3079,9 @@ static void Creator_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfna
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.creator))
         pdf->stats.creator = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/Creator", NULL);
 #endif
@@ -3081,6 +3093,9 @@ static void ModificationDate_cb(struct pdf_struct *pdf, struct pdf_obj *obj, str
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.modificationdate))
         pdf->stats.modificationdate = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/ModDate", NULL);
 #endif
@@ -3092,6 +3107,9 @@ static void CreationDate_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.creationdate))
         pdf->stats.creationdate = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/CreationDate", NULL);
 #endif
@@ -3103,6 +3121,9 @@ static void Producer_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfn
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.producer))
         pdf->stats.producer = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/Producer", NULL);
 #endif
@@ -3114,6 +3135,9 @@ static void Title_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfname
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.title))
         pdf->stats.title = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/Title", NULL);
 #endif
@@ -3125,6 +3149,9 @@ static void Keywords_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfn
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.keywords))
         pdf->stats.keywords = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/Keywords", NULL);
 #endif
@@ -3136,6 +3163,9 @@ static void Subject_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfna
     if (!(pdf))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     if (!(pdf->stats.subject))
         pdf->stats.subject = pdf_parse_string(pdf, obj, obj->start + pdf->map, obj_size(pdf, obj, 1), "/Subject", NULL);
 #endif
@@ -3180,6 +3210,9 @@ static void Pages_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfname
     if (!(pdf) || !(pdf->ctx->wrkproperty))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     pdfobj = cli_jsonobj(pdf->ctx->wrkproperty, "PDFStats");
     if (!(pdfobj))
         return;
@@ -3235,6 +3268,9 @@ static void Colors_cb(struct pdf_struct *pdf, struct pdf_obj *obj, struct pdfnam
     if (!(pdf) || !(pdf->ctx) || !(pdf->ctx->wrkproperty))
         return;
 
+    if (!(pdf->ctx->options & CL_SCAN_FILE_PROPERTIES))
+        return;
+
     start = obj->start + pdf->map;
 
     p1 = cli_memstr(start, objsz, "/Colors", 7);

