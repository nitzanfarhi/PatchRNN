commit 4a4a7e138c92901e04db46a6b05cc6948023e5f5
Author: Martin Storsjö <martin@martin.st>
Date:   Wed Jan 23 23:25:09 2013 +0200

    rtpenc_chain: Use the original AVFormatContext for getting payload type
    
    In ff_rtp_get_payload_type, the AVFormatContext is used for checking
    whether the payload_type or rtpflags options are set. In rtpenc_chain,
    the rtpctx struct is a newly initialized struct where no options have
    been set yet, so no options can be fetched from there.
    
    All muxers that internally chain rtp muxers have the "rtpflags" field
    that allows passing such options on (which is how this worked before
    8034130e06), so this works just as intended.
    
    This makes it possible to produce H263 in RFC2190 format with chained
    RTP muxers.
    
    CC: libav-stable@libav.org
    Signed-off-by: Martin Storsjö <martin@martin.st>

diff --git a/libavformat/rtpenc_chain.c b/libavformat/rtpenc_chain.c
index 3c297eb97..935dd6cd3 100644
--- a/libavformat/rtpenc_chain.c
+++ b/libavformat/rtpenc_chain.c
@@ -62,7 +62,7 @@ int ff_rtp_chain_mux_open(AVFormatContext **out, AVFormatContext *s,
     /* Get the payload type from the codec */
     if (st->id < RTP_PT_PRIVATE)
         rtpctx->streams[0]->id =
-            ff_rtp_get_payload_type(rtpctx, st->codec, idx);
+            ff_rtp_get_payload_type(s, st->codec, idx);
     else
         rtpctx->streams[0]->id = st->id;
 

