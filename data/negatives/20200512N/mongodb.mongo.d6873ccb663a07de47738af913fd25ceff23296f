commit d6873ccb663a07de47738af913fd25ceff23296f
Author: Davide Italiano <davide.italiano@10gen.com>
Date:   Tue Feb 11 15:05:52 2014 -0800

    SERVER-12554 Mimic 2.4 behaviour and lazily yield in order to
    avoid a regression whne scanning a small set of documents.

diff --git a/src/mongo/db/ops/count.cpp b/src/mongo/db/ops/count.cpp
index e4ffb97462..c513ed3d92 100644
--- a/src/mongo/db/ops/count.cpp
+++ b/src/mongo/db/ops/count.cpp
@@ -35,6 +35,7 @@
 #include "mongo/db/catalog/database.h"
 #include "mongo/db/catalog/collection.h"
 #include "mongo/db/query/get_runner.h"
+#include "mongo/util/elapsed_tracker.h"
 
 namespace mongo {
 
@@ -94,9 +95,16 @@ namespace mongo {
         uassertStatusOK(getRunnerCount(collection, query, hintObj, &rawRunner));
         auto_ptr<Runner> runner(rawRunner);
 
+        ElapsedTracker timeToStartYielding(256, 20);
+
         try {
             const ScopedRunnerRegistration safety(runner.get());
-            runner->setYieldPolicy(Runner::YIELD_AUTO);
+
+            if (timeToStartYielding.intervalHasElapsed()) {
+                // Lazily yield, avoiding a performance regression when
+                // scanning a very small number of documents.
+                runner->setYieldPolicy(Runner::YIELD_AUTO);
+            }
 
             long long count = 0;
             Runner::RunnerState state;

