commit f63e0cca9174dd8b47380f61565ab7b921d6ac2c
Author: Eric Sandeen <sandeen@redhat.com>
Date:   Thu Apr 4 20:45:08 2013 +0000

    btrfs: ignore device open failures in __btrfs_open_devices
    
    This:
    
       # mkfs.btrfs /dev/sdb{1,2} ; wipefs -a /dev/sdb1; mount /dev/sdb2 /mnt/test
    
    would lead to a blkdev open/close mismatch when the mount fails, and
    a permanently busy (opened O_EXCL) sdb2:
    
       # wipefs -a /dev/sdb2
       wipefs: error: /dev/sdb2: probing initialization failed: Device or resource busy
    
    It's because btrfs_open_devices() may open some devices, fail on
    the last one, and return that failure stored in "ret."   The mount
    then fails, but the caller then does not clean up the open devices.
    
    Chris assures me that:
    
    "btrfs_open_devices just means: go off and open every bdev you can from
    this uuid.  It should return success if we opened any of them at all."
    
    So change the logic to ignore any open failures; just skip processing
    of that device.  Later on it's decided whether we have enough devices
    to continue.
    
    Reported-by: Jan Safranek <jsafrane@redhat.com>
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>

diff --git a/fs/btrfs/volumes.c b/fs/btrfs/volumes.c
index 0d7ab7eab2a2..5aa52ee5c25e 100644
--- a/fs/btrfs/volumes.c
+++ b/fs/btrfs/volumes.c
@@ -717,9 +717,9 @@ static int __btrfs_open_devices(struct btrfs_fs_devices *fs_devices,
 		if (!device->name)
 			continue;
 
-		ret = btrfs_get_bdev_and_sb(device->name->str, flags, holder, 1,
-					    &bdev, &bh);
-		if (ret)
+		/* Just open everything we can; ignore failures here */
+		if (btrfs_get_bdev_and_sb(device->name->str, flags, holder, 1,
+					    &bdev, &bh))
 			continue;
 
 		disk_super = (struct btrfs_super_block *)bh->b_data;

