commit 046916de1161baa02e29006df38bb09d66385291
Author: Fabio Estevam <fabio.estevam@freescale.com>
Date:   Tue Jun 25 12:58:05 2013 +0300

    usb: chipidea: ci_hdrc_imx: access phy via private data
    
    commit ea1418b5f1a (usb: chipidea: i.MX: use devm_usb_get_phy_by_phandle to get
    phy) causes the USB host to miss the disconnect/connect events.
    
    In order to reproduce this problem:
    
    - Insert a USB thumb into the USB host port (connection is detected)
    - Remove it (no disconnect event will be reported)
    - Insert the USB thumb again (connection is not detected)
    
    Fix this problem by accessing the usb_phy structure using the private data
    instead of accessing a local structure.
    
    Tested on a mx28evk board.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@freescale.com>
    Acked-by: Peter Chen <peter.chen@freescale.com>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/chipidea/ci_hdrc_imx.c b/drivers/usb/chipidea/ci_hdrc_imx.c
index 37fdae5106ae..14362c00db3f 100644
--- a/drivers/usb/chipidea/ci_hdrc_imx.c
+++ b/drivers/usb/chipidea/ci_hdrc_imx.c
@@ -98,7 +98,6 @@ static int ci_hdrc_imx_probe(struct platform_device *pdev)
 	};
 	struct resource *res;
 	int ret;
-	struct usb_phy *phy;
 
 	if (of_find_property(pdev->dev.of_node, "fsl,usbmisc", NULL)
 		&& !usbmisc_ops)
@@ -130,14 +129,14 @@ static int ci_hdrc_imx_probe(struct platform_device *pdev)
 		return ret;
 	}
 
-	phy = devm_usb_get_phy_by_phandle(&pdev->dev, "fsl,usbphy", 0);
-	if (!IS_ERR(phy)) {
-		ret = usb_phy_init(phy);
+	data->phy = devm_usb_get_phy_by_phandle(&pdev->dev, "fsl,usbphy", 0);
+	if (!IS_ERR(data->phy)) {
+		ret = usb_phy_init(data->phy);
 		if (ret) {
 			dev_err(&pdev->dev, "unable to init phy: %d\n", ret);
 			goto err_clk;
 		}
-	} else if (PTR_ERR(phy) == -EPROBE_DEFER) {
+	} else if (PTR_ERR(data->phy) == -EPROBE_DEFER) {
 		ret = -EPROBE_DEFER;
 		goto err_clk;
 	}

