commit 0fc3bfe83cddbeb29462df7359cad8c1e6b9d4fa
Author: Andreas Ericsson <ae@op5.se>
Date:   Mon Jul 2 01:04:44 2012 +0000

    lib/iocache: Make iocache_use_delim() properly mark all data used
    
    It makes no sense to force callers to fiddle with adding or
    subtracting the delimiter, so we remove it from the size calculation
    and make sure we just pass the delimiter length along when marking
    data as used in the io cache.
    
    Tests are naturally fixed to reflect the new world order.
    
    Signed-off-by: Andreas Ericsson <ae@op5.se>
    
    git-svn-id: https://nagios.svn.sourceforge.net/svnroot/nagios/nagioscore/trunk@2002 5f96b256-904b-4d8d-8c98-d829582c6739

diff --git a/lib/iocache.c b/lib/iocache.c
index c80848e5..2b78f76e 100644
--- a/lib/iocache.c
+++ b/lib/iocache.c
@@ -62,6 +62,11 @@ unsigned long iocache_available(iocache *ioc)
 	if (!ioc || !ioc->ioc_buf || !ioc->ioc_bufsize || !ioc->ioc_buflen)
 		return 0;
 
+	if (ioc->ioc_buflen < ioc->ioc_offset) {
+		iocache_move_data(ioc);
+		return 0;
+	}
+
 	return ioc->ioc_buflen - ioc->ioc_offset;
 }
 
@@ -88,6 +93,12 @@ char *iocache_use_delim(iocache *ioc, const char *delim, size_t delim_len, unsig
 	if (!ioc || !ioc->ioc_buf || !ioc->ioc_bufsize || !ioc->ioc_buflen)
 		return NULL;
 
+	*size = 0;
+	if (ioc->ioc_offset >= ioc->ioc_buflen) {
+		iocache_move_data(ioc);
+		return NULL;
+	}
+
 	buf = &ioc->ioc_buf[ioc->ioc_offset];
 	remains = iocache_available(ioc);
 	while (remains >= delim_len) {
@@ -99,12 +110,11 @@ char *iocache_use_delim(iocache *ioc, const char *delim, size_t delim_len, unsig
 		if (delim_len == 1 || !memcmp(ptr, delim, delim_len)) {
 			unsigned long ioc_start;
 
-			/* ptr must point *after* the delimiter */
-			ptr += delim_len;
 			ioc_start = (unsigned long)ioc->ioc_buf + ioc->ioc_offset;
 			*size = (unsigned long)ptr - ioc_start;
 
-			return iocache_use_size(ioc, *size);
+			/* make sure we use up all of the delimiter as well */
+			return iocache_use_size(ioc, delim_len + *size);
 		}
 		jump = 1 + (unsigned long)ptr - (unsigned long)buf;
 		remains -= jump;
diff --git a/lib/test-iocache.c b/lib/test-iocache.c
index 43d0d12d..3d7b07a2 100644
--- a/lib/test-iocache.c
+++ b/lib/test-iocache.c
@@ -21,7 +21,7 @@ static int test_delimiter(const char *delim, unsigned int delim_len)
 	int i;
 	iocache *ioc;
 
-	ioc = iocache_create(65536);
+	ioc = iocache_create(512 * 1024);
 
 	for (i = 0; sc[i].str; i++) {
 		memcpy(&ioc->ioc_buf[ioc->ioc_buflen], sc[i].str, sc[i].len);
@@ -39,10 +39,10 @@ static int test_delimiter(const char *delim, unsigned int delim_len)
 			printf("Null pointer. What weird shit is this??\n");
 			exit(1);
 		}
-		if (len != sc[i].len + delim_len) {
+		if (len != sc[i].len) {
 			printf("########## len error\n");
 			error = 1;
-		} else if (memcmp(ptr, sc[i].str, len - delim_len)) {
+		} else if (memcmp(ptr, sc[i].str, len)) {
 			printf("########## memcmp() error\n");
 			error = 2;
 		}

