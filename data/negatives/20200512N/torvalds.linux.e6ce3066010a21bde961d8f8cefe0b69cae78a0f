commit e6ce3066010a21bde961d8f8cefe0b69cae78a0f
Author: Jeremy Kerr <jk@ozlabs.org>
Date:   Mon Jun 29 14:31:58 2009 +0800

    fs: allow d_instantiate to be called with negative parent dentry
    
    The new fsnotify infrastructure (starting at 90586523) causes an oops in
    spufs, where we populate a directory with files before instantiating the
    directory itself. The new changes seem to have introduced an assumption
    that a dentry's parent will be positive when instantiating.
    
    This change makes it once again possible to d_instantiate a dentry
    with a negative parent, and brings __fsnotify_d_instantiate() into
    line with inotify_d_instantiate(), which already has this NULL check.
    
    Signed-off-by: Jeremy Kerr <jk@ozlabs.org>
    Signed-off-by: Eric Paris <eparis@redhat.com>

diff --git a/include/linux/fsnotify_backend.h b/include/linux/fsnotify_backend.h
index 44848aa830dc..6c3de999fb34 100644
--- a/include/linux/fsnotify_backend.h
+++ b/include/linux/fsnotify_backend.h
@@ -280,7 +280,7 @@ static inline void __fsnotify_update_dcache_flags(struct dentry *dentry)
 	assert_spin_locked(&dentry->d_lock);
 
 	parent = dentry->d_parent;
-	if (fsnotify_inode_watches_children(parent->d_inode))
+	if (parent->d_inode && fsnotify_inode_watches_children(parent->d_inode))
 		dentry->d_flags |= DCACHE_FSNOTIFY_PARENT_WATCHED;
 	else
 		dentry->d_flags &= ~DCACHE_FSNOTIFY_PARENT_WATCHED;

