commit ba23617629a18d2f893f2748c7e46729731ec9f5
Author: iproctor <iproctor@facebook.com>
Date:   Mon Jun 7 12:00:36 2010 -0700

    Revert "Replace "$x === null" and "null === $x" with calls to is_null()."
    
    This reverts commit 22a78a4ed11c08ec815cbb4f091ac152ae84dc19.
    
    Conflicts:
    
            src/compiler/expression/binary_op_expression.cpp

diff --git a/src/compiler/expression/binary_op_expression.cpp b/src/compiler/expression/binary_op_expression.cpp
index 267b118760..8b8dea3f6a 100644
--- a/src/compiler/expression/binary_op_expression.cpp
+++ b/src/compiler/expression/binary_op_expression.cpp
@@ -345,42 +345,12 @@ ExpressionPtr BinaryOpExpression::postOptimize(AnalysisResultPtr ar) {
   return ExpressionPtr();
 }
 
-static ExpressionPtr makeIsNull(LocationPtr loc, ExpressionPtr exp) {
-  /* Replace "$x === null" with an is_null call; this requires slightly
-   * less work at runtime. */
-  ExpressionListPtr expList =
-    ExpressionListPtr(new ExpressionList(loc,
-      Expression::KindOfExpressionList));
-  expList->insertElement(exp);
-
-  SimpleFunctionCallPtr call
-    (new SimpleFunctionCall(loc, Expression::KindOfSimpleFunctionCall,
-                            "is_null", expList, ExpressionPtr()));
-
-  call->setValid();
-  call->setActualType(Type::Boolean);
-
-  return call;
-}
-
 ExpressionPtr BinaryOpExpression::foldConst(AnalysisResultPtr ar) {
   ExpressionPtr optExp;
   Variant v1;
   Variant v2;
 
-  if (!m_exp2->getScalarValue(v2)) {
-    if (m_exp1->isScalar() && m_exp1->getScalarValue(v1)) {
-      switch (m_op) {
-        case T_IS_IDENTICAL:
-          if (v1.isNull()) return makeIsNull(getLocation(), m_exp2);
-          break;
-        default:
-          break;
-      }
-    }
-
-    return ExpressionPtr();
-  }
+  if (!m_exp2->getScalarValue(v2)) return ExpressionPtr();
 
   if (m_exp1->isScalar()) {
     if (!m_exp1->getScalarValue(v1)) return ExpressionPtr();
@@ -473,9 +443,6 @@ ExpressionPtr BinaryOpExpression::foldConst(AnalysisResultPtr ar) {
       optExp = foldConstRightAssoc(ar);
       if (optExp) return optExp;
       break;
-    case T_IS_IDENTICAL:
-      if (v2.isNull()) return makeIsNull(getLocation(), m_exp1);
-      break;
     default:
       break;
     }

