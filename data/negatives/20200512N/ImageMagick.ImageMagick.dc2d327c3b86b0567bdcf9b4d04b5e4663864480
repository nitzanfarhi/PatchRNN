commit dc2d327c3b86b0567bdcf9b4d04b5e4663864480
Author: cristy <urban-warrior@git.imagemagick.org>
Date:   Tue Feb 12 14:00:44 2013 +0000

diff --git a/MagickCore/resize.c b/MagickCore/resize.c
index 6e82f68e1..9825dadf9 100644
--- a/MagickCore/resize.c
+++ b/MagickCore/resize.c
@@ -2667,7 +2667,7 @@ MagickExport Image *ResizeImage(const Image *image,const size_t columns,
       filter_type=PointFilter;
     else
       if ((image->storage_class == PseudoClass) ||
-          image->alpha_trait == BlendPixelTrait ||
+          (image->alpha_trait == BlendPixelTrait) ||
           ((x_factor*y_factor) > 1.0))
         filter_type=MitchellFilter;
   resize_filter=AcquireResizeFilter(image,filter_type,MagickFalse,exception);
@@ -3443,7 +3443,7 @@ MagickExport Image *ThumbnailImage(const Image *image,const size_t columns,
   if (thumbnail_image == (Image *) NULL)
     return(thumbnail_image);
   (void) ParseAbsoluteGeometry("0x0+0+0",&thumbnail_image->page);
-  if( IfMagickFalse(thumbnail_image->alpha_trait) )
+  if(thumbnail_image->alpha_trait != BlendPixelTrait)
     (void) SetImageAlphaChannel(thumbnail_image,OpaqueAlphaChannel,exception);
   thumbnail_image->depth=8;
   thumbnail_image->interlace=NoInterlace;
diff --git a/MagickWand/operation.c b/MagickWand/operation.c
index 0acf65190..3683984d8 100644
--- a/MagickWand/operation.c
+++ b/MagickWand/operation.c
@@ -1971,7 +1971,7 @@ static void CLISimpleOperatorImage(MagickCLI *cli_wand,
               break;
             for (x=0; x < (ssize_t) mask_image->columns; x++)
             {
-              if (IfMagickFalse(mask_image->alpha_trait))
+              if (mask_image->alpha_trait != BlendPixelTrait)
                 SetPixelAlpha(mask_image,GetPixelIntensity(mask_image,q),q);
               SetPixelRed(mask_image,GetPixelAlpha(mask_image,q),q);
               SetPixelGreen(mask_image,GetPixelAlpha(mask_image,q),q);
diff --git a/coders/png.c b/coders/png.c
index b9a0056a1..847af83c1 100644
--- a/coders/png.c
+++ b/coders/png.c
@@ -12746,7 +12746,7 @@ static MagickBooleanType WriteMNGImage(const ImageInfo *image_info,Image *image,
         (void) LogMagickEvent(CoderEvent,GetMagickModule(),
           "      Image depth: %.20g",(double) p->depth);
 
-        if (p->alpha_trait)
+        if (p->alpha_trait == BlendPixelTrait)
           (void) LogMagickEvent(CoderEvent,GetMagickModule(),
             "      Matte: True");
 
@@ -12840,11 +12840,12 @@ static MagickBooleanType WriteMNGImage(const ImageInfo *image_info,Image *image,
         if (next_image->page.x || next_image->page.y)
           need_defi=MagickTrue;
 
-        if (next_image->alpha_trait)
+        if (next_image->alpha_trait == BlendPixelTrait)
           need_matte=MagickTrue;
 
         if ((int) next_image->dispose >= BackgroundDispose)
-          if (next_image->alpha_trait || next_image->page.x || next_image->page.y ||
+          if ((next_image->alpha_trait == BlendPixelTrait) ||
+               next_image->page.x || next_image->page.y ||
               ((next_image->columns < mng_info->page.width) &&
                (next_image->rows < mng_info->page.height)))
             mng_info->need_fram=MagickTrue;
@@ -13216,8 +13217,8 @@ static MagickBooleanType WriteMNGImage(const ImageInfo *image_info,Image *image,
        Write MNG BACK chunk and global bKGD chunk, if the image is transparent
        or does not cover the entire frame.
      */
-     if (write_mng && (image->alpha_trait || image->page.x > 0 ||
-         image->page.y > 0 || (image->page.width &&
+     if (write_mng && ((image->alpha_trait == BlendPixelTrait) ||
+         image->page.x > 0 || image->page.y > 0 || (image->page.width &&
          (image->page.width+image->page.x < mng_info->page.width))
          || (image->page.height && (image->page.height+image->page.y
          < mng_info->page.height))))
diff --git a/coders/sun.c b/coders/sun.c
index 7eabb7ecf..d466d3dad 100644
--- a/coders/sun.c
+++ b/coders/sun.c
@@ -782,8 +782,10 @@ static MagickBooleanType WriteSUNImage(const ImageInfo *image_info,Image *image,
         /*
           Full color SUN raster.
         */
-        sun_info.depth=(unsigned int) image->alpha_trait ? 32U : 24U;
-        sun_info.length=(unsigned int) ((image->alpha_trait ? 4 : 3)*number_pixels);
+        sun_info.depth=(unsigned int) image->alpha_trait == BlendPixelTrait ?
+          32U : 24U;
+        sun_info.length=(unsigned int) ((image->alpha_trait == BlendPixelTrait ?
+          4 : 3)*number_pixels);
         sun_info.length+=sun_info.length & 0x01 ? (unsigned int) image->rows :
           0;
       }

