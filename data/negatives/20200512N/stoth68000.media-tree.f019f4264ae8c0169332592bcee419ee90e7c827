commit f019f4264ae8c0169332592bcee419ee90e7c827
Author: Josef Bacik <josef@redhat.com>
Date:   Fri Sep 11 16:11:20 2009 -0400

    Btrfs: fix bitmap size tracking
    
    When we first go to add free space, we allocate a new info and set the offset
    and bytes to the space we are adding.  This is fine, except we actually set the
    size of a bitmap as we set the bits in it, so if we add space to a bitmap, we'd
    end up counting the same space twice.  This isn't a huge deal, it just makes
    the allocator behave weirdly since it will think that a bitmap entry has more
    space than it ends up actually having.  I used a BUG_ON() to catch when this
    problem happened, and with this patch I no longer get the BUG_ON().
    
    Signed-off-by: Josef Bacik <jbacik@redhat.com>
    Signed-off-by: Chris Mason <chris.mason@oracle.com>

diff --git a/fs/btrfs/free-space-cache.c b/fs/btrfs/free-space-cache.c
index 5edcee3a617f..4eb296426061 100644
--- a/fs/btrfs/free-space-cache.c
+++ b/fs/btrfs/free-space-cache.c
@@ -403,6 +403,7 @@ static void add_new_bitmap(struct btrfs_block_group_cache *block_group,
 	BUG_ON(block_group->total_bitmaps >= max_bitmaps);
 
 	info->offset = offset_to_bitmap(block_group, offset);
+	info->bytes = 0;
 	link_free_space(block_group, info);
 	block_group->total_bitmaps++;
 

