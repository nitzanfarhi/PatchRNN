commit 63bab2b69688dee0ddadff7449143830e59567cd
Author: Daniel P. Berrange <berrange@redhat.com>
Date:   Thu Dec 21 10:52:37 2017 +0000

    char: don't silently skip tn3270 protocol init when TLS is enabled
    
    Even if common tn3270 implementations do not support TLS, it is trivial to
    have them proxied over a proxy like stunnel which adds TLS at the sockets
    layer. We should thus not silently skip tn3270 protocol initialization
    when TLS is enabled.
    
    Reviewed-by: Eric Blake <eblake@redhat.com>
    Acked-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Daniel P. Berrange <berrange@redhat.com>

diff --git a/chardev/char-socket.c b/chardev/char-socket.c
index a220803c01..1a371b91ac 100644
--- a/chardev/char-socket.c
+++ b/chardev/char-socket.c
@@ -663,8 +663,7 @@ static void tcp_chr_tls_handshake(QIOTask *task,
     if (qio_task_propagate_error(task, NULL)) {
         tcp_chr_disconnect(chr);
     } else {
-        /* tn3270 does not support TLS yet */
-        if (s->do_telnetopt && !s->is_tn3270) {
+        if (s->do_telnetopt) {
             tcp_chr_telnet_init(chr);
         } else {
             tcp_chr_connect(chr);

