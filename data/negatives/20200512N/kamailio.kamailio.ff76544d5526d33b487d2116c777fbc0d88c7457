commit ff76544d5526d33b487d2116c777fbc0d88c7457
Author: Andrei Pelinescu-Onciul <andrei@iptel.org>
Date:   Wed Jun 25 20:45:10 2003 +0000

    - fixed  parse_via_param: params. starting with [op] had incorect name/len
    (thanks to Gabriel)

diff --git a/parser/parse_via.c b/parser/parse_via.c
index 2ead27ed2..cd1c12b96 100644
--- a/parser/parse_via.c
+++ b/parser/parse_via.c
@@ -40,8 +40,9 @@
  *  2003-01-27  modified parse_via to set new via_param->start member and
  *               via->params.s (andrei)
  *  2003-01-28  zero-terminations replaced with VIA_ZT (jiri)
- *  2003-02-28 scratchpad compatibility abandoned (jiri)
- *  2003-04-26 ZSW (jiri)
+ *  2003-02-28  scratchpad compatibility abandoned (jiri)
+ *  2003-04-26  ZSW (jiri)
+ *  2003-06-23  fixed  parse_via_param [op].* param. parsing bug (andrei)
  */
 
 
@@ -646,6 +647,10 @@ static /*inline*/ char* parse_via_param(char* p, char* end,
 			case 'p':
 			case 'P':
 				switch(state){
+					case F_PARAM:
+						state=GEN_PARAM;
+						param->name.s=tmp;
+						break;
 					case RECEIVED1:
 						state=RPORT1;
 						break;
@@ -661,6 +666,10 @@ static /*inline*/ char* parse_via_param(char* p, char* end,
 			case 'o':
 			case 'O':
 				switch(state){
+					case F_PARAM:
+						state=GEN_PARAM;
+						param->name.s=tmp;
+						break;
 					case RPORT1:
 						state=RPORT2;
 						break;
diff --git a/tcp_conn.h b/tcp_conn.h
index 75e201971..837a817dc 100644
--- a/tcp_conn.h
+++ b/tcp_conn.h
@@ -88,12 +88,6 @@ struct tcp_connection{
 	int id; /* id (unique!) used to retrieve a specific connection when
 	           reply-ing*/
 	struct receive_info rcv; /* src & dst ip, ports, proto a.s.o*/
-#if 0
-	struct ip_addr ip; /* peer ip */
-	int port; /* peer port */
-	int sock_idx; /* receiving socket index in the tcp_info array */
-	union sockaddr_union su;
-#endif
 	struct tcp_req req; /* request data */
 	volatile int refcnt;
 	int bad; /* if set this is a "bad" connection */
diff --git a/tcp_main.c b/tcp_main.c
index eb8366340..332d233ce 100644
--- a/tcp_main.c
+++ b/tcp_main.c
@@ -118,7 +118,6 @@ struct tcp_connection* tcpconn_new(int sock, union sockaddr_union* su,
 {
 	struct tcp_connection *c;
 	
-
 	c=(struct tcp_connection*)shm_malloc(sizeof(struct tcp_connection));
 	if (c==0){
 		LOG(L_ERR, "ERROR: tcpconn_add: mem. allocation failure\n");

