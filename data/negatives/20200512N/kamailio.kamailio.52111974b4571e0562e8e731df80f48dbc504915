commit 52111974b4571e0562e8e731df80f48dbc504915
Author: Daniel-Constantin Mierla <miconda@gmail.com>
Date:   Fri Dec 22 16:54:50 2017 +0100

    tm: handle success return code by forward_request() for e2e ACK
    
    - forward_request() returns 0 on success, propagate 1 to config wrapper

diff --git a/src/modules/tm/t_funcs.c b/src/modules/tm/t_funcs.c
index 0391ea3a3..42469cb43 100644
--- a/src/modules/tm/t_funcs.c
+++ b/src/modules/tm/t_funcs.c
@@ -281,7 +281,7 @@ int t_relay_to( struct sip_msg  *p_msg , struct proxy_l *proxy, int proto,
 	/* at this point if the msg is an ACK it is an e2e ACK and
 	   e2e ACKs do not establish a transaction and are fwd-ed statelessly */
 	if ( p_msg->REQ_METHOD==METHOD_ACK) {
-		LM_DBG( "forwarding ACK  statelessly \n");
+		LM_DBG("forwarding ACK statelessly\n");
 		if (proxy==0) {
 			init_dest_info(&dst);
 			dst.proto=proto;
@@ -302,7 +302,11 @@ int t_relay_to( struct sip_msg  *p_msg , struct proxy_l *proxy, int proto,
 			proxy2su(&dst.to, proxy);
 			/* dst->send_sock not set, but forward_request will take care
 			 * of it */
-			ret=forward_request( p_msg , 0, 0, &dst) ;
+			ret=forward_request(p_msg , 0, 0, &dst) ;
+		}
+		if (ret>=0) {
+			/* convert return code for cfg script */
+			ret=1;
 		}
 		goto done;
 	}

