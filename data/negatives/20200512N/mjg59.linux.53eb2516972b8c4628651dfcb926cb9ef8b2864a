commit 53eb2516972b8c4628651dfcb926cb9ef8b2864a
Author: Rob Gardner <rob.gardner@oracle.com>
Date:   Mon Mar 2 23:16:55 2015 -0700

    sparc: semtimedop() unreachable due to comparison error
    
    A bug was reported that the semtimedop() system call was always
    failing eith ENOSYS.
    
    Since SEMCTL is defined as 3, and SEMTIMEDOP is defined as 4,
    the comparison "call <= SEMCTL" will always prevent SEMTIMEDOP
    from getting through to the semaphore ops switch statement.
    
    This is corrected by changing the comparison to "call <= SEMTIMEDOP".
    
    Orabug: 20633375
    
    Signed-off-by: Rob Gardner <rob.gardner@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/arch/sparc/kernel/sys_sparc_64.c b/arch/sparc/kernel/sys_sparc_64.c
index c85403d0496c..30e7ddb27a3a 100644
--- a/arch/sparc/kernel/sys_sparc_64.c
+++ b/arch/sparc/kernel/sys_sparc_64.c
@@ -333,7 +333,7 @@ SYSCALL_DEFINE6(sparc_ipc, unsigned int, call, int, first, unsigned long, second
 	long err;
 
 	/* No need for backward compatibility. We can start fresh... */
-	if (call <= SEMCTL) {
+	if (call <= SEMTIMEDOP) {
 		switch (call) {
 		case SEMOP:
 			err = sys_semtimedop(first, ptr,

