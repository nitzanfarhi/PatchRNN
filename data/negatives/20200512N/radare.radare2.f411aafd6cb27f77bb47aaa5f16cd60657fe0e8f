commit f411aafd6cb27f77bb47aaa5f16cd60657fe0e8f
Author: pancake <pancake@nopcode.org>
Date:   Fri Dec 2 14:41:17 2011 +0100

    * Fix negative blocksize and printidx issues in visual

diff --git a/libr/core/core.c b/libr/core/core.c
index 0dbf20a74..010c8aa2f 100644
--- a/libr/core/core.c
+++ b/libr/core/core.c
@@ -454,7 +454,7 @@ R_API int r_core_prompt_exec(RCore *r) {
 	return ret;
 }
 
-R_API int r_core_block_size(RCore *core, ut32 bsize) {
+R_API int r_core_block_size(RCore *core, int bsize) {
 	int ret = R_FALSE;
 	if (bsize == core->blocksize)
 		return R_FALSE;
diff --git a/libr/core/visual.c b/libr/core/visual.c
index ab41beb38..9349bdc1b 100644
--- a/libr/core/visual.c
+++ b/libr/core/visual.c
@@ -427,11 +427,13 @@ R_API int r_core_visual_cmd(RCore *core, int ch) {
 		//r_core_cmd(core, "s eip", 0);
 		break;
 	case 'p':
-		core->printidx = (core->printidx+1)%NPF;
+		core->printidx = R_ABS ((core->printidx+1)%NPF);
 		r_cons_clear00 ();
 		break;
 	case 'P':
-		core->printidx = (core->printidx-1)%NPF;
+		if (core->printidx)
+			core->printidx--;
+		else core->printidx = NPF-1;
 		r_cons_clear00 ();
 		break;
 	case 'm':
@@ -643,8 +645,8 @@ R_API void r_core_visual_title (RCore *core, int color) {
 				core->blocksize, core->file->filename, cursor, ocursor,
 				ocursor==-1?1:R_ABS (cursor-ocursor)+1, bar);
 	else
-		snprintf (foo, sizeof (foo), "[0x%08"PFMT64x" %d %s]> %s %s\n", core->offset, core->blocksize,
-		filename, bar, pos);
+		snprintf (foo, sizeof (foo), "[0x%08"PFMT64x" %d %s]> %s %s\n",
+			core->offset, core->blocksize, filename, bar, pos);
 	r_cons_printf (foo);
 	//r_cons_printf (" %d %d %d\n", core->printidx, core->cons->rows, core->blocksize);
 	if (color) r_cons_strcat (Color_RESET);
diff --git a/libr/include/r_core.h b/libr/include/r_core.h
index 7ebb3a488..67995384c 100644
--- a/libr/include/r_core.h
+++ b/libr/include/r_core.h
@@ -148,7 +148,7 @@ R_API void r_core_seek_previous (RCore *core, const char *type);
 R_API void r_core_seek_next (RCore *core, const char *type);
 R_API int r_core_seek_align(struct r_core_t *core, ut64 align, int count);
 R_API int r_core_block_read(struct r_core_t *core, int next);
-R_API int r_core_block_size(struct r_core_t *core, ut32 bsize);
+R_API int r_core_block_size(struct r_core_t *core, int bsize);
 R_API int r_core_read_at(struct r_core_t *core, ut64 addr, ut8 *buf, int size);
 R_API int r_core_visual(struct r_core_t *core, const char *input);
 R_API int r_core_visual_cmd(struct r_core_t *core, int ch);

