commit 1cf95d2a26dcf0cd2c24d4d9a8a256a40342e673
Author: Aleksei Kuzmin <alkuzmin@microsoft.com>
Date:   Fri Nov 3 12:01:34 2017 +0300

    Use node::NodePlatform instead of v8::platform in atom::NodeDebugger

diff --git a/atom/browser/node_debugger.cc b/atom/browser/node_debugger.cc
index be3d76bc0..7f59723d5 100644
--- a/atom/browser/node_debugger.cc
+++ b/atom/browser/node_debugger.cc
@@ -36,7 +36,10 @@ void NodeDebugger::Start() {
   if (options.inspector_enabled()) {
     // Use custom platform since the gin platform does not work correctly
     // with node's inspector agent
-    platform_.reset(v8::platform::CreateDefaultPlatform());
+    platform_.reset(new node::NodePlatform(
+        /* thread_pool_size */ 0,
+        env_->event_loop(),
+        /* tracing_controller */ nullptr));
 
     // Set process._debugWaitConnect if --inspect-brk was specified to stop
     // the debugger on the first line
diff --git a/atom/browser/node_debugger.h b/atom/browser/node_debugger.h
index b4eedbcd3..a1b8e34c9 100644
--- a/atom/browser/node_debugger.h
+++ b/atom/browser/node_debugger.h
@@ -11,10 +11,7 @@
 
 namespace node {
 class Environment;
-}
-
-namespace v8 {
-class Platform;
+class NodePlatform;
 }
 
 namespace atom {
@@ -29,7 +26,7 @@ class NodeDebugger {
 
  private:
   node::Environment* env_;
-  std::unique_ptr<v8::Platform> platform_;
+  std::unique_ptr<node::NodePlatform> platform_;
 
   DISALLOW_COPY_AND_ASSIGN(NodeDebugger);
 };
diff --git a/atom/common/node_includes.h b/atom/common/node_includes.h
index 5e9c3fdbe..76ce95a87 100644
--- a/atom/common/node_includes.h
+++ b/atom/common/node_includes.h
@@ -31,5 +31,6 @@
 #include "vendor/node/src/node_buffer.h"
 #include "vendor/node/src/node_debug_options.h"
 #include "vendor/node/src/node_internals.h"
+#include "vendor/node/src/node_platform.h"
 
 #endif  // ATOM_COMMON_NODE_INCLUDES_H_

