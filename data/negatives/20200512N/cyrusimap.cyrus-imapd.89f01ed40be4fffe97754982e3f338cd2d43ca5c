commit 89f01ed40be4fffe97754982e3f338cd2d43ca5c
Author: Bron Gondwana <brong@opera.com>
Date:   Thu Feb 7 17:34:55 2013 +1100

    strncmpsafe: more nice APIs

diff --git a/lib/util.c b/lib/util.c
index 2fd672cff..121bc422f 100644
--- a/lib/util.c
+++ b/lib/util.c
@@ -252,6 +252,13 @@ EXPORTED int strcmpsafe(const char *a, const char *b)
 	          (b == NULL ? "" : b));
 }
 
+EXPORTED int strncmpsafe(const char *a, const char *b, size_t n)
+{
+    return strncmp((a == NULL ? "" : a),
+		   (b == NULL ? "" : b),
+		   n);
+}
+
 HIDDEN int strcasecmpsafe(const char *a, const char *b)
 {
     return strcasecmp((a == NULL ? "" : a),
diff --git a/lib/util.h b/lib/util.h
index db404f75b..04f80b6ab 100644
--- a/lib/util.h
+++ b/lib/util.h
@@ -131,6 +131,8 @@ int strcmpsafe(const char *a, const char *b);
 /* Same semantics as strcasecmp() but gracefully handles
  * either or both it's arguments being NULL */
 int strcasecmpsafe(const char *a, const char *b);
+/* ditto strncmp */
+int strncmpsafe(const char *a, const char *b, size_t n);
 
 /* do a binary search in a keyvalue array
  *  nelem is the number of keyvalue elements in the kv array

