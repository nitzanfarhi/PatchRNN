commit 0a95e630b49a30c176daeff39ac2e90f1231604b
Author: Sudeep Holla <Sudeep.Holla@arm.com>
Date:   Mon Apr 27 10:51:05 2015 +0100

    cpufreq: arm_big_little: check if the frequency is set correctly
    
    The actual frequency is set through "clk_change_rate" which is void
    function. If the underlying hardware fails and returns error, the error
    is lost in the clk layer. In order to track such failures, we need to
    read back the frequency(just the cached value as clk_recalc called after
    clk->ops->set_rate gets the frequency)
    
    This patch adds check to see if the frequency is set correctly or if
    they were any hardware failures and sends the appropriate errors to the
    cpufreq core.
    
    Reviewed-by: Michael Turquette <mike.turquette@linaro.org>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

diff --git a/drivers/cpufreq/arm_big_little.c b/drivers/cpufreq/arm_big_little.c
index e1a6ba66a7f5..f65e19f340d0 100644
--- a/drivers/cpufreq/arm_big_little.c
+++ b/drivers/cpufreq/arm_big_little.c
@@ -186,6 +186,15 @@ bL_cpufreq_set_rate(u32 cpu, u32 old_cluster, u32 new_cluster, u32 rate)
 		mutex_unlock(&cluster_lock[old_cluster]);
 	}
 
+	/*
+	 * FIXME: clk_set_rate has to handle the case where clk_change_rate
+	 * can fail due to hardware or firmware issues. Until the clk core
+	 * layer is fixed, we can check here. In most of the cases we will
+	 * be reading only the cached value anyway. This needs to  be removed
+	 * once clk core is fixed.
+	 */
+	if (bL_cpufreq_get_rate(cpu) != new_rate)
+		return -EIO;
 	return 0;
 }
 

