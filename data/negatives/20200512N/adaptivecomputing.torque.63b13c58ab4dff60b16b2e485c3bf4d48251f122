commit 63b13c58ab4dff60b16b2e485c3bf4d48251f122
Author: knielson <knielson@adaptivecomputing.com>
Date:   Tue Sep 1 11:55:06 2015 -0600

    Fixed problem where the first task of a job
    would have the core and thread counts set to the
    default values in qstat -f.

diff --git a/src/lib/Libattr/req.cpp b/src/lib/Libattr/req.cpp
index 6e91ba938..7b0444087 100644
--- a/src/lib/Libattr/req.cpp
+++ b/src/lib/Libattr/req.cpp
@@ -1910,9 +1910,17 @@ int req::set_value(
   else if (!strncmp(name, "hostlist", 8))
     this->insert_hostname(value);
   else if (!strcmp(name, "core"))
-    this->cores = strtol(value, NULL, 10);
+    {
+    int core_count = strtol(value, NULL, 10);
+    if (core_count != 0)
+      this->cores = core_count;
+    }
   else if (!strcmp(name, "thread"))
-    this->threads = strtol(value, NULL, 10);
+    {
+    int thread_count = strtol(value, NULL, 10);
+    if (thread_count != 0)
+      this->threads = thread_count;
+    }
   else
     return(PBSE_BAD_PARAMETER);
 
diff --git a/src/lib/Libutils/allocation.cpp b/src/lib/Libutils/allocation.cpp
index d9ac9add4..d81bbb2f9 100644
--- a/src/lib/Libutils/allocation.cpp
+++ b/src/lib/Libutils/allocation.cpp
@@ -303,14 +303,30 @@ void allocation::initialize_from_string(
 
   if ((ptr = strstr(val, "cores\":")) != NULL)
     {
+    int new_val;
+
     val = ptr + strlen("cores\":");
-    this->cores = strtol(val, &val, 10);
+    new_val = strtol(val, &val, 10);
+
+    /* check for non-zero. Default values are 0. Don't set default
+       values because they tend to overwrite exising valid values
+       in the attr_atomic_set function */
+    if (new_val != 0)
+      this->cores = new_val;
     }
 
   if ((ptr = strstr(val, "threads\":")) != NULL)
     {
+    int new_val;
+
     val = ptr + strlen("threads\":");
-    this->threads = strtol(val, &val, 10);
+    new_val = strtol(val, &val, 10);
+
+     /* check for non-zero. Default values are 0. Don't set default
+       values because they tend to overwrite exising valid values
+       in the attr_atomic_set function */
+    if (new_val != 0)
+      this->threads = new_val;
     }
 
 
diff --git a/src/server/svr_movejob.c b/src/server/svr_movejob.c
index cd45e7b41..756947e5e 100644
--- a/src/server/svr_movejob.c
+++ b/src/server/svr_movejob.c
@@ -691,6 +691,11 @@ void encode_attributes(
 
   for (int i = 0; i < JOB_ATR_LAST; i++)
     {
+    if ((job_attr_def + i)->at_name == NULL)
+      continue; /* this check prevents a segfault found while
+                   running the unit test for encode_attributes
+                   when at_name is NULL */
+
     if (((job_attr_def + i)->at_flags & resc_access_perm) ||
         ((strncmp((job_attr_def + i)->at_name,"session_id",10) == 0) &&
          (pjob->ji_wattr[JOB_ATR_checkpoint_name].at_flags & ATR_VFLAG_SET)))

