commit 4b8b9705e47cf796e2a7707430499e578e9162e1
Author: Egon Schmid <eschmid@php.net>
Date:   Wed Nov 24 22:04:49 1999 +0000

    I'm dreaming that someone else can format this when he/she is looking at it.

diff --git a/ext/gd/gd.c b/ext/gd/gd.c
index 7d4bddd642..1441275be3 100644
--- a/ext/gd/gd.c
+++ b/ext/gd/gd.c
@@ -273,7 +273,7 @@ void php3_free_gd_font(gdFontPtr fp)
 }
 
 /* {{{ proto int imageloadfont(string filename)
-Load a new font */
+   Load a new font */
 PHP_FUNCTION(imageloadfont) {
 	pval *file;
 	int hdr_size = sizeof(gdFont) - sizeof(char *);
@@ -355,7 +355,7 @@ PHP_FUNCTION(imageloadfont) {
 /* }}} */
 
 /* {{{ proto int imagecreate(int x_size, int y_size)
-Create a new image */
+   Create a new image */
 PHP_FUNCTION(imagecreate)
 {
 	pval *x_size, *y_size;
@@ -380,7 +380,7 @@ PHP_FUNCTION(imagecreate)
 #ifdef HAVE_GD_PNG
 
 /* {{{ proto int imagecreatefrompng(string filename)
-Create a new image from file or URL */
+   Create a new image from file or URL */
 void php3_imagecreatefrompng (INTERNAL_FUNCTION_PARAMETERS) {
       pval *file;
       int ind;
@@ -414,7 +414,7 @@ void php3_imagecreatefrompng (INTERNAL_FUNCTION_PARAMETERS) {
 /* }}} */
 
 /* {{{ proto int imagepng(int im [, string filename])
-Output image to browser or file */
+   Output image to browser or file */
 void php3_imagepng (INTERNAL_FUNCTION_PARAMETERS) {
       pval *imgind, *file;
       gdImagePtr im;
@@ -485,7 +485,7 @@ void php3_imagepng (INTERNAL_FUNCTION_PARAMETERS) {
 #ifdef HAVE_GD_GIF
 
 /* {{{ proto int imagecreatefromgif(string filename)
-Create a new image from file or URL */
+   Create a new image from file or URL */
 PHP_FUNCTION(imagecreatefromgif )
 {
 	pval *file;
@@ -528,7 +528,7 @@ PHP_FUNCTION(imagecreatefromgif )
 /* }}} */
 
 /* {{{ proto int imagegif(int im [, string filename])
-Output image to browser or file */
+   Output image to browser or file */
 PHP_FUNCTION(imagegif )
 {
 	pval *imgind, *file;
@@ -610,7 +610,7 @@ PHP_FUNCTION(imagegif )
 #endif /* HAVE_GD_GIF */
 
 /* {{{ proto int imagedestroy(int im)
-Destroy an image */
+   Destroy an image */
 PHP_FUNCTION(imagedestroy)
 {
 	pval *imgind;
@@ -628,7 +628,7 @@ PHP_FUNCTION(imagedestroy)
 /* }}} */
 
 /* {{{ proto int imagecolorallocate(int im, int red, int green, int blue)
-Allocate a color for an image */
+   Allocate a color for an image */
 PHP_FUNCTION(imagecolorallocate)
 {
 	pval *imgind, *red, *green, *blue;
@@ -665,7 +665,7 @@ PHP_FUNCTION(imagecolorallocate)
 
 /* im, x, y */
 /* {{{ proto int imagecolorat(int im, int x, int y)
-Get the index of the color of a pixel */
+   Get the index of the color of a pixel */
 PHP_FUNCTION(imagecolorat)
 {
 	pval *imgind, *x, *y;
@@ -702,7 +702,7 @@ PHP_FUNCTION(imagecolorat)
 /* }}} */
 
 /* {{{ proto int imagecolorclosest(int im, int red, int green, int blue)
-Get the index of the closest color to the specified color */
+   Get the index of the closest color to the specified color */
 PHP_FUNCTION(imagecolorclosest)
 {
 	pval *imgind, *red, *green, *blue;
@@ -738,7 +738,7 @@ PHP_FUNCTION(imagecolorclosest)
 /* }}} */
 
 /* {{{ proto int imagecolordeallocate(int im, int index)
-De-allocate a color for an image */
+   De-allocate a color for an image */
 PHP_FUNCTION(imagecolordeallocate)
 {
 	pval *imgind, *index;
@@ -773,7 +773,7 @@ PHP_FUNCTION(imagecolordeallocate)
 /* }}} */
 
 /* {{{ proto int imagecolorresolve(int im, int red, int green, int blue)
-Get the index of the specified color or its closest possible alternative */
+   Get the index of the specified color or its closest possible alternative */
 PHP_FUNCTION(imagecolorresolve)
 {
 	pval *imgind, *red, *green, *blue;
@@ -809,7 +809,7 @@ PHP_FUNCTION(imagecolorresolve)
 /* }}} */
 
 /* {{{ proto int imagecolorexact(int im, int red, int green, int blue)
-Get the index of the specified color */
+   Get the index of the specified color */
 PHP_FUNCTION(imagecolorexact)
 {
 	pval *imgind, *red, *green, *blue;
@@ -845,7 +845,7 @@ PHP_FUNCTION(imagecolorexact)
 /* }}} */
 
 /* {{{ proto int imagecolorset(int im, int col, int red, int green, int blue)
-Set the color for the specified palette index */
+   Set the color for the specified palette index */
 PHP_FUNCTION(imagecolorset)
 {
 	pval *imgind, *color, *red, *green, *blue;
@@ -888,7 +888,7 @@ PHP_FUNCTION(imagecolorset)
 /* }}} */
 
 /* {{{ proto array imagecolorsforindex(int im, int col)
-Get the colors for an index */
+   Get the colors for an index */
 PHP_FUNCTION(imagecolorsforindex)
 {
 	pval *imgind, *index;
@@ -927,7 +927,7 @@ PHP_FUNCTION(imagecolorsforindex)
 /* }}} */
 
 /* {{{ proto int imagesetpixel(int im, int x, int y, int col)
-Set a single pixel */
+   Set a single pixel */
 PHP_FUNCTION(imagesetpixel)
 {
 	pval *imarg, *xarg, *yarg, *colarg;
@@ -965,7 +965,7 @@ PHP_FUNCTION(imagesetpixel)
 
 /* im, x1, y1, x2, y2, col */
 /* {{{ proto int imageline(int im, int x1, int y1, int x2, int y2, int col)
-Draw a line */
+   Draw a line */
 PHP_FUNCTION(imageline)
 {
 	pval *IM, *COL, *X1, *Y1, *X2, *Y2;
@@ -1005,7 +1005,7 @@ PHP_FUNCTION(imageline)
 /* }}} */	
 
 /* {{{ proto int imagedashedline(int im, int x1, int y1, int x2, int y2, int col)
-Draw a dashed line */
+   Draw a dashed line */
 PHP_FUNCTION(imagedashedline)
 {
 	pval *IM, *COL, *X1, *Y1, *X2, *Y2;
@@ -1045,7 +1045,7 @@ PHP_FUNCTION(imagedashedline)
 
 /* im, x1, y1, x2, y2, col */
 /* {{{ proto int imagerectangle(int im, int x1, int y1, int x2, int y2, int col)
-Draw a rectangle */
+   Draw a rectangle */
 PHP_FUNCTION(imagerectangle)
 {
 	pval *IM, *COL, *X1, *Y1, *X2, *Y2;
@@ -1086,7 +1086,7 @@ PHP_FUNCTION(imagerectangle)
 
 /* im, x1, y1, x2, y2, col */
 /* {{{ proto int imagefilledrectangle(int im, int x1, int y1, int x2, int y2, int col)
-Draw a filled rectangle */
+   Draw a filled rectangle */
 PHP_FUNCTION(imagefilledrectangle)
 {
 	pval *IM, *COL, *X1, *Y1, *X2, *Y2;
@@ -1126,7 +1126,7 @@ PHP_FUNCTION(imagefilledrectangle)
 /* }}} */	
 
 /* {{{ proto int imagearc(int im, int cx, int cy, int w, int h, int s, int e, int col)
-Draw a partial ellipse */
+   Draw a partial ellipse */
 PHP_FUNCTION(imagearc)
 {
 	pval *COL, *E, *ST, *H, *W, *CY, *CX, *IM;
@@ -1178,7 +1178,7 @@ PHP_FUNCTION(imagearc)
 
 /* im, x, y, border, col */
 /* {{{ proto int imagefilltoborder(int im, int x, int y, int border, int col)
-Flood fill to specific color */
+   Flood fill to specific color */
 PHP_FUNCTION(imagefilltoborder)
 {
 	pval *IM, *X, *Y, *BORDER, *COL;
@@ -1217,7 +1217,7 @@ PHP_FUNCTION(imagefilltoborder)
 
 /* im, x, y, col */
 /* {{{ proto int imagefill(int im, int x, int y, int col)
-Flood fill */
+   Flood fill */
 PHP_FUNCTION(imagefill)
 {
 	pval *IM, *X, *Y, *COL;
@@ -1253,7 +1253,7 @@ PHP_FUNCTION(imagefill)
 /* }}} */	
 
 /* {{{ proto int imagecolorstotal(int im)
-Find out the number of colors in an image's palette */
+   Find out the number of colors in an image's palette */
 PHP_FUNCTION(imagecolorstotal)
 {
 	pval *IM;
@@ -1278,7 +1278,7 @@ PHP_FUNCTION(imagecolorstotal)
 
 /* im, col */
 /* {{{ proto int imagecolortransparent(int im [, int col])
-Define a color as transparent */
+   Define a color as transparent */
 PHP_FUNCTION(imagecolortransparent)
 {
 	pval *IM, *COL = NULL;
@@ -1321,7 +1321,7 @@ PHP_FUNCTION(imagecolortransparent)
 
 /* im, interlace */
 /* {{{ proto int imageinterlace(int im [, int interlace])
-Enable or disable interlace */
+   Enable or disable interlace */
 PHP_FUNCTION(imageinterlace)
 {
 	pval *IM, *INT = NULL;
@@ -1450,7 +1450,7 @@ static void _php3_imagepolygon(INTERNAL_FUNCTION_PARAMETERS, int filled) {
 
 
 /* {{{ proto int imagepolygon(int im, array point, int num_points, int col)
-Draw a polygon */
+   Draw a polygon */
 PHP_FUNCTION(imagepolygon)
 {
 	_php3_imagepolygon(INTERNAL_FUNCTION_PARAM_PASSTHRU, 0);
@@ -1458,7 +1458,7 @@ PHP_FUNCTION(imagepolygon)
 /* }}} */
 
 /* {{{ proto int imagefilledpolygon(int im, array point, int num_points, int col)
-Draw a filled polygon */
+   Draw a filled polygon */
 PHP_FUNCTION(imagefilledpolygon)
 {
 	_php3_imagepolygon(INTERNAL_FUNCTION_PARAM_PASSTHRU, 1);
@@ -1523,7 +1523,7 @@ static void _php3_imagefontsize(INTERNAL_FUNCTION_PARAMETERS, int arg)
 
 
 /* {{{ proto int imagefontwidth(int font)
-Get font width */
+   Get font width */
 PHP_FUNCTION(imagefontwidth)
 {
 	_php3_imagefontsize(INTERNAL_FUNCTION_PARAM_PASSTHRU, 0);
@@ -1643,35 +1643,35 @@ static void _php3_imagechar(INTERNAL_FUNCTION_PARAMETERS, int mode) {
 }	
 
 /* {{{ proto int imagechar(int im, int font, int x, int y, string c, int col)
-Draw a character */ 
+   Draw a character */ 
 PHP_FUNCTION(imagechar) {
 	_php3_imagechar(INTERNAL_FUNCTION_PARAM_PASSTHRU, 0);
 }
 /* }}} */
 
 /* {{{ proto int imagecharup(int im, int font, int x, int y, string c, int col)
-Draw a character rotated 90 degrees counter-clockwise */
+   Draw a character rotated 90 degrees counter-clockwise */
 PHP_FUNCTION(imagecharup) {
 	_php3_imagechar(INTERNAL_FUNCTION_PARAM_PASSTHRU, 1);
 }
 /* }}} */
 
 /* {{{ proto int imagestring(int im, int font, int x, int y, string str, int col)
-Draw a string horizontally */
+   Draw a string horizontally */
 PHP_FUNCTION(imagestring) {
 	_php3_imagechar(INTERNAL_FUNCTION_PARAM_PASSTHRU, 2);
 }
 /* }}} */
 
 /* {{{ proto int imagestringup(int im, int font, int x, int y, string str, int col)
-Draw a string vertically - rotated 90 degrees counter-clockwise */
+   Draw a string vertically - rotated 90 degrees counter-clockwise */
 PHP_FUNCTION(imagestringup) {
 	_php3_imagechar(INTERNAL_FUNCTION_PARAM_PASSTHRU, 3);
 }
 /* }}} */
 
 /* {{{ proto int imagecopy(int dst_im, int src_im, int dstX, int dstY, int srcX, int srcY, int srcW, int srcH)
-Copy part of an image */ 
+   Copy part of an image */ 
 PHP_FUNCTION(imagecopy)
 {
 	pval *SIM, *DIM, *SX, *SY, *SW, *SH, *DX, *DY;
@@ -1721,7 +1721,7 @@ PHP_FUNCTION(imagecopy)
 /* }}} */
 
 /* {{{ proto int imagecopyresized(int dst_im, int src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH);
-Copy and resize part of an image */
+   Copy and resize part of an image */
 PHP_FUNCTION(imagecopyresized)
 {
 	pval *SIM, *DIM, *SX, *SY, *SW, *SH, *DX, *DY, *DW, *DH;
@@ -1776,7 +1776,7 @@ PHP_FUNCTION(imagecopyresized)
 /* }}} */	
 
 /* {{{ proto int imagesx(int im)
-Get image width */
+   Get image width */
 PHP_FUNCTION(imagesx)
 {
 	pval *IM;
@@ -1827,7 +1827,7 @@ PHP_FUNCTION(imagesy)
 #define TTFTEXT_BBOX 1
 
 /* {{{ proto array imagettfbbox(int size, int angle, string font_file, string text)
-Give the bounding box of a text using TrueType fonts */
+   Give the bounding box of a text using TrueType fonts */
 PHP_FUNCTION(imagettfbbox)
 {
 	php3_imagettftext_common(INTERNAL_FUNCTION_PARAM_PASSTHRU, TTFTEXT_BBOX);
@@ -1835,7 +1835,7 @@ PHP_FUNCTION(imagettfbbox)
 /* }}} */
 
 /* {{{ proto array imagettftext(int im, int size, int angle, int x, int y, int col, string font_file, string text)
-Write text to the image using a TrueType font */
+   Write text to the image using a TrueType font */
 PHP_FUNCTION(imagettftext)
 {
 	php3_imagettftext_common(INTERNAL_FUNCTION_PARAM_PASSTHRU, TTFTEXT_DRAW);

