commit 824e5081d9a40b4ca4ed06cbae861377e7256ae1
Author: John David Duncan <john.duncan@oracle.com>
Date:   Tue Sep 27 20:29:26 2011 -0700

    Change record layout so that CAS columns are always 8-byte aligned.

diff --git a/storage/ndb/memcache/src/Record.cc b/storage/ndb/memcache/src/Record.cc
index c034545d7e0..4c94a7aca8d 100644
--- a/storage/ndb/memcache/src/Record.cc
+++ b/storage/ndb/memcache/src/Record.cc
@@ -71,6 +71,13 @@ void Record::addColumn(short col_type, const NdbDictionary::Column *column) {
 
   /* Build the Record Specification */
   specs[index].column = column;
+  
+  /* The CAS is manipulated using Record::getPointer() and must be aligned */
+  if(col_type == COL_STORE_CAS)  {
+    int bad_offset = rec_size % 8;
+    if(bad_offset) rec_size += (8 - bad_offset);
+  }
+  
   specs[index].offset = rec_size;  /* use the current record size */
   if(column->getNullable()) {
     specs[index].nullbit_byte_offset = n_nullable / 8;
diff --git a/storage/ndb/memcache/src/ndb_pipeline.cc b/storage/ndb/memcache/src/ndb_pipeline.cc
index 63dbd4287c5..1663243f01e 100644
--- a/storage/ndb/memcache/src/ndb_pipeline.cc
+++ b/storage/ndb/memcache/src/ndb_pipeline.cc
@@ -378,6 +378,7 @@ void init_allocator(ndb_pipeline *self) {
   if(workitem_class_id > 8) 
     malloc_new_slab(& self->alligator[workitem_class_id]);   /* for workitems */
   malloc_new_slab(& self->alligator[13]);  /* The 8KB class, for row buffers */
+  malloc_new_slab(& self->alligator[14]);  /* The 16KB class for 13K rows */
 }
 
 
diff --git a/storage/ndb/memcache/src/schedulers/S_sched.cc b/storage/ndb/memcache/src/schedulers/S_sched.cc
index e6560db25c3..e5f0c13d8c2 100644
--- a/storage/ndb/memcache/src/schedulers/S_sched.cc
+++ b/storage/ndb/memcache/src/schedulers/S_sched.cc
@@ -884,9 +884,9 @@ void * S::Connection::run_ndb_poll_thread() {
         in_flight--;
         assert(in_flight >= 0);
         Ndb *db = ready_list[i];
-        db->pollNdb(0, 1);
         inst = (NdbInstance *) db->getCustomData();
         DEBUG_PRINT("Polling %d.%d", inst->wqitem->pipeline->id, inst->wqitem->id);
+        db->pollNdb(0, 1);
 
         if(inst->wqitem->base.reschedule) {
           DEBUG_PRINT("Rescheduling %d.%d", inst->wqitem->pipeline->id, inst->wqitem->id);

