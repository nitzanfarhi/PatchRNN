commit ebe22ecce11ee6e6f8e4234b9be43807c1a611a2
Author: Derek Robson <robsonde@gmail.com>
Date:   Tue May 30 18:16:38 2017 +1200

    Drivers: ccree: hash_defs.h - align block comments
    
    Fixed block comment alignment, Style fix only
    Found using checkpatch
    
    Signed-off-by: Derek Robson <robsonde@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/ccree/hash_defs.h b/drivers/staging/ccree/hash_defs.h
index 613897038f6d..3f2b2d1521c2 100644
--- a/drivers/staging/ccree/hash_defs.h
+++ b/drivers/staging/ccree/hash_defs.h
@@ -59,13 +59,14 @@ enum HashCipherDoPadding {
 
 typedef struct SepHashPrivateContext {
 	/* The current length is placed at the end of the context buffer because the hash
-	   context is used for all HMAC operations as well. HMAC context includes a 64 bytes
-	   K0 field.  The size of struct drv_ctx_hash reserved field is  88/184 bytes depend if t
-	   he SHA512 is supported ( in this case teh context size is 256 bytes).
-	   The size of struct drv_ctx_hash reseved field is 20 or 52 depend if the SHA512 is supported.
-	   This means that this structure size (without the reserved field can be up to 20 bytes ,
-	   in case sha512 is not suppported it is 20 bytes (SEP_HASH_LENGTH_WORDS define to 2 ) and in the other
-	   case it is 28 (SEP_HASH_LENGTH_WORDS define to 4) */
+	 *  context is used for all HMAC operations as well. HMAC context includes a 64 bytes
+	 *  K0 field.  The size of struct drv_ctx_hash reserved field is  88/184 bytes depend if t
+	 *  he SHA512 is supported ( in this case teh context size is 256 bytes).
+	 *  The size of struct drv_ctx_hash reseved field is 20 or 52 depend if the SHA512 is supported.
+	 *  This means that this structure size (without the reserved field can be up to 20 bytes ,
+	 *  in case sha512 is not suppported it is 20 bytes (SEP_HASH_LENGTH_WORDS define to 2 ) and in the other
+	 * case it is 28 (SEP_HASH_LENGTH_WORDS define to 4)
+	 */
 	u32 reserved[(sizeof(struct drv_ctx_hash)/sizeof(u32)) - SEP_HASH_LENGTH_WORDS - 3];
 	u32 CurrentDigestedLength[SEP_HASH_LENGTH_WORDS];
 	u32 KeyType;

