commit 1c6969ec8e6328e8d288fc585310e9e52fc9db04
Author: Jan Beulich <jbeulich@novell.com>
Date:   Tue Nov 16 14:55:33 2010 -0800

    xen/evtchn: clear secondary CPUs' cpu_evtchn_mask[] after restore
    
    To bind all event channels to CPU#0, it is not sufficient to set all
    of its cpu_evtchn_mask[] bits; all other CPUs also need to get their
    bits cleared. Otherwise, evtchn_do_upcall() will start handling
    interrupts on CPUs they're not intended to run on, which can be
    particularly bad for per-CPU ones.
    
    [ linux-2.6.18-xen.hg 7de7453dee36 ]
    
    Signed-off-by: Jan Beulich <jbeulich@novell.com>
    Signed-off-by: Jeremy Fitzhardinge <jeremy.fitzhardinge@citrix.com>

diff --git a/drivers/xen/events.c b/drivers/xen/events.c
index 321a0c8346e5..d770b8c8885b 100644
--- a/drivers/xen/events.c
+++ b/drivers/xen/events.c
@@ -286,9 +286,9 @@ static void bind_evtchn_to_cpu(unsigned int chn, unsigned int cpu)
 
 static void init_evtchn_cpu_bindings(void)
 {
+	int i;
 #ifdef CONFIG_SMP
 	struct irq_desc *desc;
-	int i;
 
 	/* By default all event channels notify CPU#0. */
 	for_each_irq_desc(i, desc) {
@@ -296,7 +296,10 @@ static void init_evtchn_cpu_bindings(void)
 	}
 #endif
 
-	memset(cpu_evtchn_mask(0), ~0, sizeof(struct cpu_evtchn_s));
+	for_each_possible_cpu(i)
+		memset(cpu_evtchn_mask(i),
+		       (i == 0) ? ~0 : 0, sizeof(struct cpu_evtchn_s));
+
 }
 
 static inline void clear_evtchn(int port)

