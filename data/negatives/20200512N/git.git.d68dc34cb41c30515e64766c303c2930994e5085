commit d68dc34cb41c30515e64766c303c2930994e5085
Author: Björn Steinbrink <B.Steinbrink@gmx.de>
Date:   Thu Aug 6 14:15:14 2009 +0200

    git-describe: Die early if there are no possible descriptions
    
    If we find no refs that may be used for git-describe with the current
    options, then die early instead of pointlessly walking the whole
    history.
    
    In git.git with all the tags dropped, this makes "git describe" go down
    from 0.244 to 0.003 seconds for me. This is especially noticeable with
    "git submodule status" which calls describe with increasing levels of
    allowed refs to be matched. For a submodule without tags, this means
    that it walks the whole history in the submodule twice (first annotated,
    then plain tags), just to find out that it can't describe the commit
    anyway.
    
    Signed-off-by: Björn Steinbrink <B.Steinbrink@gmx.de>
    Signed-off-by: Junio C Hamano <gitster@pobox.com>

diff --git a/builtin-describe.c b/builtin-describe.c
index 7a662980d..df67a733a 100644
--- a/builtin-describe.c
+++ b/builtin-describe.c
@@ -20,6 +20,7 @@ static int tags;	/* Allow lightweight tags */
 static int longformat;
 static int abbrev = DEFAULT_ABBREV;
 static int max_candidates = 10;
+static int found_names;
 static const char *pattern;
 static int always;
 
@@ -49,6 +50,7 @@ static void add_to_known_names(const char *path,
 		memcpy(e->path, path, len);
 		commit->util = e;
 	}
+	found_names = 1;
 }
 
 static int get_name(const char *path, const unsigned char *sha1, int flag, void *cb_data)
@@ -195,6 +197,9 @@ static void describe(const char *arg, int last_one)
 		for_each_ref(get_name, NULL);
 	}
 
+	if (!found_names)
+		die("cannot describe '%s'", sha1_to_hex(sha1));
+
 	n = cmit->util;
 	if (n) {
 		/*

