commit 5135d64b7f0c91c69af3147e5c93eec05f80b820
Author: Deepak S <deepak.s@intel.com>
Date:   Fri Nov 29 15:56:30 2013 +0530

    drm/i915/vlv: Update Wait for FIFO and wait for 20 free entries. v3
    
    On VLV, FIFO will be shared by both SW and HW. So, we read the
    free entries through register and update dev_priv variable
    and wait for only 20 entries to be free
    
    From Deepak's follow-up mail explaining why vlv is special:
    
    "On SB, Out of 64 FIFO Entries, 20 Entries will be used by HW and
    remaining 44 will be used by the SW,. I think due to this reason, we
    have a threshold of 20 Entries."
    
    "On VLV, HW and SW can access all 64 fifo entries, I don't think
    having a threshold of 20 Entries is mandatory on VLV. Also, since both
    SW and HW can access all 64 Entries. I think on VLV, we need to update
    the fifo_count before waiting for the FIFO."
    
    v2: Apply mask when we read the number of free FIFO entries (Ville).
    
    v3: Mask applied after reading the register (Deepak).
    
    Signed-off-by: Deepak S <deepak.s@intel.com>
    [danvet: Add further explanation from Deepak to commit message.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

diff --git a/drivers/gpu/drm/i915/intel_uncore.c b/drivers/gpu/drm/i915/intel_uncore.c
index ffb6edebd887..b737a32dd399 100644
--- a/drivers/gpu/drm/i915/intel_uncore.c
+++ b/drivers/gpu/drm/i915/intel_uncore.c
@@ -150,6 +150,13 @@ static int __gen6_gt_wait_for_fifo(struct drm_i915_private *dev_priv)
 {
 	int ret = 0;
 
+	/* On VLV, FIFO will be shared by both SW and HW.
+	 * So, we need to read the FREE_ENTRIES everytime */
+	if (IS_VALLEYVIEW(dev_priv->dev))
+		dev_priv->uncore.fifo_count =
+			__raw_i915_read32(dev_priv, GTFIFOCTL) &
+						GT_FIFO_FREE_ENTRIES_MASK;
+
 	if (dev_priv->uncore.fifo_count < GT_FIFO_NUM_RESERVED_ENTRIES) {
 		int loop = 500;
 		u32 fifo = __raw_i915_read32(dev_priv, GTFIFOCTL) & GT_FIFO_FREE_ENTRIES_MASK;

