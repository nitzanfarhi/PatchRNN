commit ab12d8a00abefaa86edba121cc20db86f26ed7d3
Author: Benjamin Romer <benjamin.romer@unisys.com>
Date:   Fri Dec 5 17:09:02 2014 -0500

    staging: unisys: refactor find_dev()
    
    Fix the function definition so that it is a single line. Fix CamelCase
    parameter names:
    
    busNo => bus_no
    devNo => dev_no
    
    Get rid of the goto and just break out of the for loop, since that does
    the exact same thing.
    
    Signed-off-by: Bryan Thompson <bryan.thompson@unisys.com>
    Signed-off-by: Benjamin Romer <benjamin.romer@unisys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/unisys/uislib/uislib.c b/drivers/staging/unisys/uislib/uislib.c
index 614919c88edd..908ec497db54 100644
--- a/drivers/staging/unisys/uislib/uislib.c
+++ b/drivers/staging/unisys/uislib/uislib.c
@@ -1187,31 +1187,29 @@ static ssize_t info_debugfs_read(struct file *file, char __user *buf,
 				       debug_buf, total_bytes);
 }
 
-static struct device_info *
-find_dev(u32 busNo, u32 devNo)
+static struct device_info *find_dev(u32 bus_no, u32 dev_no)
 {
 	struct bus_info *bus;
 	struct device_info *dev = NULL;
 
 	read_lock(&bus_list_lock);
 	for (bus = bus_list; bus; bus = bus->next) {
-		if (bus->bus_no == busNo) {
+		if (bus->bus_no == bus_no) {
 			/* make sure the device number is valid */
-			if (devNo >= bus->device_count) {
-				LOGERR("%s bad busNo, devNo=%d,%d",
+			if (dev_no >= bus->device_count) {
+				LOGERR("%s bad bus_no, dev_no=%d,%d",
 				       __func__,
-				       (int)(busNo), (int)(devNo));
-				goto Away;
+				       (int)bus_no, (int)dev_no);
+				break;
 			}
-			dev = bus->device[devNo];
+			dev = bus->device[dev_no];
 			if (!dev)
-				LOGERR("%s bad busNo, devNo=%d,%d",
+				LOGERR("%s bad bus_no, dev_no=%d,%d",
 				       __func__,
-				       (int)(busNo), (int)(devNo));
-			goto Away;
+				       (int)bus_no, (int)dev_no);
+			break;
 		}
 	}
-Away:
 	read_unlock(&bus_list_lock);
 	return dev;
 }

