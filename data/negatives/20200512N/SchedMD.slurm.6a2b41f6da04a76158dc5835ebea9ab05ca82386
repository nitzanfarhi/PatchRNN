commit 6a2b41f6da04a76158dc5835ebea9ab05ca82386
Author: Brian Christiansen <brian@schedmd.com>
Date:   Thu Jan 5 06:49:41 2017 -0700

    Make _purge_job_record() externally accessible

diff --git a/src/slurmctld/job_mgr.c b/src/slurmctld/job_mgr.c
index 2e52923265..8866bc4e03 100644
--- a/src/slurmctld/job_mgr.c
+++ b/src/slurmctld/job_mgr.c
@@ -206,7 +206,6 @@ static void _pack_pending_job_details(struct job_details *detail_ptr,
 				      Buf buffer,
 				      uint16_t protocol_version);
 static bool _parse_array_tok(char *tok, bitstr_t *array_bitmap, uint32_t max);
-static int  _purge_job_record(uint32_t job_id);
 static void _purge_missing_jobs(int node_inx, time_t now);
 static int  _read_data_array_from_file(int fd, char *file_name, char ***data,
 				       uint32_t * size,
@@ -2259,7 +2258,7 @@ unpack_error:
 	if (job_ptr) {
 		if (job_ptr->job_id == 0)
 			job_ptr->job_id = NO_VAL;
-		_purge_job_record(job_ptr->job_id);
+		purge_job_record(job_ptr->job_id);
 	}
 	for (i=0; i<pelog_env_size; i++)
 		xfree(pelog_env[i]);
@@ -4367,7 +4366,7 @@ extern int job_allocate(job_desc_msg_t * job_specs, int immediate,
 		job_ptr->job_state  = JOB_FAILED;
 		job_ptr->exit_code  = 1;
 		job_ptr->start_time = job_ptr->end_time = now;
-		_purge_job_record(job_ptr->job_id);
+		purge_job_record(job_ptr->job_id);
 		return rc;
 	}
 
@@ -4446,7 +4445,7 @@ extern int job_allocate(job_desc_msg_t * job_specs, int immediate,
 		job_ptr->job_state  = JOB_FAILED;
 		job_ptr->exit_code  = 1;
 		job_ptr->start_time = job_ptr->end_time = now;
-		_purge_job_record(job_ptr->job_id);
+		purge_job_record(job_ptr->job_id);
 	} else if (!with_slurmdbd)
 		jobacct_storage_g_job_start(acct_db_conn, job_ptr);
 
@@ -6302,7 +6301,7 @@ cleanup_fail:
 		job_ptr->state_reason = FAIL_SYSTEM;
 		xfree(job_ptr->state_desc);
 		job_ptr->start_time = job_ptr->end_time = time(NULL);
-		_purge_job_record(job_ptr->job_id);
+		purge_job_record(job_ptr->job_id);
 		*job_pptr = (struct job_record *) NULL;
 	}
 	FREE_NULL_LIST(license_list);
@@ -9691,7 +9690,7 @@ void purge_old_job(void)
 
 
 /*
- * _purge_job_record - purge specific job record. No testing is performed to
+ * purge_job_record - purge specific job record. No testing is performed to
  *	insure the job records has no active references. Use only for job
  *	records that were never fully operational (e.g. WILL_RUN test, failed
  *	job load, failed job create, etc.).
@@ -9699,7 +9698,7 @@ void purge_old_job(void)
  * RET int - count of job's purged
  * global: job_list - global job table
  */
-static int _purge_job_record(uint32_t job_id)
+extern int purge_job_record(uint32_t job_id)
 {
 	return list_delete_all(job_list, &list_find_job_id, (void *) &job_id);
 }
diff --git a/src/slurmctld/slurmctld.h b/src/slurmctld/slurmctld.h
index 9732514764..6d3a75214f 100644
--- a/src/slurmctld/slurmctld.h
+++ b/src/slurmctld/slurmctld.h
@@ -2434,4 +2434,16 @@ extern void set_partition_tres();
  */
 extern void set_job_fed_details(struct job_record *job_ptr,
 				uint64_t fed_siblings);
+
+/*
+ * purge_job_record - purge specific job record. No testing is performed to
+ *	insure the job records has no active references. Use only for job
+ *	records that were never fully operational (e.g. WILL_RUN test, failed
+ *	job load, failed job create, etc.).
+ * IN job_id - job_id of job record to be purged
+ * RET int - count of job's purged
+ * global: job_list - global job table
+ */
+extern int purge_job_record(uint32_t job_id);
+
 #endif /* !_HAVE_SLURMCTLD_H */

