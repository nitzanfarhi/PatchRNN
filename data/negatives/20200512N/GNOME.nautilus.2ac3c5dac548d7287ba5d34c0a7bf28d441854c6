commit 2ac3c5dac548d7287ba5d34c0a7bf28d441854c6
Author: Gene Z. Ragan <gzr@eazel.com>
Date:   Tue Apr 11 22:16:24 2000 +0000

    components/sample/nautilus-sample-content-view.c Added icon data to
    
    
    
    2000-04-11 Gene Z. Ragan <gzr@eazel.com>
    
            * components/sample/nautilus-sample-content-view.c
            Added icon data to BonoboUiHandler.  This is GdkPixbuf
            data and demonstrates the pixbuf data features
            added to bonobo ui handlers.
    
            * libnautilus/nautilus-bookmark.c
            bonobo_ui_handler_menu_new_item modified to take advantage
            of new bonobo ui handler pixbuf functionality. Components and
            menu items can now display pixbuf data.
            Added nautilus_bookmark_get_pixbuf() routine.
    
            * libnautilus/nautilus-bookmark.h
            Added nautilus_bookmark_get_pixbuf() routine.
    
            * src/nautilus-window-menus.c
            bonobo_ui_handler_menu_new_item modified to take advantage
            of new bonobo ui handler pixbuf functionality.

diff --git a/components/sample/nautilus-sample-content-view.c b/components/sample/nautilus-sample-content-view.c
index 6ff6bbc76..acbeefffa 100644
--- a/components/sample/nautilus-sample-content-view.c
+++ b/components/sample/nautilus-sample-content-view.c
@@ -32,6 +32,7 @@
 
 #include <bonobo/bonobo-control.h>
 #include <gtk/gtksignal.h>
+#include <gdk-pixbuf/gdk-pixbuf.h>
 #include <libgnome/gnome-i18n.h>
 #include <libgnomeui/gnome-stock.h>
 #include <libnautilus/nautilus-gtk-macros.h>
@@ -48,13 +49,12 @@ static void nautilus_sample_content_view_destroy          (GtkObject
 
 NAUTILUS_DEFINE_CLASS_BOILERPLATE (NautilusSampleContentView, nautilus_sample_content_view, GTK_TYPE_LABEL)
      
-static void sample_notify_location_change_callback (NautilusContentViewFrame  *view_frame,
-						    Nautilus_NavigationInfo   *navinfo,
-						    NautilusSampleContentView *view);
-static void sample_merge_bonobo_items_callback     (BonoboObject              *control,
-						    gboolean                   state,
-						    gpointer                   user_data);
- 
+static void sample_notify_location_change_callback        (NautilusContentViewFrame  *view_frame, 
+							   Nautilus_NavigationInfo   *navinfo, 
+							   NautilusSampleContentView *view);
+static void sample_merge_bonobo_items_callback 		  (BonoboObject 	     *control, 
+							   gboolean 		      state, 
+							   gpointer 		      user_data);
      
 static void
 nautilus_sample_content_view_initialize_class (NautilusSampleContentViewClass *klass)
@@ -210,35 +210,44 @@ static void
 sample_merge_bonobo_items_callback (BonoboObject *control, gboolean state, gpointer user_data)
 {
  	NautilusSampleContentView *view;
-        BonoboUIHandler *local_ui_handler;
-
-        g_assert (NAUTILUS_IS_SAMPLE_CONTENT_VIEW (user_data));
+	BonoboUIHandler *local_ui_handler;
+	GdkPixbuf		*pixbuf;
+	BonoboUIHandlerPixmapType pixmap_type;
+	
+	g_assert (NAUTILUS_IS_SAMPLE_CONTENT_VIEW (user_data));
 
 	view = NAUTILUS_SAMPLE_CONTENT_VIEW (user_data);
-        local_ui_handler = bonobo_control_get_ui_handler (BONOBO_CONTROL (control));
+	local_ui_handler = bonobo_control_get_ui_handler (BONOBO_CONTROL (control));
 
-        if (state) {
-        	/* Tell the Nautilus window to merge our bonobo_ui_handler items with its ones */
-                bonobo_ui_handler_set_container (local_ui_handler, 
+	if (state) {
+		/* Tell the Nautilus window to merge our bonobo_ui_handler items with its ones */
+		bonobo_ui_handler_set_container (local_ui_handler, 
                                                  bonobo_control_get_remote_ui_handler (BONOBO_CONTROL (control)));
 
-                /* 
-                 * Create our sample menu item.
-                 *
-                 * Note that it's sorta bogus that we know Nautilus has a menu whose
-                 * path is "/File", and also that we know a sensible position to use within
-                 * that menu. Nautilus should publish this information somehow.
-                 */ 
-	        bonobo_ui_handler_menu_new_item (local_ui_handler,				/* BonoboUIHandler */
+		/* Load test pixbuf */
+		pixbuf = gdk_pixbuf_new_from_file ("/gnome/share/pixmaps/nautilus/i-directory-24.png");		
+		if (pixbuf != NULL)
+			pixmap_type = BONOBO_UI_HANDLER_PIXMAP_PIXBUF_DATA;
+		else
+			pixmap_type = BONOBO_UI_HANDLER_PIXMAP_NONE;
+
+		/* 
+		* Create our sample menu item.
+		*
+		* Note that it's sorta bogus that we know Nautilus has a menu whose
+		* path is "/File", and also that we know a sensible position to use within
+		* that menu. Nautilus should publish this information somehow.
+		*/ 
+		bonobo_ui_handler_menu_new_item (local_ui_handler,				/* BonoboUIHandler */
 	        				 "/File/Sample",				/* menu item path, must start with /some-existing-menu-path and be otherwise unique */
 	                                         _("_Sample"),					/* menu item user-displayed label */
 	                                         _("This is a sample merged menu item"),	/* hint that appears in status bar */
-	                                         1,						/* position within menu; -1 means last */
-	                                         BONOBO_UI_HANDLER_PIXMAP_NONE,			/* pixmap type */
-	                                         NULL,						/* pixmap data */
+	                                         1,							/* position within menu; -1 means last */
+	                                         pixmap_type,				/* pixmap type */
+	                                         pixbuf,					/* pixmap data */
 	                                         'M',						/* accelerator key, couldn't bear the thought of using Control-S for anything except Save */
-	                                         GDK_CONTROL_MASK,				/* accelerator key modifiers */
-	                                         bonobo_sample_callback,			/* callback function */
+	                                         GDK_CONTROL_MASK,			/* accelerator key modifiers */
+	                                         bonobo_sample_callback,	/* callback function */
 	                                         view);                				/* callback function data */
 
                 /* 
@@ -252,8 +261,8 @@ sample_merge_bonobo_items_callback (BonoboObject *control, gboolean state, gpoin
 	        				    _("Sample"),					/* button user-displayed label */
 	        				    _("This is a sample merged toolbar button"),/* hint that appears in status bar */
 	        				    -1,						/* position, -1 means last */
-	        				    BONOBO_UI_HANDLER_PIXMAP_STOCK,		/* pixmap type */
-	        				    GNOME_STOCK_PIXMAP_BOOK_BLUE,		/* pixmap data */
+	        				    pixmap_type,			/* pixmap type */
+	        				    pixbuf,					/* pixmap data */
 	        				    0,						/* accelerator key */
 	        				    0,						/* accelerator key modifiers */
 	        				    bonobo_sample_callback,			/* callback function */
diff --git a/libnautilus-extensions/nautilus-bookmark.c b/libnautilus-extensions/nautilus-bookmark.c
index 35082f10c..3610841e0 100644
--- a/libnautilus-extensions/nautilus-bookmark.c
+++ b/libnautilus-extensions/nautilus-bookmark.c
@@ -170,6 +170,31 @@ nautilus_bookmark_get_pixmap_and_mask (const NautilusBookmark *bookmark,
 	return TRUE;
 }
 
+
+gboolean	    
+nautilus_bookmark_get_pixbuf(const NautilusBookmark *bookmark,
+						guint	 icon_size,
+				       GdkPixbuf **pixbuf_return)
+{
+	NautilusFile *file;
+
+	file = nautilus_file_get (nautilus_bookmark_get_uri (bookmark));
+
+	/* FIXME: This might be a bookmark that points to nothing, or
+	 * maybe its uri cannot be converted to a NautilusFile for some
+	 * other reason. It should get some sort of generic icon, but for
+	 * now it gets none.
+	 */
+	if (file == NULL) {
+		return FALSE;
+	}
+
+	*pixbuf_return = nautilus_icon_factory_get_pixbuf_for_file (file, icon_size);
+	nautilus_file_unref (file);
+
+	return TRUE;
+}
+
 const char *
 nautilus_bookmark_get_uri (const NautilusBookmark *bookmark)
 {
diff --git a/libnautilus-extensions/nautilus-bookmark.h b/libnautilus-extensions/nautilus-bookmark.h
index 2c73f0ada..bf0345aea 100644
--- a/libnautilus-extensions/nautilus-bookmark.h
+++ b/libnautilus-extensions/nautilus-bookmark.h
@@ -27,6 +27,7 @@
 
 #include <gtk/gtkwidget.h>
 #include <gdk/gdktypes.h>
+#include <gdk-pixbuf/gdk-pixbuf.h>
 
 typedef struct _NautilusBookmark NautilusBookmark;
 
@@ -73,6 +74,9 @@ gboolean          nautilus_bookmark_get_pixmap_and_mask (const NautilusBookmark
 							 guint                    icon_size,
 							 GdkPixmap              **pixmap_return,
 							 GdkBitmap              **mask_return);
+gboolean		  nautilus_bookmark_get_pixbuf(const NautilusBookmark *bookmark,
+								guint		icon_size,
+				       		 	GdkPixbuf 	**pixbuf_return);
 GtkWidget *       nautilus_bookmark_menu_item_new       (const NautilusBookmark  *bookmark);
 
 
diff --git a/libnautilus-private/nautilus-bookmark.c b/libnautilus-private/nautilus-bookmark.c
index 35082f10c..3610841e0 100644
--- a/libnautilus-private/nautilus-bookmark.c
+++ b/libnautilus-private/nautilus-bookmark.c
@@ -170,6 +170,31 @@ nautilus_bookmark_get_pixmap_and_mask (const NautilusBookmark *bookmark,
 	return TRUE;
 }
 
+
+gboolean	    
+nautilus_bookmark_get_pixbuf(const NautilusBookmark *bookmark,
+						guint	 icon_size,
+				       GdkPixbuf **pixbuf_return)
+{
+	NautilusFile *file;
+
+	file = nautilus_file_get (nautilus_bookmark_get_uri (bookmark));
+
+	/* FIXME: This might be a bookmark that points to nothing, or
+	 * maybe its uri cannot be converted to a NautilusFile for some
+	 * other reason. It should get some sort of generic icon, but for
+	 * now it gets none.
+	 */
+	if (file == NULL) {
+		return FALSE;
+	}
+
+	*pixbuf_return = nautilus_icon_factory_get_pixbuf_for_file (file, icon_size);
+	nautilus_file_unref (file);
+
+	return TRUE;
+}
+
 const char *
 nautilus_bookmark_get_uri (const NautilusBookmark *bookmark)
 {
diff --git a/libnautilus-private/nautilus-bookmark.h b/libnautilus-private/nautilus-bookmark.h
index 2c73f0ada..bf0345aea 100644
--- a/libnautilus-private/nautilus-bookmark.h
+++ b/libnautilus-private/nautilus-bookmark.h
@@ -27,6 +27,7 @@
 
 #include <gtk/gtkwidget.h>
 #include <gdk/gdktypes.h>
+#include <gdk-pixbuf/gdk-pixbuf.h>
 
 typedef struct _NautilusBookmark NautilusBookmark;
 
@@ -73,6 +74,9 @@ gboolean          nautilus_bookmark_get_pixmap_and_mask (const NautilusBookmark
 							 guint                    icon_size,
 							 GdkPixmap              **pixmap_return,
 							 GdkBitmap              **mask_return);
+gboolean		  nautilus_bookmark_get_pixbuf(const NautilusBookmark *bookmark,
+								guint		icon_size,
+				       		 	GdkPixbuf 	**pixbuf_return);
 GtkWidget *       nautilus_bookmark_menu_item_new       (const NautilusBookmark  *bookmark);
 
 
diff --git a/libnautilus/nautilus-bookmark.c b/libnautilus/nautilus-bookmark.c
index 35082f10c..3610841e0 100644
--- a/libnautilus/nautilus-bookmark.c
+++ b/libnautilus/nautilus-bookmark.c
@@ -170,6 +170,31 @@ nautilus_bookmark_get_pixmap_and_mask (const NautilusBookmark *bookmark,
 	return TRUE;
 }
 
+
+gboolean	    
+nautilus_bookmark_get_pixbuf(const NautilusBookmark *bookmark,
+						guint	 icon_size,
+				       GdkPixbuf **pixbuf_return)
+{
+	NautilusFile *file;
+
+	file = nautilus_file_get (nautilus_bookmark_get_uri (bookmark));
+
+	/* FIXME: This might be a bookmark that points to nothing, or
+	 * maybe its uri cannot be converted to a NautilusFile for some
+	 * other reason. It should get some sort of generic icon, but for
+	 * now it gets none.
+	 */
+	if (file == NULL) {
+		return FALSE;
+	}
+
+	*pixbuf_return = nautilus_icon_factory_get_pixbuf_for_file (file, icon_size);
+	nautilus_file_unref (file);
+
+	return TRUE;
+}
+
 const char *
 nautilus_bookmark_get_uri (const NautilusBookmark *bookmark)
 {
diff --git a/libnautilus/nautilus-bookmark.h b/libnautilus/nautilus-bookmark.h
index 2c73f0ada..bf0345aea 100644
--- a/libnautilus/nautilus-bookmark.h
+++ b/libnautilus/nautilus-bookmark.h
@@ -27,6 +27,7 @@
 
 #include <gtk/gtkwidget.h>
 #include <gdk/gdktypes.h>
+#include <gdk-pixbuf/gdk-pixbuf.h>
 
 typedef struct _NautilusBookmark NautilusBookmark;
 
@@ -73,6 +74,9 @@ gboolean          nautilus_bookmark_get_pixmap_and_mask (const NautilusBookmark
 							 guint                    icon_size,
 							 GdkPixmap              **pixmap_return,
 							 GdkBitmap              **mask_return);
+gboolean		  nautilus_bookmark_get_pixbuf(const NautilusBookmark *bookmark,
+								guint		icon_size,
+				       		 	GdkPixbuf 	**pixbuf_return);
 GtkWidget *       nautilus_bookmark_menu_item_new       (const NautilusBookmark  *bookmark);
 
 
diff --git a/src/nautilus-navigation-window-menus.c b/src/nautilus-navigation-window-menus.c
index 8caaf84b1..c04b7197f 100644
--- a/src/nautilus-navigation-window-menus.c
+++ b/src/nautilus-navigation-window-menus.c
@@ -312,24 +312,40 @@ append_bookmark_to_menu (NautilusWindow *window,
                          const NautilusBookmark *bookmark, 
                          const char *menu_item_path)
 {
-        BookmarkHolder *bookmark_holder;
-
+	BookmarkHolder 				*bookmark_holder;	
+	gpointer					*pixbuf_data = NULL;
+	BonoboUIHandlerPixmapType 	pixmap_type;
+	gboolean					result;
+	GdkPixbuf					*pixbuf;
+
+	/* Attempt to retrieve icon and mask for bookmark */
+	result = nautilus_bookmark_get_pixbuf (bookmark, NAUTILUS_ICON_SIZE_SMALLER, &pixbuf);
+
+	/* Set up pixmap type based on result of function.  If we fail, set pixmap type to none */
+	if (result) {
+		pixmap_type = BONOBO_UI_HANDLER_PIXMAP_PIXBUF_DATA;
+		pixbuf_data = (gpointer)pixbuf;
+	}
+	else {
+		pixmap_type = BONOBO_UI_HANDLER_PIXMAP_NONE;
+		pixbuf_data = NULL;
+	}
+	
 	bookmark_holder = g_new (BookmarkHolder, 1);
 	bookmark_holder->window = window;
 	bookmark_holder->bookmark = bookmark;
 
-        /* FIXME: Need to get the bookmark's icon in here, but how? */
-        bonobo_ui_handler_menu_new_item (window->uih,
-                                         menu_item_path,
-                                         nautilus_bookmark_get_name (bookmark),
-                                         _("Go to the specified location"),
-                                         -1,
-                                         BONOBO_UI_HANDLER_PIXMAP_NONE,
-                                         NULL,
-                                         0,
-                                         0,
-                                         activate_bookmark_in_menu_item,
-                                         bookmark_holder);
+ 	bonobo_ui_handler_menu_new_item (	window->uih,
+                                  		menu_item_path,
+                                       	nautilus_bookmark_get_name (bookmark),
+                                       	_("Go to the specified location"),
+                                       	-1,
+                                       	pixmap_type,
+                                       	pixbuf_data,
+                                      	0,
+                                       	0,
+                                       	activate_bookmark_in_menu_item,
+                                      	bookmark_holder);
 }
 
 static void
@@ -485,7 +501,6 @@ nautilus_window_add_bookmark_for_current_location (NautilusWindow *window)
 
 	g_assert (strcmp (nautilus_bookmark_get_uri (window->current_location_bookmark), 
 		          nautilus_window_get_requested_uri(window)) == 0);
-
 	/* Use the first bookmark in the history list rather than creating a new one. */
 	bookmark = window->current_location_bookmark;
 
diff --git a/src/nautilus-window-menus.c b/src/nautilus-window-menus.c
index 8caaf84b1..c04b7197f 100644
--- a/src/nautilus-window-menus.c
+++ b/src/nautilus-window-menus.c
@@ -312,24 +312,40 @@ append_bookmark_to_menu (NautilusWindow *window,
                          const NautilusBookmark *bookmark, 
                          const char *menu_item_path)
 {
-        BookmarkHolder *bookmark_holder;
-
+	BookmarkHolder 				*bookmark_holder;	
+	gpointer					*pixbuf_data = NULL;
+	BonoboUIHandlerPixmapType 	pixmap_type;
+	gboolean					result;
+	GdkPixbuf					*pixbuf;
+
+	/* Attempt to retrieve icon and mask for bookmark */
+	result = nautilus_bookmark_get_pixbuf (bookmark, NAUTILUS_ICON_SIZE_SMALLER, &pixbuf);
+
+	/* Set up pixmap type based on result of function.  If we fail, set pixmap type to none */
+	if (result) {
+		pixmap_type = BONOBO_UI_HANDLER_PIXMAP_PIXBUF_DATA;
+		pixbuf_data = (gpointer)pixbuf;
+	}
+	else {
+		pixmap_type = BONOBO_UI_HANDLER_PIXMAP_NONE;
+		pixbuf_data = NULL;
+	}
+	
 	bookmark_holder = g_new (BookmarkHolder, 1);
 	bookmark_holder->window = window;
 	bookmark_holder->bookmark = bookmark;
 
-        /* FIXME: Need to get the bookmark's icon in here, but how? */
-        bonobo_ui_handler_menu_new_item (window->uih,
-                                         menu_item_path,
-                                         nautilus_bookmark_get_name (bookmark),
-                                         _("Go to the specified location"),
-                                         -1,
-                                         BONOBO_UI_HANDLER_PIXMAP_NONE,
-                                         NULL,
-                                         0,
-                                         0,
-                                         activate_bookmark_in_menu_item,
-                                         bookmark_holder);
+ 	bonobo_ui_handler_menu_new_item (	window->uih,
+                                  		menu_item_path,
+                                       	nautilus_bookmark_get_name (bookmark),
+                                       	_("Go to the specified location"),
+                                       	-1,
+                                       	pixmap_type,
+                                       	pixbuf_data,
+                                      	0,
+                                       	0,
+                                       	activate_bookmark_in_menu_item,
+                                      	bookmark_holder);
 }
 
 static void
@@ -485,7 +501,6 @@ nautilus_window_add_bookmark_for_current_location (NautilusWindow *window)
 
 	g_assert (strcmp (nautilus_bookmark_get_uri (window->current_location_bookmark), 
 		          nautilus_window_get_requested_uri(window)) == 0);
-
 	/* Use the first bookmark in the history list rather than creating a new one. */
 	bookmark = window->current_location_bookmark;
 

