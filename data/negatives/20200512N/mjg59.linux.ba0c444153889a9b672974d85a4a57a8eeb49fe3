commit ba0c444153889a9b672974d85a4a57a8eeb49fe3
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Tue Mar 31 11:16:40 2015 -0700

    Drivers: hv: hv_balloon: correctly handle val.freeram<num_pages case
    
    'Drivers: hv: hv_balloon: refuse to balloon below the floor' fix does not
    correctly handle the case when val.freeram < num_pages as val.freeram is
    __kernel_ulong_t and the 'val.freeram - num_pages' value will be a huge
    positive value instead of being negative.
    
    Usually host doesn't ask us to balloon more than val.freeram but in case
    he have a memory hog started after we post the last pressure report we
    can get into troubles.
    
    Suggested-by: Laszlo Ersek <lersek@redhat.com>
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Laszlo Ersek <lersek@redhat.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/hv/hv_balloon.c b/drivers/hv/hv_balloon.c
index 74312c88534a..4052ad8255fa 100644
--- a/drivers/hv/hv_balloon.c
+++ b/drivers/hv/hv_balloon.c
@@ -1155,7 +1155,7 @@ static void balloon_up(struct work_struct *dummy)
 	floor = compute_balloon_floor();
 
 	/* Refuse to balloon below the floor, keep the 2M granularity. */
-	if (val.freeram - num_pages < floor) {
+	if (val.freeram < num_pages || val.freeram - num_pages < floor) {
 		num_pages = val.freeram > floor ? (val.freeram - floor) : 0;
 		num_pages -= num_pages % PAGES_IN_2M;
 	}

