commit 83274c68a34094bbb465589e61f91a3714f8d026
Author: Guenter Roeck <guenter.roeck@ericsson.com>
Date:   Tue Mar 1 13:49:18 2011 -0800

    hwmon: (pmbus) More stringent checking of VOUT_MODE register
    
    Some PMBus chips do not support the VOUT_MODE register. To make matters worse,
    such chips may not return an error when reading the register either, but instead
    return 0xff.
    
    Check if the register exists using pmbus_check_byte_register() before reading
    its value. In addition, validate the returned value and ignore it if it is 0xff
    (which is invalid).
    
    Reported-by: Greg Schnorr <gschnorr@cisco.com>
    Tested-by: Greg Schnorr <gschnorr@cisco.com>
    Signed-off-by: Guenter Roeck <guenter.roeck@ericsson.com>
    Acked-by: Greg Schnorr <gschnorr@cisco.com>

diff --git a/drivers/hwmon/pmbus_core.c b/drivers/hwmon/pmbus_core.c
index 0edab1c9553e..b7c64ba31f4c 100644
--- a/drivers/hwmon/pmbus_core.c
+++ b/drivers/hwmon/pmbus_core.c
@@ -1426,10 +1426,11 @@ static void pmbus_find_attributes(struct i2c_client *client,
 static int pmbus_identify_common(struct i2c_client *client,
 				 struct pmbus_data *data)
 {
-	int vout_mode, exponent;
+	int vout_mode = -1, exponent;
 
-	vout_mode = pmbus_read_byte_data(client, 0, PMBUS_VOUT_MODE);
-	if (vout_mode >= 0) {
+	if (pmbus_check_byte_register(client, 0, PMBUS_VOUT_MODE))
+		vout_mode = pmbus_read_byte_data(client, 0, PMBUS_VOUT_MODE);
+	if (vout_mode >= 0 && vout_mode != 0xff) {
 		/*
 		 * Not all chips support the VOUT_MODE command,
 		 * so a failure to read it is not an error.

