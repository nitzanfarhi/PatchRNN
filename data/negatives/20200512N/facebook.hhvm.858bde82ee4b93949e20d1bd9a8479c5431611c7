commit 858bde82ee4b93949e20d1bd9a8479c5431611c7
Author: Daniel Sainati <sainati@fb.com>
Date:   Tue May 30 15:11:12 2017 -0700

    disassembler no longer emits .strict directive when scalar types is not set
    
    Reviewed By: paulbiss
    
    Differential Revision: D5148653
    
    fbshipit-source-id: 9605ec9deed84ba49aae449bff355a7c15247bdf

diff --git a/hphp/runtime/vm/disas.cpp b/hphp/runtime/vm/disas.cpp
index fd384e9147..9eaf4aef69 100644
--- a/hphp/runtime/vm/disas.cpp
+++ b/hphp/runtime/vm/disas.cpp
@@ -714,9 +714,13 @@ void print_alias(Output& out, const TypeAlias& alias) {
             type_constraint(constraint));
 }
 
-void print_unit_metadata(Output& out, const Unit* unit) {
+void print_unit_strict_types(Output& out, const Unit* unit) {
+  if (!RuntimeOption::PHP7_ScalarTypes) return;
   if (unit->useStrictTypes()) out.fmtln(".strict 1;");
   else out.fmtln(".strict 0;");
+}
+
+void print_unit_metadata(Output& out, const Unit* unit) {
   out.nl();
   out.fmtln(".filepath {};", escaped(unit->filepath()));
   for (auto i = size_t{0}; i < unit->numArrays(); ++i) {
@@ -729,6 +733,7 @@ void print_unit_metadata(Output& out, const Unit* unit) {
 void print_unit(Output& out, const Unit* unit) {
   out.fmtln("# {} starts here", unit->filepath());
   out.nl();
+  print_unit_strict_types(out, unit);
   print_unit_metadata(out, unit);
   for (auto* func : unit->funcs())        print_func(out, func);
   for (auto& cls : unit->preclasses())    print_cls(out, cls.get());

