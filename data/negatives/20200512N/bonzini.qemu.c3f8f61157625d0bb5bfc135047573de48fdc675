commit c3f8f61157625d0bb5bfc135047573de48fdc675
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Sun May 9 19:15:16 2010 +0300

    pci: irq_state vmstate breakage
    
    Code for saving irq_state got vm_state
    macros wrong, passing in the wrong parameter.
    As a result, we both saved a wrong value
    and restored it to a wrong offset.
    
    This leads to device and bus irq counts getting
    out of sync, which in turn leads to interrupts getting lost or
    never cleared, such as
    https://bugzilla.redhat.com/show_bug.cgi?id=588133
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Juan Quintela <quintela@redhat.com>

diff --git a/hw/pci.c b/hw/pci.c
index 3ca5f0953f..1e143d9bf0 100644
--- a/hw/pci.c
+++ b/hw/pci.c
@@ -322,7 +322,7 @@ static VMStateInfo vmstate_info_pci_config = {
 
 static int get_pci_irq_state(QEMUFile *f, void *pv, size_t size)
 {
-    PCIDevice *s = container_of(pv, PCIDevice, config);
+    PCIDevice *s = container_of(pv, PCIDevice, irq_state);
     uint32_t irq_state[PCI_NUM_PINS];
     int i;
     for (i = 0; i < PCI_NUM_PINS; ++i) {
@@ -344,7 +344,7 @@ static int get_pci_irq_state(QEMUFile *f, void *pv, size_t size)
 static void put_pci_irq_state(QEMUFile *f, void *pv, size_t size)
 {
     int i;
-    PCIDevice *s = container_of(pv, PCIDevice, config);
+    PCIDevice *s = container_of(pv, PCIDevice, irq_state);
 
     for (i = 0; i < PCI_NUM_PINS; ++i) {
         qemu_put_be32(f, pci_irq_state(s, i));

