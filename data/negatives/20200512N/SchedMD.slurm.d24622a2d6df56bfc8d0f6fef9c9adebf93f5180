commit d24622a2d6df56bfc8d0f6fef9c9adebf93f5180
Author: Tim Wickberg <tim@schedmd.com>
Date:   Mon Jun 26 12:53:31 2017 -0600

    Restructure preempt_mode_string() to only return static strings.
    
    Previous implementation is not thread-safe.

diff --git a/src/common/slurm_protocol_defs.c b/src/common/slurm_protocol_defs.c
index 161aaf2b9d..27b0fdb456 100644
--- a/src/common/slurm_protocol_defs.c
+++ b/src/common/slurm_protocol_defs.c
@@ -1974,34 +1974,40 @@ extern void slurm_free_ping_slurmd_resp(ping_slurmd_resp_msg_t *msg)
 	xfree(msg);
 }
 
+/*
+ * structured as a static lookup table, which allows this
+ * to be thread safe while avoiding any heap allocation
+ */
 extern char *preempt_mode_string(uint16_t preempt_mode)
 {
-	char *gang_str;
-	static char preempt_str[64];
-
 	if (preempt_mode == PREEMPT_MODE_OFF)
 		return "OFF";
 	if (preempt_mode == PREEMPT_MODE_GANG)
 		return "GANG";
 
 	if (preempt_mode & PREEMPT_MODE_GANG) {
-		gang_str = "GANG,";
 		preempt_mode &= (~PREEMPT_MODE_GANG);
-	} else
-		gang_str = "";
-
-	if      (preempt_mode == PREEMPT_MODE_CANCEL)
-		sprintf(preempt_str, "%sCANCEL", gang_str);
-	else if (preempt_mode == PREEMPT_MODE_CHECKPOINT)
-		sprintf(preempt_str, "%sCHECKPOINT", gang_str);
-	else if (preempt_mode == PREEMPT_MODE_REQUEUE)
-		sprintf(preempt_str, "%sREQUEUE", gang_str);
-	else if (preempt_mode == PREEMPT_MODE_SUSPEND)
-		sprintf(preempt_str, "%sSUSPEND", gang_str);
-	else
-		sprintf(preempt_str, "%sUNKNOWN", gang_str);
+		if (preempt_mode == PREEMPT_MODE_CANCEL)
+			return "GANG,CANCEL";
+		else if (preempt_mode == PREEMPT_MODE_CHECKPOINT)
+			return "GANG,CHECKPOINT";
+		else if (preempt_mode == PREEMPT_MODE_REQUEUE)
+			return "GANG,REQUEUE";
+		else if (preempt_mode == PREEMPT_MODE_SUSPEND)
+			return "GANG,SUSPEND";
+		return "GANG,UNKNOWN";
+	} else {
+		if (preempt_mode == PREEMPT_MODE_CANCEL)
+			return "CANCEL";
+		else if (preempt_mode == PREEMPT_MODE_CHECKPOINT)
+			return "CHECKPOINT";
+		else if (preempt_mode == PREEMPT_MODE_REQUEUE)
+			return "REQUEUE";
+		else if (preempt_mode == PREEMPT_MODE_SUSPEND)
+			return "SUSPEND";
+	}
 
-	return preempt_str;
+	return "UNKNOWN";
 }
 
 extern uint16_t preempt_mode_num(const char *preempt_mode)

