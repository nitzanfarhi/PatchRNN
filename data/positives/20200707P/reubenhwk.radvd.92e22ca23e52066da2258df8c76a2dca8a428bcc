commit 92e22ca23e52066da2258df8c76a2dca8a428bcc
Author: Vasiliy Kulikov <segoon@openwall.com>
Date:   Tue Oct 4 00:33:15 2011 -0700

    set_interface_var() doesn't check interface name and blindly does
    fopen(path "/" ifname, "w") on it.  As "ifname" is an untrusted input, it
    should be checked for ".." and/or "/" in it.  Otherwise, an infected
    unprivileged daemon may overwrite contents of file named "mtu",
    "hoplimit", etc. in arbitrary location with arbitrary 32-bit value in
    decimal representation ("%d").  If an attacker has a local account or
    may create arbitrary symlinks with these names in any location (e.g.
    /tmp), any file may be overwritten with a decimal value.

diff --git a/device-linux.c b/device-linux.c
index 3bb0beb..709eebc 100644
--- a/device-linux.c
+++ b/device-linux.c
@@ -243,6 +243,10 @@ set_interface_var(const char *iface,
 	if (snprintf(spath, sizeof(spath), var, iface) >= sizeof(spath))
 		return -1;
 
+	/* No path traversal */
+	if (strstr(name, "..") || strchr(name, '/'))
+		return -1;
+
 	if (access(spath, F_OK) != 0)
 		return -1;
 

