commit 4842234f83bfce83c93f84f5972a956ef2c87805
Author: Yanjiang Jin <yanjiang.jin@windriver.com>
Date:   Fri Mar 6 10:34:42 2015 +0800

    hwrng: caam - fix rng_unmap_ctx's DMA_UNMAP size problem
    
    Fix rng_unmap_ctx's DMA_UNMAP size problem for caam_rng, else system would
    report the below calltrace during cleanup caam_rng.
    Since rng_create_sh_desc() creates a fixed descriptor of exactly 4
    command-lengths now, also update DESC_RNG_LEN to (4 * CAAM_CMD_SZ).
    
    caam_jr ffe301000.jr: DMA-API: device driver frees DMA memory with different size [device address=0x000000007f080010] [map size=16 bytes] [unmap size=40 bytes]
    ------------[ cut here ]------------
    WARNING: at lib/dma-debug.c:887
    Modules linked in:
    task: c0000000f7cdaa80 ti: c0000000e5340000 task.ti: c0000000e5340000
    NIP: c0000000004f5bc8 LR: c0000000004f5bc4 CTR: c0000000005f69b0
    REGS: c0000000e53433c0 TRAP: 0700   Not tainted
    MSR: 0000000080029000 <CE,EE,ME>  CR: 24088482  XER: 00000000
    SOFTE: 0
    
    GPR00: c0000000004f5bc4 c0000000e5343640 c0000000012af360 000000000000009f
    GPR04: 0000000000000000 00000000000000a0 c000000000d02070 c000000015980660
    GPR08: c000000000cff360 0000000000000000 0000000000000000 c0000000012da018
    GPR12: 00000000000001e3 c000000001fff780 00000000100f0000 0000000000000001
    GPR16: 0000000000000002 0000000000000000 0000000000000000 0000000000000000
    GPR20: 0000000000000000 0000000000000000 ffffffffffffffff 0000000000000001
    GPR24: 0000000000000001 0000000000000001 0000000000000000 0000000000000001
    GPR28: c000000001556b90 c000000001565b80 c0000000e5343750 c0000000f9427480
    NIP [c0000000004f5bc8] .check_unmap+0x538/0x9c0
    LR [c0000000004f5bc4] .check_unmap+0x534/0x9c0
    Call Trace:
    [c0000000e5343640] [c0000000004f5bc4] .check_unmap+0x534/0x9c0 (unreliable)
    [c0000000e53436e0] [c0000000004f60d4] .debug_dma_unmap_page+0x84/0xb0
    [c0000000e5343810] [c00000000082f9d4] .caam_cleanup+0x1d4/0x240
    [c0000000e53438a0] [c00000000056cc88] .hwrng_unregister+0xd8/0x1c0
    Instruction dump:
    7c641b78 41de0410 e8a90050 2fa50000 419e0484 e8de0028 e8ff0030 3c62ff90
    e91e0030 38638388 48546ed9 60000000 <0fe00000> 3c62ff8f 38637fc8 48546ec5
    ---[ end trace e43fd1734d6600df ]---
    
    Signed-off-by: Yanjiang Jin <yanjiang.jin@windriver.com>
    Acked-by: Kim Phillips <kim.phillips@freescale.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

diff --git a/drivers/crypto/caam/caamrng.c b/drivers/crypto/caam/caamrng.c
index ae31e555793c..26a544b505f1 100644
--- a/drivers/crypto/caam/caamrng.c
+++ b/drivers/crypto/caam/caamrng.c
@@ -52,7 +52,7 @@
 
 /* length of descriptors */
 #define DESC_JOB_O_LEN			(CAAM_CMD_SZ * 2 + CAAM_PTR_SZ * 2)
-#define DESC_RNG_LEN			(10 * CAAM_CMD_SZ)
+#define DESC_RNG_LEN			(4 * CAAM_CMD_SZ)
 
 /* Buffer, its dma address and lock */
 struct buf_data {
@@ -90,8 +90,8 @@ static inline void rng_unmap_ctx(struct caam_rng_ctx *ctx)
 	struct device *jrdev = ctx->jrdev;
 
 	if (ctx->sh_desc_dma)
-		dma_unmap_single(jrdev, ctx->sh_desc_dma, DESC_RNG_LEN,
-				 DMA_TO_DEVICE);
+		dma_unmap_single(jrdev, ctx->sh_desc_dma,
+				 desc_bytes(ctx->sh_desc), DMA_TO_DEVICE);
 	rng_unmap_buf(jrdev, &ctx->bufs[0]);
 	rng_unmap_buf(jrdev, &ctx->bufs[1]);
 }

