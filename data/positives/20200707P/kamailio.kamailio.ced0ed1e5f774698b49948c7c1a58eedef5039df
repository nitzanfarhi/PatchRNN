commit ced0ed1e5f774698b49948c7c1a58eedef5039df
Author: Henning Westerholt <henning.westerholt@1und1.de>
Date:   Mon Oct 27 10:12:59 2008 +0000

    - fix three memory leaks in registrar, related to DB_ONLY mode in usrloc:
      1. Free all memory when unregistrations with '*' are proceeded. In the
      usrloc a static urecord was used in this case, but this not hold refereces
      to the alloced ucontact records. Thus the usrloc module is not able to free
      them later. When the first query (that fills the urecord r) fails, the
      previous behavious is used.
      2. Free all memory when the state of a registrations is queried
      (no_contacts). The registrar allocates a new urecord, but fails to free
      it after building the contact.
      3. Free memory in error condition in 'star', related to the first fix. This
      functions allocated in a certain error condition (delete failed) a new
      urecord, but fails to free it too later.
    - the first and second leak leads to complete memory exhaustion
    
    
    git-svn-id: https://openser.svn.sourceforge.net/svnroot/openser/trunk@5135 689a6050-402a-0410-94f2-e92a70836424

diff --git a/modules_k/registrar/save.c b/modules_k/registrar/save.c
index 08aa779de..8f349936d 100644
--- a/modules_k/registrar/save.c
+++ b/modules_k/registrar/save.c
@@ -94,9 +94,11 @@ static inline int star(udomain_t* _d, str* _a)
 			}
 			c = c->next;
 		}
+	} else {
+		r = NULL;
 	}
 
-	if (ul.delete_urecord(_d, _a, 0) < 0) {
+	if (ul.delete_urecord(_d, _a, r) < 0) {
 		LM_ERR("failed to remove record from usrloc\n");
 		
 		     /* Delete failed, try to get corresponding
@@ -106,6 +108,7 @@ static inline int star(udomain_t* _d, str* _a)
 		rerrno = R_UL_DEL_R;
 		if (!ul.get_urecord(_d, _a, &r)) {
 			build_contact(r->contacts);
+			ul.release_urecord(r);
 		}
 		ul.unlock_udomain(_d, _a);
 		return -1;
@@ -186,6 +189,7 @@ static inline int no_contacts(udomain_t* _d, str* _a)
 	
 	if (res == 0) {  /* Contacts found */
 		build_contact(r->contacts);
+		ul.release_urecord(r);
 	}
 	ul.unlock_udomain(_d, _a);
 	return 0;

