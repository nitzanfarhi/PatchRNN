commit 3208795e612406df04a32b46eb5ea5fccfa51d69
Author: Selvan Mani <smani@micron.com>
Date:   Wed Nov 7 06:03:37 2012 -0700

    mtip32xx: fix potential crash on SEC_ERASE_UNIT
    
    The mtip driver lifted this code from elsewhere and then added a special
    handling check for SEC_ERASE_UNIT. If the caller tries to do a security
    erase but passes no output data for the command then outbuf is not
    allocated and the driver duly explodes.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Selvan Mani <smani@micron.com>
    Signed-off-by: Asai Thambi S P <asamymuthupa@micron.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

diff --git a/drivers/block/mtip32xx/mtip32xx.c b/drivers/block/mtip32xx/mtip32xx.c
index adc6f36564cf..dfb7196bbde9 100644
--- a/drivers/block/mtip32xx/mtip32xx.c
+++ b/drivers/block/mtip32xx/mtip32xx.c
@@ -2218,8 +2218,8 @@ static int exec_drive_taskfile(struct driver_data *dd,
 		fis.device);
 
 	/* check for erase mode support during secure erase.*/
-	if ((fis.command == ATA_CMD_SEC_ERASE_UNIT)
-					&& (outbuf[0] & MTIP_SEC_ERASE_MODE)) {
+	if ((fis.command == ATA_CMD_SEC_ERASE_UNIT) && outbuf &&
+					(outbuf[0] & MTIP_SEC_ERASE_MODE)) {
 		erasemode = 1;
 	}
 

