commit 74b8054c730785cd9db093e48f53337e521b6270
Author: Eric Van Hensbergen <ericvh@gmail.com>
Date:   Thu Mar 2 02:54:32 2006 -0800

    [PATCH] v9fs: fix bug in atomic create open fix
    
    Lucho's atomic create+open fix had a bug in the super block initialization
    causing all mounts to fail.  He was freeing an fcall too early.  This patch
    fixes that oversight.
    
    Signed-off-by: Eric Van Hensbergen <ericvh@gmail.com>
    Signed-off-by: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/fs/9p/vfs_super.c b/fs/9p/vfs_super.c
index 0c85872be51a..cdf787ee08de 100644
--- a/fs/9p/vfs_super.c
+++ b/fs/9p/vfs_super.c
@@ -160,7 +160,6 @@ static struct super_block *v9fs_get_sb(struct file_system_type
 		v9fs_t_clunk(v9ses, newfid);
 	} else {
 		/* Setup the Root Inode */
-		kfree(fcall);
 		root_fid = v9fs_fid_create(v9ses, newfid);
 		if (root_fid == NULL) {
 			retval = -ENOMEM;
@@ -168,8 +167,10 @@ static struct super_block *v9fs_get_sb(struct file_system_type
 		}
 
 		retval = v9fs_fid_insert(root_fid, root);
-		if (retval < 0)
+		if (retval < 0) {
+			kfree(fcall);
 			goto put_back_sb;
+		}
 
 		root_fid->qid = fcall->params.rstat.stat.qid;
 		root->d_inode->i_ino =
@@ -177,6 +178,8 @@ static struct super_block *v9fs_get_sb(struct file_system_type
 		v9fs_stat2inode(&fcall->params.rstat.stat, root->d_inode, sb);
 	}
 
+	kfree(fcall);
+
 	if (stat_result < 0) {
 		retval = stat_result;
 		goto put_back_sb;

