commit 58e4e1f6cacddb7823c44bcfb272174553f6c645
Author: Andi Kleen <ak@linux.intel.com>
Date:   Mon Sep 30 13:29:08 2013 -0700

    igb: Avoid uninitialized advertised variable in eee_set_cur
    
    eee_get_cur assumes that the output data is already zeroed. It can
    read-modify-write the advertised field:
    
                  if (ipcnfg & E1000_IPCNFG_EEE_100M_AN)
    2594                    edata->advertised |= ADVERTISED_100baseT_Full;
    
    This is ok for the normal ethtool eee_get call, which always
    zeroes the input data before.
    
    But eee_set_cur also calls eee_get_cur and it did not zero the input
    field. Later on it then compares agsinst the field, which can contain partial
    stack garbage.
    
    Zero the input field in eee_set_cur() too.
    
    Cc: jeffrey.t.kirsher@intel.com
    Cc: netdev@vger.kernel.org
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Acked-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ethernet/intel/igb/igb_ethtool.c b/drivers/net/ethernet/intel/igb/igb_ethtool.c
index 86d51429a189..151e00cad113 100644
--- a/drivers/net/ethernet/intel/igb/igb_ethtool.c
+++ b/drivers/net/ethernet/intel/igb/igb_ethtool.c
@@ -2655,6 +2655,8 @@ static int igb_set_eee(struct net_device *netdev,
 	    (hw->phy.media_type != e1000_media_type_copper))
 		return -EOPNOTSUPP;
 
+	memset(&eee_curr, 0, sizeof(struct ethtool_eee));
+
 	ret_val = igb_get_eee(netdev, &eee_curr);
 	if (ret_val)
 		return ret_val;

