commit 7fa25937542358bfa01ef5c5a1e9a00bd164c000
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Mon Aug 17 17:23:52 2015 +0900

    gpio/grgpio: fix deadlock in grgpio_irq_unmap()
    
    As reported by Alexey Khoroshilov:
    
        grgpio_irq_unmap() code looks quite suspicious regarding usage of
        priv->bgc.lock spinlock.
    
        It locks the spinlock in line 310:
    
            spin_lock_irqsave(&priv->bgc.lock, flags);
    
        and then it can call grgpio_set_imask() in line 317:
    
            grgpio_set_imask(priv, i, 0);
    
        But grgpio_set_imask() unconditionally locks the spinlock by itself.
    
    Fix this by moving the spinlock acquisition outside of
    grgpio_set_imask().
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Reported-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Cc: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Cc: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>

diff --git a/drivers/gpio/gpio-grgpio.c b/drivers/gpio/gpio-grgpio.c
index 77053d61466e..801423fe8143 100644
--- a/drivers/gpio/gpio-grgpio.c
+++ b/drivers/gpio/gpio-grgpio.c
@@ -104,17 +104,12 @@ static void grgpio_set_imask(struct grgpio_priv *priv, unsigned int offset,
 {
 	struct bgpio_chip *bgc = &priv->bgc;
 	unsigned long mask = bgc->pin2mask(bgc, offset);
-	unsigned long flags;
-
-	spin_lock_irqsave(&bgc->lock, flags);
 
 	if (val)
 		priv->imask |= mask;
 	else
 		priv->imask &= ~mask;
 	bgc->write_reg(priv->regs + GRGPIO_IMASK, priv->imask);
-
-	spin_unlock_irqrestore(&bgc->lock, flags);
 }
 
 static int grgpio_to_irq(struct gpio_chip *gc, unsigned offset)
@@ -180,16 +175,26 @@ static void grgpio_irq_mask(struct irq_data *d)
 {
 	struct grgpio_priv *priv = irq_data_get_irq_chip_data(d);
 	int offset = d->hwirq;
+	unsigned long flags;
+
+	spin_lock_irqsave(&priv->bgc.lock, flags);
 
 	grgpio_set_imask(priv, offset, 0);
+
+	spin_unlock_irqrestore(&priv->bgc.lock, flags);
 }
 
 static void grgpio_irq_unmask(struct irq_data *d)
 {
 	struct grgpio_priv *priv = irq_data_get_irq_chip_data(d);
 	int offset = d->hwirq;
+	unsigned long flags;
+
+	spin_lock_irqsave(&priv->bgc.lock, flags);
 
 	grgpio_set_imask(priv, offset, 1);
+
+	spin_unlock_irqrestore(&priv->bgc.lock, flags);
 }
 
 static struct irq_chip grgpio_irq_chip = {

