commit 648bb56d076bde31113f09a7d24d95bc8d4155ac
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Nov 19 08:13:36 2012 -0800

    cgroup: lock cgroup_mutex in cgroup_init_subsys()
    
    Make cgroup_init_subsys() grab cgroup_mutex while initializing a
    subsystem so that all helpers and callbacks are called under the
    context they expect.  This isn't strictly necessary as
    cgroup_init_subsys() doesn't race with anybody but will allow adding
    lockdep assertions.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Li Zefan <lizefan@huawei.com>

diff --git a/kernel/cgroup.c b/kernel/cgroup.c
index 6cc693b91c4a..09751657abdc 100644
--- a/kernel/cgroup.c
+++ b/kernel/cgroup.c
@@ -4317,6 +4317,8 @@ static void __init cgroup_init_subsys(struct cgroup_subsys *ss)
 
 	printk(KERN_INFO "Initializing cgroup subsys %s\n", ss->name);
 
+	mutex_lock(&cgroup_mutex);
+
 	/* init base cftset */
 	cgroup_init_cftsets(ss);
 
@@ -4346,6 +4348,8 @@ static void __init cgroup_init_subsys(struct cgroup_subsys *ss)
 	if (ss->post_create)
 		ss->post_create(dummytop);
 
+	mutex_unlock(&cgroup_mutex);
+
 	/* this function shouldn't be used with modular subsystems, since they
 	 * need to register a subsys_id, among other things */
 	BUG_ON(ss->module);

