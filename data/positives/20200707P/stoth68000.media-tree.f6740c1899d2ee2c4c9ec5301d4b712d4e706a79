commit f6740c1899d2ee2c4c9ec5301d4b712d4e706a79
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Dec 29 13:07:50 2015 +0200

    device property: avoid allocations of 0 length
    
    Arrays can not have zero elements by definition of the unified device
    properties. If such property comes from outside we should not allow it to pass.
    Otherwise memory allocation on 0 length will return non-NULL value, which we
    currently don't check.
    
    Prevent memory allocations of 0 length.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

diff --git a/drivers/base/property.c b/drivers/base/property.c
index b3429cc4ee63..c359351d50f1 100644
--- a/drivers/base/property.c
+++ b/drivers/base/property.c
@@ -653,6 +653,9 @@ int fwnode_property_match_string(struct fwnode_handle *fwnode,
 	if (nval < 0)
 		return nval;
 
+	if (nval == 0)
+		return -ENODATA;
+
 	values = kcalloc(nval, sizeof(*values), GFP_KERNEL);
 	if (!values)
 		return -ENOMEM;
@@ -718,6 +721,9 @@ static int pset_copy_entry(struct property_entry *dst,
 		return -ENOMEM;
 
 	if (src->is_array) {
+		if (!src->length)
+			return -ENODATA;
+
 		if (src->is_string) {
 			nval = src->length / sizeof(const char *);
 			dst->pointer.str = kcalloc(nval, sizeof(const char *),

