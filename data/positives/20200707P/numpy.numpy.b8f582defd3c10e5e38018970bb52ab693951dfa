commit b8f582defd3c10e5e38018970bb52ab693951dfa
Author: Travis Oliphant <oliphant@enthought.com>
Date:   Fri Mar 28 05:03:50 2008 +0000

    Fix some Py_INCREF's to Py_XINCREF to avoid segfault when NULL is stored.

diff --git a/numpy/core/src/arrayobject.c b/numpy/core/src/arrayobject.c
index d9b4c7b90..507ee3c0c 100644
--- a/numpy/core/src/arrayobject.c
+++ b/numpy/core/src/arrayobject.c
@@ -862,7 +862,7 @@ int _flat_copyinto(PyObject *dst, PyObject *src, NPY_ORDER order) {
 
     it = (PyArrayIterObject *)PyArray_IterAllButAxis(src, &axis);
     if (it == NULL) {
-	if (src != orig_src) Py_DECREF(src);
+        if (src != orig_src) {Py_DECREF(src);}
 	return -1;
     }
 
@@ -890,7 +890,7 @@ int _flat_copyinto(PyObject *dst, PyObject *src, NPY_ORDER order) {
     }
     NPY_END_THREADS
 
-    if (src != orig_src) Py_DECREF(src);
+    if (src != orig_src) {Py_DECREF(src);}
     Py_DECREF(it);
     return 0;
 }
diff --git a/numpy/core/src/ufuncobject.c b/numpy/core/src/ufuncobject.c
index 3b3b0429b..0123b6f5e 100644
--- a/numpy/core/src/ufuncobject.c
+++ b/numpy/core/src/ufuncobject.c
@@ -2425,8 +2425,9 @@ PyUFunc_Reduce(PyUFuncObject *self, PyArrayObject *arr, PyArrayObject *out,
                                             NULL);
                     loop->cast(loop->buffer, loop->castbuf,
                                1, NULL, NULL);
-                    if (loop->obj)
-                        Py_INCREF(*((PyObject **)loop->castbuf));
+                    if (loop->obj) {
+                        Py_XINCREF(*((PyObject **)loop->castbuf));
+                    }
                     memcpy(loop->bufptr[0], loop->castbuf,
                            loop->outsize);
                 }
@@ -2570,8 +2571,9 @@ PyUFunc_Accumulate(PyUFuncObject *self, PyArrayObject *arr, PyArrayObject *out,
                                             NULL);
                     loop->cast(loop->buffer, loop->castbuf,
                                1, NULL, NULL);
-                    if (loop->obj)
-                        Py_INCREF(*((PyObject **)loop->castbuf));
+                    if (loop->obj) {
+                        Py_XINCREF(*((PyObject **)loop->castbuf));
+                    }
                     memcpy(loop->bufptr[0], loop->castbuf,
                            loop->outsize);
                 }
@@ -2693,8 +2695,9 @@ PyUFunc_Reduceat(PyUFuncObject *self, PyArrayObject *arr, PyArrayObject *ind,
                 for (i=0; i<nn; i++) {
                     loop->bufptr[1] = loop->it->dataptr +   \
                         (*ptr)*loop->instrides;
-                    if (loop->obj)
-                        Py_INCREF(*((PyObject **)loop->bufptr[1]));
+                    if (loop->obj) {
+                        Py_XINCREF(*((PyObject **)loop->bufptr[1]));
+                    }
                     memcpy(loop->bufptr[0], loop->bufptr[1],
                            loop->outsize);
                     mm = (i==nn-1 ? arr->dimensions[axis]-*ptr : \
@@ -2723,8 +2726,9 @@ PyUFunc_Reduceat(PyUFuncObject *self, PyArrayObject *arr, PyArrayObject *ind,
             while(loop->index < loop->size) {
                 ptr = (intp *)ind->data;
                 for (i=0; i<nn; i++) {
-                    if (loop->obj)
-                        Py_INCREF(*((PyObject **)loop->idptr));
+                    if (loop->obj) {
+                        Py_XINCREF(*((PyObject **)loop->idptr));
+                    }
                     memcpy(loop->bufptr[0], loop->idptr,
                            loop->outsize);
                     n = 0;

