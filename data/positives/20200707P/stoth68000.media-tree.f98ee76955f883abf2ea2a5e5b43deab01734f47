commit f98ee76955f883abf2ea2a5e5b43deab01734f47
Author: Arnaud Lacombe <lacombar@gmail.com>
Date:   Sun Jul 10 03:27:05 2011 -0400

    kconfig/nconf: prevent segfault on empty menu
    
    nconf does not check the validity of the current menu when help is
    requested (with either <F2>, '?' or 'h'). This leads to a NULL pointer
    dereference when an empty menu is encountered.
    
    The following reduced testcase exposes the problem:
    
    config DEP
            bool
    
    menu "FOO"
    
    config BAR
            bool "BAR"
            depends on DEP
    
    endmenu
    
    Issue will happen when entering menu "FOO" and requesting help.
    
    nconf is the only front-end which do not filter the validity of the
    current menu. Such filter can not really happen beforehand as other key
    which does not deals with the current menu might be entered by the user,
    so just bails out earlier if we encounter an invalid menu.
    
    Cc: Nir Tzachar <nir.tzachar@gmail.com>
    Cc: Andrej Gelenberg <andrej.gelenberg@udo.edu>
    Reported-by: Andrej Gelenberg <andrej.gelenberg@udo.edu>
    Signed-off-by: Arnaud Lacombe <lacombar@gmail.com>
    Signed-off-by: Michal Marek <mmarek@suse.cz>

diff --git a/scripts/kconfig/nconf.c b/scripts/kconfig/nconf.c
index d55666d2dd85..d6345df1ce12 100644
--- a/scripts/kconfig/nconf.c
+++ b/scripts/kconfig/nconf.c
@@ -1220,7 +1220,12 @@ static void conf_message_callback(const char *fmt, va_list ap)
 
 static void show_help(struct menu *menu)
 {
-	struct gstr help = str_new();
+	struct gstr help;
+
+	if (!menu)
+		return;
+
+	help = str_new();
 	menu_get_ext_help(menu, &help);
 	show_scroll_win(main_window, _(menu_get_prompt(menu)), str_get(&help));
 	str_free(&help);

