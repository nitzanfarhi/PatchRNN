commit fd395675f882fa9c9e3e3b6fa4c5dde0e94d31ba
Author: deraadt <deraadt@openbsd.org>
Date:   Sun Nov 13 20:25:59 2005 +0000

    pretty up print_hw_addr(), and even fix a teeny buffer overflow; ok otto

diff --git a/usr.sbin/dhcpd/print.c b/usr.sbin/dhcpd/print.c
index 50facb302d6..38bfac94471 100644
--- a/usr.sbin/dhcpd/print.c
+++ b/usr.sbin/dhcpd/print.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: print.c,v 1.9 2005/04/18 16:39:25 moritz Exp $ */
+/*	$OpenBSD: print.c,v 1.10 2005/11/13 20:25:59 deraadt Exp $ */
 
 /* Turn data structures into printable text. */
 
@@ -46,29 +46,24 @@ char *
 print_hw_addr(int htype, int hlen, unsigned char *data)
 {
 	static char	habuf[49];
-	char	*s;
-	int	i;
+	int		i, j, slen = sizeof(habuf);
+	char		*s = habuf;
 
 	if (htype == 0 || hlen == 0) {
-		goto bad;
-	} else {
-		int	slen = sizeof(habuf);
-		s = habuf;
-		for (i = 0; i < hlen; i++) {
-			int	j;
-			j = snprintf(s, slen, "%02x", data[i]);
-			if (j <= 0 || j >= slen)
-				goto bad;
+bad:
+		strlcpy(habuf, "<null>", sizeof habuf);
+		return habuf;
+	}
 
-			s += strlen(s);
-			slen -= (strlen(s) + 1);
-			*s++ = ':';
-		}
-		*--s = 0;
+	for (i = 0; i < hlen; i++) {
+		j = snprintf(s, slen, "%02x", data[i]);
+		if (j <= 0 || j >= slen)
+			goto bad;
+		j = strlen(s);
+		s += j;
+		slen -= (j + 1);
+		*s++ = ':';
 	}
+	*--s = '\0';
 	return habuf;
-bad:
-	strlcpy(habuf, "<null>", sizeof habuf);
-	return habuf;
-
 }
diff --git a/usr.sbin/dhcrelay/dhcrelay.c b/usr.sbin/dhcrelay/dhcrelay.c
index ec1962db1a7..0acd0dd1fc0 100644
--- a/usr.sbin/dhcrelay/dhcrelay.c
+++ b/usr.sbin/dhcrelay/dhcrelay.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: dhcrelay.c,v 1.25 2005/05/23 22:54:34 henning Exp $ */
+/*	$OpenBSD: dhcrelay.c,v 1.26 2005/11/13 20:26:00 deraadt Exp $ */
 
 /*
  * Copyright (c) 2004 Henning Brauer <henning@cvs.openbsd.org>
@@ -274,31 +274,26 @@ char *
 print_hw_addr(int htype, int hlen, unsigned char *data)
 {
 	static char	 habuf[49];
-	char		*s;
-	int		 i;
-
-	if (htype == 0 || hlen == 0)
-		goto bad;
-	else {
-		int	slen = sizeof(habuf);
-		s = habuf;
-		for (i = 0; i < hlen; i++) {
-			int	j;
-			j = snprintf(s, slen, "%02x", data[i]);
-			if (j <= 0)
-				goto bad;
-
-			s += strlen (s);
-			slen -= (strlen(s) + 1);
-			*s++ = ':';
-		}
-		*--s = 0;
-	}
-	return habuf;
+	char		*s = habuf;
+	int		 i, j, slen = sizeof(habuf);
+
+	if (htype == 0 || hlen == 0) {
 bad:
-	strlcpy(habuf, "<null>", sizeof habuf);
-	return habuf;
+		strlcpy(habuf, "<null>", sizeof habuf);
+		return habuf;
+	}
 
+	for (i = 0; i < hlen; i++) {
+		j = snprintf(s, slen, "%02x", data[i]);
+		if (j <= 0 || j >= slen)
+			goto bad;
+		j = strlen (s);
+		s += j;
+		slen -= (j + 1);
+		*s++ = ':';
+	}
+	*--s = '\0';
+	return habuf;
 }
 
 void

