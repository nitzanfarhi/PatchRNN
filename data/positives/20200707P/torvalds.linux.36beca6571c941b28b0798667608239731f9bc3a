commit 36beca6571c941b28b0798667608239731f9bc3a
Author: Nitin Gupta <nitin.m.gupta@oracle.com>
Date:   Tue Jan 5 22:35:35 2016 -0800

    sparc64: Fix numa node distance initialization
    
    Orabug: 22495713
    
    Currently, NUMA node distance matrix is initialized only
    when a machine descriptor (MD) exists. However, sun4u
    machines (e.g. Sun Blade 2500) do not have an MD and thus
    distance values were left uninitialized. The initialization
    is now moved such that it happens on both sun4u and sun4v.
    
    Signed-off-by: Nitin Gupta <nitin.m.gupta@oracle.com>
    Tested-by: Mikael Pettersson <mikpelinux@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/arch/sparc/mm/init_64.c b/arch/sparc/mm/init_64.c
index 3025bd57f7ab..6f216853f272 100644
--- a/arch/sparc/mm/init_64.c
+++ b/arch/sparc/mm/init_64.c
@@ -1267,13 +1267,6 @@ static int __init numa_parse_mdesc(void)
 	int i, j, err, count;
 	u64 node;
 
-	/* Some sane defaults for numa latency values */
-	for (i = 0; i < MAX_NUMNODES; i++) {
-		for (j = 0; j < MAX_NUMNODES; j++)
-			numa_latency[i][j] = (i == j) ?
-				LOCAL_DISTANCE : REMOTE_DISTANCE;
-	}
-
 	node = mdesc_node_by_name(md, MDESC_NODE_NULL, "latency-groups");
 	if (node == MDESC_NODE_NULL) {
 		mdesc_release(md);
@@ -1369,10 +1362,18 @@ static int __init numa_parse_sun4u(void)
 
 static int __init bootmem_init_numa(void)
 {
+	int i, j;
 	int err = -1;
 
 	numadbg("bootmem_init_numa()\n");
 
+	/* Some sane defaults for numa latency values */
+	for (i = 0; i < MAX_NUMNODES; i++) {
+		for (j = 0; j < MAX_NUMNODES; j++)
+			numa_latency[i][j] = (i == j) ?
+				LOCAL_DISTANCE : REMOTE_DISTANCE;
+	}
+
 	if (numa_enabled) {
 		if (tlb_type == hypervisor)
 			err = numa_parse_mdesc();

