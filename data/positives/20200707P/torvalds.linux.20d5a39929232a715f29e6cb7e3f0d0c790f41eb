commit 20d5a39929232a715f29e6cb7e3f0d0c790f41eb
Author: Jeff Layton <jlayton@redhat.com>
Date:   Wed Jan 21 11:34:50 2009 -0500

    dlm: initialize file_lock struct in GETLK before copying conflicting lock
    
    dlm_posix_get fills out the relevant fields in the file_lock before
    returning when there is a lock conflict, but doesn't clean out any of
    the other fields in the file_lock.
    
    When nfsd does a NFSv4 lockt call, it sets the fl_lmops to
    nfsd_posix_mng_ops before calling the lower fs. When the lock comes back
    after testing a lock on GFS2, it still has that field set. This confuses
    nfsd into thinking that the file_lock is a nfsd4 lock.
    
    Fix this by making DLM reinitialize the file_lock before copying the
    fields from the conflicting lock.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>

diff --git a/fs/dlm/plock.c b/fs/dlm/plock.c
index 502b1ea5ef6b..894a32d438d5 100644
--- a/fs/dlm/plock.c
+++ b/fs/dlm/plock.c
@@ -304,7 +304,9 @@ int dlm_posix_get(dlm_lockspace_t *lockspace, u64 number, struct file *file,
 	if (rv == -ENOENT)
 		rv = 0;
 	else if (rv > 0) {
+		locks_init_lock(fl);
 		fl->fl_type = (op->info.ex) ? F_WRLCK : F_RDLCK;
+		fl->fl_flags = FL_POSIX;
 		fl->fl_pid = op->info.pid;
 		fl->fl_start = op->info.start;
 		fl->fl_end = op->info.end;

