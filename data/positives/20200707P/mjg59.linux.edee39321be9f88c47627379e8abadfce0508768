commit edee39321be9f88c47627379e8abadfce0508768
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Tue Mar 16 04:53:50 2010 +0000

    NET: ksz884x, fix lock imbalance
    
    Stanse found that one error path (when alloc_skb fails) in netdev_tx
    omits to unlock hw_priv->hwlock. Fix that.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Tristram Ha <Tristram.Ha@micrel.com>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/drivers/net/ksz884x.c b/drivers/net/ksz884x.c
index 7264a3e5c2c0..0f59099ee72f 100644
--- a/drivers/net/ksz884x.c
+++ b/drivers/net/ksz884x.c
@@ -4899,8 +4899,10 @@ static int netdev_tx(struct sk_buff *skb, struct net_device *dev)
 			struct sk_buff *org_skb = skb;
 
 			skb = dev_alloc_skb(org_skb->len);
-			if (!skb)
-				return NETDEV_TX_BUSY;
+			if (!skb) {
+				rc = NETDEV_TX_BUSY;
+				goto unlock;
+			}
 			skb_copy_and_csum_dev(org_skb, skb->data);
 			org_skb->ip_summed = 0;
 			skb->len = org_skb->len;
@@ -4914,7 +4916,7 @@ static int netdev_tx(struct sk_buff *skb, struct net_device *dev)
 		netif_stop_queue(dev);
 		rc = NETDEV_TX_BUSY;
 	}
-
+unlock:
 	spin_unlock_irq(&hw_priv->hwlock);
 
 	return rc;

