commit c1bbf8fec2b03e85e2e51da17fc3badee98e0c3e
Author: Jay Bourque <jay.bourque@continuum.io>
Date:   Thu May 9 12:05:26 2013 -0500

    Add null check after allocating op_flags

diff --git a/numpy/core/src/umath/ufunc_object.c b/numpy/core/src/umath/ufunc_object.c
index 80cf96419..f8ba97be1 100644
--- a/numpy/core/src/umath/ufunc_object.c
+++ b/numpy/core/src/umath/ufunc_object.c
@@ -4291,6 +4291,9 @@ PyUFunc_FromFuncAndDataAndSignature(PyUFuncGenericFunction *func, void **data,
     ufunc->doc = doc;
 
     ufunc->op_flags = PyArray_malloc(sizeof(npy_uint32)*ufunc->nargs);
+    if (ufunc->op_flags == NULL) {
+        return PyErr_NoMemory();
+    }
     memset(ufunc->op_flags, 0, sizeof(npy_uint32)*ufunc->nargs);
 
     ufunc->iter_flags = 0;
diff --git a/numpy/core/src/umath/umathmodule.c b/numpy/core/src/umath/umathmodule.c
index 9fcc0abeb..0b789de26 100644
--- a/numpy/core/src/umath/umathmodule.c
+++ b/numpy/core/src/umath/umathmodule.c
@@ -124,6 +124,9 @@ ufunc_frompyfunc(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject *NPY_UNUS
     self->core_offsets = NULL;
     self->core_signature = NULL;
     self->op_flags = PyArray_malloc(sizeof(npy_uint32)*self->nargs);
+    if (self->op_flags == NULL) {
+        return PyErr_NoMemory();
+    }
     memset(self->op_flags, 0, sizeof(npy_uint32)*self->nargs);
     self->iter_flags = 0;
 

