commit e71f5cc402ecb42b407ae52add7b173bf1c53daa
Author: Naga Chumbalkar <nagananda.chumbalkar@hp.com>
Date:   Wed Sep 14 16:22:23 2011 -0700

    drivers/cpufreq/pcc-cpufreq.c: avoid NULL pointer dereference
    
    per_cpu(processors, n) can be NULL, resulting in:
    
      Loading CPUFreq modules[  437.661360] BUG: unable to handle kernel NULL pointer dereference at (null)
      IP: [<ffffffffa0434314>] pcc_cpufreq_cpu_init+0x74/0x220 [pcc_cpufreq]
    
    It's better to avoid the oops by failing the driver, and allowing the
    system to boot.
    
    Signed-off-by: Naga Chumbalkar <nagananda.chumbalkar@hp.com>
    Cc: Dave Jones <davej@codemonkey.org.uk>
    Cc: Len Brown <lenb@kernel.org>
    Cc: <stable@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/drivers/cpufreq/pcc-cpufreq.c b/drivers/cpufreq/pcc-cpufreq.c
index 7b0603eb0129..cdc02ac8f41a 100644
--- a/drivers/cpufreq/pcc-cpufreq.c
+++ b/drivers/cpufreq/pcc-cpufreq.c
@@ -261,6 +261,9 @@ static int pcc_get_offset(int cpu)
 	pr = per_cpu(processors, cpu);
 	pcc_cpu_data = per_cpu_ptr(pcc_cpu_info, cpu);
 
+	if (!pr)
+		return -ENODEV;
+
 	status = acpi_evaluate_object(pr->handle, "PCCP", NULL, &buffer);
 	if (ACPI_FAILURE(status))
 		return -ENODEV;

