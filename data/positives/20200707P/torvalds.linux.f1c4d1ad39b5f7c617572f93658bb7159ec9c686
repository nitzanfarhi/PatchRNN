commit f1c4d1ad39b5f7c617572f93658bb7159ec9c686
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Tue Feb 28 12:02:36 2017 +0200

    perf intel-PT/BTS: Add missing initialization
    
      $ perf test decoder
      57: x86 instruction decoder - new instructions : FAILED!
      $
    
      Failed to decode 'rel' value (0xfffffffc vs expected 0): 0f 1b 80 78 56 34 12         bndstx %bnd0,0x12345678(%rax)
      Failed to decode 'rel' value (0xfffffffc vs expected 0): 0f 1b 85 78 56 34 12         bndstx %bnd0,0x12345678(%rbp)
      Failed to decode 'rel' value (0xfffffffc vs expected 0): 0f 1b 84 01 78 56 34 12      bndstx %bnd0,0x12345678(%rcx,%rax,1)
      Failed to decode 'rel' value (0xfffffffc vs expected 0): 0f 1b 84 05 78 56 34 12      bndstx %bnd0,0x12345678(%rbp,%rax,1)
      Failed to decode 'rel' value (0xfffffffc vs expected 0): 0f 1b 84 08 78 56 34 12      bndstx %bnd0,0x12345678(%rax,%rcx,1)
    
    There is missing initialization.  It only affects the test because it is
    checking 'rel' even in cases where there is no value.
    
    Fix it.
    
    Reported-and-Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lkml.kernel.org/r/08c6ad07-7994-3e56-b20e-d75727ca7765@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

diff --git a/tools/perf/util/intel-pt-decoder/intel-pt-insn-decoder.c b/tools/perf/util/intel-pt-decoder/intel-pt-insn-decoder.c
index 7913363bde5c..55b6250350d7 100644
--- a/tools/perf/util/intel-pt-decoder/intel-pt-insn-decoder.c
+++ b/tools/perf/util/intel-pt-decoder/intel-pt-insn-decoder.c
@@ -39,6 +39,8 @@ static void intel_pt_insn_decoder(struct insn *insn,
 	enum intel_pt_insn_branch branch = INTEL_PT_BR_NO_BRANCH;
 	int ext;
 
+	intel_pt_insn->rel = 0;
+
 	if (insn_is_avx(insn)) {
 		intel_pt_insn->op = INTEL_PT_OP_OTHER;
 		intel_pt_insn->branch = INTEL_PT_BR_NO_BRANCH;

