commit ed1817036bd6d83829039543c9fe4aa94acc7c39
Author: Oleg Drokin <green@linuxhacker.ru>
Date:   Mon Apr 27 11:36:46 2015 -0400

    drm: fix a memleak on mutex failure path
    
    Need to free just allocated ctx allocation if we cannot
    get our config mutex.
    
    This one has been flagged by kbuild bot all the way back in August,
    but somehow nobody picked it up:
    https://lists.01.org/pipermail/kbuild/2014-August/001691.html
    
    In addition there is another failure path that leaks the same
    ctx reference that is fixed.
    
    Found with smatch.
    
    Signed-off-by: Oleg Drokin <green@linuxhacker.ru>
    CC: Daniel Vetter <daniel.vetter@ffwll.ch>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>

diff --git a/drivers/gpu/drm/drm_modeset_lock.c b/drivers/gpu/drm/drm_modeset_lock.c
index 51cc47d827d8..c0a5cd8c5262 100644
--- a/drivers/gpu/drm/drm_modeset_lock.c
+++ b/drivers/gpu/drm/drm_modeset_lock.c
@@ -80,8 +80,10 @@ int __drm_modeset_lock_all(struct drm_device *dev,
 		return -ENOMEM;
 
 	if (trylock) {
-		if (!mutex_trylock(&config->mutex))
-			return -EBUSY;
+		if (!mutex_trylock(&config->mutex)) {
+			ret = -EBUSY;
+			goto out;
+		}
 	} else {
 		mutex_lock(&config->mutex);
 	}
@@ -114,6 +116,8 @@ int __drm_modeset_lock_all(struct drm_device *dev,
 		goto retry;
 	}
 
+out:
+	kfree(ctx);
 	return ret;
 }
 EXPORT_SYMBOL(__drm_modeset_lock_all);

