commit d9814c76ec35e53a6b6448c0f522da0c71907c81
Author: Evgeny Vereshchagin <evvers@ya.ru>
Date:   Thu Jan 14 07:38:12 2016 +0000

    core: fix memory leak on reload
    
    ==1== HEAP SUMMARY:
    ==1==     in use at exit: 61,728 bytes in 22 blocks
    ==1==   total heap usage: 258,122 allocs, 258,100 frees, 78,219,628
    bytes allocated
    ==1==
    ==1== 16 bytes in 1 blocks are definitely lost in loss record 1 of 6
    ==1==    at 0x4C2BBCF: malloc (vg_replace_malloc.c:299)
    ==1==    by 0x1E350E: memdup (alloc-util.c:34)
    ==1==    by 0x135AFB: memdup_multiply (alloc-util.h:74)
    ==1==    by 0x140F97: manager_set_default_rlimits (manager.c:2929)
    ==1==    by 0x1303DA: manager_set_defaults (main.c:737)
    ==1==    by 0x133A02: main (main.c:1718)
    ==1==
    ==1== 272 bytes in 17 blocks are definitely lost in loss record 2 of 6
    ==1==    at 0x4C2BBCF: malloc (vg_replace_malloc.c:299)
    ==1==    by 0x1E350E: memdup (alloc-util.c:34)
    ==1==    by 0x135AFB: memdup_multiply (alloc-util.h:74)
    ==1==    by 0x140F97: manager_set_default_rlimits (manager.c:2929)
    ==1==    by 0x1303DA: manager_set_defaults (main.c:737)
    ==1==    by 0x13480D: main (main.c:1828)
    ==1==
    ==1== LEAK SUMMARY:
    ==1==    definitely lost: 288 bytes in 18 blocks
    ==1==    indirectly lost: 0 bytes in 0 blocks
    ==1==      possibly lost: 0 bytes in 0 blocks
    ==1==    still reachable: 61,440 bytes in 4 blocks
    ==1==         suppressed: 0 bytes in 0 blocks
    ==1== Reachable blocks (those to which a pointer was found) are not
    shown.
    ==1== To see them, rerun with: --leak-check=full --show-leak-kinds=all

diff --git a/src/core/manager.c b/src/core/manager.c
index 711b0cdce..39e3cbbfe 100644
--- a/src/core/manager.c
+++ b/src/core/manager.c
@@ -989,7 +989,7 @@ Manager* manager_free(Manager *m) {
         free(m->switch_root_init);
 
         for (i = 0; i < _RLIMIT_MAX; i++)
-                free(m->rlimit[i]);
+                m->rlimit[i] = mfree(m->rlimit[i]);
 
         assert(hashmap_isempty(m->units_requiring_mounts_for));
         hashmap_free(m->units_requiring_mounts_for);
@@ -2923,6 +2923,8 @@ int manager_set_default_rlimits(Manager *m, struct rlimit **default_rlimit) {
         assert(m);
 
         for (i = 0; i < _RLIMIT_MAX; i++) {
+                m->rlimit[i] = mfree(m->rlimit[i]);
+
                 if (!default_rlimit[i])
                         continue;
 

