commit 944ea4dd38b8575e30a5699633c81945bff1864d
Author: Jon Mason <jon.mason@intel.com>
Date:   Sun Nov 11 23:03:20 2012 +0000

    dmatest: Fix NULL pointer dereference on ioat
    
    device_control is an optional and not implemented in all DMA drivers.
    Any calls to these will result in a NULL pointer dereference.  dmatest
    makes two of these calls when completing the kernel thread and removing
    the module.  These are corrected by calling the dmaengine_device_control
    wrapper and checking for a non-existant device_control function pointer
    there.
    
    Signed-off-by: Jon Mason <jon.mason@intel.com>
    CC: Vinod Koul <vinod.koul@intel.com>
    CC: Dan Williams <djbw@fb.com>
    Reviewed-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Vinod Koul <vinod.koul@linux.intel.com>

diff --git a/drivers/dma/dmatest.c b/drivers/dma/dmatest.c
index 3a8047b1f108..99a75e5d66be 100644
--- a/drivers/dma/dmatest.c
+++ b/drivers/dma/dmatest.c
@@ -536,7 +536,7 @@ static int dmatest_func(void *data)
 			thread_name, total_tests, failed_tests, ret);
 
 	/* terminate all transfers on specified channels */
-	chan->device->device_control(chan, DMA_TERMINATE_ALL, 0);
+	dmaengine_terminate_all(chan);
 	if (iterations > 0)
 		while (!kthread_should_stop()) {
 			DECLARE_WAIT_QUEUE_HEAD_ONSTACK(wait_dmatest_exit);
@@ -561,7 +561,7 @@ static void dmatest_cleanup_channel(struct dmatest_chan *dtc)
 	}
 
 	/* terminate all transfers on specified channels */
-	dtc->chan->device->device_control(dtc->chan, DMA_TERMINATE_ALL, 0);
+	dmaengine_terminate_all(dtc->chan);
 
 	kfree(dtc);
 }
diff --git a/include/linux/dmaengine.h b/include/linux/dmaengine.h
index 3aa76dbed166..be6e95395b11 100644
--- a/include/linux/dmaengine.h
+++ b/include/linux/dmaengine.h
@@ -608,7 +608,10 @@ static inline int dmaengine_device_control(struct dma_chan *chan,
 					   enum dma_ctrl_cmd cmd,
 					   unsigned long arg)
 {
-	return chan->device->device_control(chan, cmd, arg);
+	if (chan->device->device_control)
+		return chan->device->device_control(chan, cmd, arg);
+	else
+		return -ENOSYS;
 }
 
 static inline int dmaengine_slave_config(struct dma_chan *chan,

