commit e357da7b90360f818630d3266bff5f98b001011c
Author: Török Edvin <edwin@clamav.net>
Date:   Thu Aug 21 15:58:02 2008 +0000

    more leak fixes (bb #1141)
    
    git-svn: trunk@4127

diff --git a/clamd/others.c b/clamd/others.c
index 27ceb7a43..989a971ae 100644
--- a/clamd/others.c
+++ b/clamd/others.c
@@ -132,8 +132,11 @@ void virusaction(const char *filename, const char *virname, const struct cfgstru
 		}
 	}
 
-	if(!cmd)
+	if(!cmd) {
+		free(buffer_file);
+		free(buffer_vir);
 		return;
+	}
 	/* We can only call async-signal-safe functions after fork(). */
 	pid = fork();
 
diff --git a/clamd/server-th.c b/clamd/server-th.c
index dd24203ac..47b12dd7b 100644
--- a/clamd/server-th.c
+++ b/clamd/server-th.c
@@ -688,7 +688,7 @@ int acceptloop_th(int *socketds, int nsockets, struct cl_engine *engine, unsigne
 	    time(&reloaded_time);
 	    pthread_mutex_unlock(&reload_mutex);
 #ifdef CLAMUKO
-	    if(cfgopt(copt, "ClamukoScanOnAccess")->enabled) {
+	    if(cfgopt(copt, "ClamukoScanOnAccess")->enabled && tharg) {
 		logg("Stopping and restarting Clamuko.\n");
 		pthread_kill(clamuko_pid, SIGUSR1);
 		pthread_join(clamuko_pid, NULL);
diff --git a/libclamav/htmlnorm.c b/libclamav/htmlnorm.c
index df7a395a9..16b449319 100644
--- a/libclamav/htmlnorm.c
+++ b/libclamav/htmlnorm.c
@@ -1465,7 +1465,7 @@ static int cli_html_normalise(int fd, m_area_t *m_area, const char *dirname, tag
 					cli_dbgmsg("RFC2397 data file: %s\n", tmp_file);
 					file_tmp_o1->fd = open(tmp_file, O_WRONLY|O_CREAT|O_TRUNC, S_IWUSR|S_IRUSR);
 					free(tmp_file);
-					if (!file_tmp_o1->fd) {
+					if (file_tmp_o1->fd < 0) {
 						cli_dbgmsg("open failed: %s\n", filename);
 						free(file_tmp_o1);
 						goto abort;
@@ -1665,12 +1665,14 @@ abort:
 	}
 	if (file_buff_o2) {
 		html_output_flush(file_buff_o2);
-		close(file_buff_o2->fd);
+		if(file_buff_o2->fd != -1)
+			close(file_buff_o2->fd);
 		free(file_buff_o2);
 	}
 	if(file_buff_text) {
 		html_output_flush(file_buff_text);
-		close(file_buff_text->fd);
+		if(file_buff_text->fd != -1)
+			close(file_buff_text->fd);
 		free(file_buff_text);
 	}
 	return retval;
@@ -1739,7 +1741,7 @@ int html_screnc_decode(int fd, const char *dirname)
 	snprintf(filename, 1024, "%s/screnc.html", dirname);
 	ofd = open(filename, O_WRONLY|O_CREAT|O_TRUNC, S_IWUSR|S_IRUSR);
 
-	if (!ofd) {
+	if (ofd < 0) {
 		cli_dbgmsg("open failed: %s\n", filename);
 		fclose(stream_in);
 		return FALSE;
diff --git a/libclamav/sis.c b/libclamav/sis.c
index 7790631e2..ffb8912c3 100644
--- a/libclamav/sis.c
+++ b/libclamav/sis.c
@@ -510,6 +510,7 @@ static int real_scansis(FILE *f, cli_ctx *ctx, const char *tmpd) {
 	    free(decomp);
 	    free(ptrs);
 	    free(alangs);
+	    close(fd);
 	    return CL_EIO;
 	  }
 	  free(decomp);
diff --git a/libclamav/vba_extract.c b/libclamav/vba_extract.c
index aa57b807b..11cb16df3 100644
--- a/libclamav/vba_extract.c
+++ b/libclamav/vba_extract.c
@@ -287,8 +287,10 @@ cli_vba_readdir(const char *dir, struct uniq *U, uint32_t which)
 
 	i = vba_read_project_strings(fd, TRUE);
 	seekback = lseek(fd, 0, SEEK_CUR);
-	if (lseek(fd, sizeof(struct vba56_header), SEEK_SET) == -1)
+	if (lseek(fd, sizeof(struct vba56_header), SEEK_SET) == -1) {
+		close(fd);
 		return NULL;
+	}
 	j = vba_read_project_strings(fd, FALSE);
 	if(!i && !j) {
 		close(fd);

