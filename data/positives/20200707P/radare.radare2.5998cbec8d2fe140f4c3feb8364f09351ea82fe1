commit 5998cbec8d2fe140f4c3feb8364f09351ea82fe1
Author: Maxime M <morin@itrust.lu>
Date:   Mon Jan 13 15:53:48 2014 +0100

    correcting Resource leak

diff --git a/libr/cmd/macro.c b/libr/cmd/macro.c
index ced7a5ec2..6ffdbedd2 100644
--- a/libr/cmd/macro.c
+++ b/libr/cmd/macro.c
@@ -49,6 +49,7 @@ R_API int r_cmd_macro_add(RCmdMacro *mac, const char *oname) {
 		pbody++;
 	} else {
 		eprintf ("Invalid macro body\n");
+		free (name);
 		return R_FALSE;
 	}
 
diff --git a/libr/core/cmd_flag.c b/libr/core/cmd_flag.c
index 78d4603a3..eb4f2b24a 100644
--- a/libr/core/cmd_flag.c
+++ b/libr/core/cmd_flag.c
@@ -58,6 +58,7 @@ static int cmd_flag(void *data, const char *input) {
 	case 'b':
 		switch (input[1]) {
 		case ' ':
+			free(str);
 			str = strdup (input+2);
 			ptr = strchr (str, ' ');
 			if (ptr) {
diff --git a/libr/debug/p/libgdbwrap/gdbwrapper.c b/libr/debug/p/libgdbwrap/gdbwrapper.c
index 45fd8d1f0..2beb4a081 100644
--- a/libr/debug/p/libgdbwrap/gdbwrapper.c
+++ b/libr/debug/p/libgdbwrap/gdbwrapper.c
@@ -687,12 +687,14 @@ static void *gdbwrap_writememory(gdbwrap_t *desc, la32 linaddr, void *value, uns
 	char *rec, *packet = malloc(bytes + MSG_BUF);
 
 	if (!desc || !value)
+		free (packet);
 		return NULL;
 	snprintf(packet, MSG_BUF, "%s%x%s%x%s", GDBWRAP_MEMWRITE,
 			linaddr, GDBWRAP_SEP_COMMA, bytes, GDBWRAP_SEP_COLON);
 	packetsize = strlen(packet);
 	if (packetsize>=MSG_BUF) {
 		fprintf (stderr, "Too big packet\n");
+		free (packet);
 		return NULL;
 	}
 	/* GDB protocol expects the value we send to be a "Binary value", ie

