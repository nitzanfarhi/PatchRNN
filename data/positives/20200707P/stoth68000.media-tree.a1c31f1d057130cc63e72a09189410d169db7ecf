commit a1c31f1d057130cc63e72a09189410d169db7ecf
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Dec 7 03:10:35 2013 +0400

    can: ems_usb: fix urb leaks on failure paths
    
    There are a couple failure paths where urb leaks.
    Is spare code within ems_usb_start_xmit(),
    usb_free_urb() should be used to deallocate urb instead of usb_unanchor_urb().
    In ems_usb_start() there is no usb_free_urb() if usb_submit_urb() fails.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Sebastian Haas <dev@sebastianhaas.info>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

diff --git a/drivers/net/can/usb/ems_usb.c b/drivers/net/can/usb/ems_usb.c
index 5f9a7ad9b964..8aeec0b4601a 100644
--- a/drivers/net/can/usb/ems_usb.c
+++ b/drivers/net/can/usb/ems_usb.c
@@ -625,6 +625,7 @@ static int ems_usb_start(struct ems_usb *dev)
 			usb_unanchor_urb(urb);
 			usb_free_coherent(dev->udev, RX_BUFFER_SIZE, buf,
 					  urb->transfer_dma);
+			usb_free_urb(urb);
 			break;
 		}
 
@@ -798,8 +799,8 @@ static netdev_tx_t ems_usb_start_xmit(struct sk_buff *skb, struct net_device *ne
 	 * allowed (MAX_TX_URBS).
 	 */
 	if (!context) {
-		usb_unanchor_urb(urb);
 		usb_free_coherent(dev->udev, size, buf, urb->transfer_dma);
+		usb_free_urb(urb);
 
 		netdev_warn(netdev, "couldn't find free context\n");
 

