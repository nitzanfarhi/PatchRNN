commit 7da9bc00f26dc06ad3072de22563472220cdfa9f
Author: Nicolas Iooss <nicolas.iooss@m4x.org>
Date:   Sat Jan 21 15:26:13 2017 +0100

    checkpolicy: do not leak memory when a class is not found in an avrule
    
    While checkmodule tries to compile the following policy file and fails
    because class "process" is not found, it does not free some allocated
    memory:
    
        module ckpol_leaktest 1.0.0;
        require {type TYPE1;}
        allow TYPE1 self:process fork;
    
    clang memory sanitier output is:
    
    =================================================================
    ==16050==ERROR: LeakSanitizer: detected memory leaks
    
    Direct leak of 136 byte(s) in 1 object(s) allocated from:
        #0 0x7f8bd8127608 in malloc (/usr/lib/clang/3.9.1/lib/linux/libclang_rt.asan-x86_64.so+0xf6608)
        #1 0x41a620 in define_te_avtab_helper /usr/src/selinux/checkpolicy/policy_define.c:2450:24
        #2 0x41b6c8 in define_te_avtab /usr/src/selinux/checkpolicy/policy_define.c:2621:6
        #3 0x40522b in yyparse /usr/src/selinux/checkpolicy/policy_parse.y:470:10
        #4 0x411816 in read_source_policy /usr/src/selinux/checkpolicy/parse_util.c:64:6
        #5 0x7f8bd7cb3290 in __libc_start_main (/usr/lib/libc.so.6+0x20290)
    
    Direct leak of 8 byte(s) in 1 object(s) allocated from:
        #0 0x7f8bd8127608 in malloc (/usr/lib/clang/3.9.1/lib/linux/libclang_rt.asan-x86_64.so+0xf6608)
        #1 0x411c87 in insert_id /usr/src/selinux/checkpolicy/policy_define.c:120:18
    
    Indirect leak of 24 byte(s) in 1 object(s) allocated from:
        #0 0x7f8bd8127608 in malloc (/usr/lib/clang/3.9.1/lib/linux/libclang_rt.asan-x86_64.so+0xf6608)
        #1 0x43133c in ebitmap_set_bit /usr/src/selinux/libsepol/src/ebitmap.c:321:27
    
    Indirect leak of 18 byte(s) in 1 object(s) allocated from:
        #0 0x7f8bd80b5eb0 in __interceptor___strdup (/usr/lib/clang/3.9.1/lib/linux/libclang_rt.asan-x86_64.so+0x84eb0)
        #1 0x41a6e5 in define_te_avtab_helper /usr/src/selinux/checkpolicy/policy_define.c:2460:28
        #2 0x41b6c8 in define_te_avtab /usr/src/selinux/checkpolicy/policy_define.c:2621:6
        #3 0x40522b in yyparse /usr/src/selinux/checkpolicy/policy_parse.y:470:10
        #4 0x411816 in read_source_policy /usr/src/selinux/checkpolicy/parse_util.c:64:6
        #5 0x7f8bd7cb3290 in __libc_start_main (/usr/lib/libc.so.6+0x20290)
    
    SUMMARY: AddressSanitizer: 186 byte(s) leaked in 4 allocation(s).
    
    Signed-off-by: Nicolas Iooss <nicolas.iooss@m4x.org>

diff --git a/checkpolicy/policy_define.c b/checkpolicy/policy_define.c
index e2e384d4..dbafadb0 100644
--- a/checkpolicy/policy_define.c
+++ b/checkpolicy/policy_define.c
@@ -348,13 +348,14 @@ static int read_classes(ebitmap_t *e_classes)
 		cladatum = hashtab_search(policydbp->p_classes.table, id);
 		if (!cladatum) {
 			yyerror2("unknown class %s", id);
+			free(id);
 			return -1;
 		}
+		free(id);
 		if (ebitmap_set_bit(e_classes, cladatum->s.value - 1, TRUE)) {
 			yyerror("Out of memory");
 			return -1;
 		}
-		free(id);
 	}
 	return 0;
 }
@@ -2552,6 +2553,10 @@ int define_te_avtab_helper(int which, avrule_t ** rule)
 	*rule = avrule;
 
       out:
+	if (ret) {
+		avrule_destroy(avrule);
+		free(avrule);
+	}
 	return ret;
 
 }

