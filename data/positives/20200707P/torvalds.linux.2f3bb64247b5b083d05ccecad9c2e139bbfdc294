commit 2f3bb64247b5b083d05ccecad9c2e139bbfdc294
Author: David Lebrun <david.lebrun@uclouvain.be>
Date:   Tue Apr 18 17:59:49 2017 +0200

    ipv6: sr: fix out-of-bounds access in SRH validation
    
    This patch fixes an out-of-bounds access in seg6_validate_srh() when the
    trailing data is less than sizeof(struct sr6_tlv).
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: David Lebrun <david.lebrun@uclouvain.be>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/ipv6/seg6.c b/net/ipv6/seg6.c
index a855eb325b03..5f44ffed2576 100644
--- a/net/ipv6/seg6.c
+++ b/net/ipv6/seg6.c
@@ -53,6 +53,9 @@ bool seg6_validate_srh(struct ipv6_sr_hdr *srh, int len)
 		struct sr6_tlv *tlv;
 		unsigned int tlv_len;
 
+		if (trailing < sizeof(*tlv))
+			return false;
+
 		tlv = (struct sr6_tlv *)((unsigned char *)srh + tlv_offset);
 		tlv_len = sizeof(*tlv) + tlv->len;
 

