commit 6a5b69a959483c7404576a7dc54221ced41e6515
Author: Olivier Danet <odanet@caramail.com>
Date:   Fri Mar 21 02:25:19 2014 +0100

    target-sparc: fix 32bit integer division overflow
    
    The signed integer division -0x8000_0000_0000_0000 / -1 must be handled
    separately to avoid an overflow on the QEMU host.
    
    Negative overflow must be a negative number for correct sign
    extension in Sparc64 mode. Use <stdint.h> constants.
    
    Signed-off-by: Olivier Danet <odanet@caramail.com>
    Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>

diff --git a/target-sparc/helper.c b/target-sparc/helper.c
index f3c7fbf993..ae7740bca1 100644
--- a/target-sparc/helper.c
+++ b/target-sparc/helper.c
@@ -85,8 +85,8 @@ static target_ulong helper_udiv_common(CPUSPARCState *env, target_ulong a,
     }
 
     x0 = x0 / x1;
-    if (x0 > 0xffffffff) {
-        x0 = 0xffffffff;
+    if (x0 > UINT32_MAX) {
+        x0 = UINT32_MAX;
         overflow = 1;
     }
 
@@ -122,12 +122,15 @@ static target_ulong helper_sdiv_common(CPUSPARCState *env, target_ulong a,
     if (x1 == 0) {
         cpu_restore_state(CPU(cpu), GETPC());
         helper_raise_exception(env, TT_DIV_ZERO);
-    }
-
-    x0 = x0 / x1;
-    if ((int32_t) x0 != x0) {
-        x0 = x0 < 0 ? 0x80000000 : 0x7fffffff;
+    } else if (x1 == -1 && x0 == INT64_MIN) {
+        x0 = INT32_MAX;
         overflow = 1;
+    } else {
+        x0 = x0 / x1;
+        if ((int32_t) x0 != x0) {
+            x0 = x0 < 0 ? INT32_MIN : INT32_MAX;
+            overflow = 1;
+        }
     }
 
     if (cc) {

