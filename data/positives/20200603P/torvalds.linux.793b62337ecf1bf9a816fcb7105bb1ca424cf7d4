commit 793b62337ecf1bf9a816fcb7105bb1ca424cf7d4
Author: Jesper Juhl <jj@chaosbits.net>
Date:   Sun Nov 7 22:04:43 2010 +0100

    UWB: Return UWB_RSV_ALLOC_NOT_FOUND rather than crashing on NULL dereference if kzalloc fails
    
    Crashing on a null pointer deref is never a nice thing to do. It seems
    to me that it's better to simply return UWB_RSV_ALLOC_NOT_FOUND if
    kzalloc() fails in uwb_rsv_find_best_allocation().
    
    Signed-off-by: Jesper Juhl <jj@chaosbits.net>
    Acked-by: David Vrabel <david.vrabel@csr.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/uwb/allocator.c b/drivers/uwb/allocator.c
index 436e4f7110cb..e45e673b8770 100644
--- a/drivers/uwb/allocator.c
+++ b/drivers/uwb/allocator.c
@@ -326,7 +326,8 @@ int uwb_rsv_find_best_allocation(struct uwb_rsv *rsv, struct uwb_mas_bm *availab
 	int bit_index;
 
 	ai = kzalloc(sizeof(struct uwb_rsv_alloc_info), GFP_KERNEL);
-	
+	if (!ai)
+		return UWB_RSV_ALLOC_NOT_FOUND;
 	ai->min_mas = rsv->min_mas;
 	ai->max_mas = rsv->max_mas;
 	ai->max_interval = rsv->max_interval;

