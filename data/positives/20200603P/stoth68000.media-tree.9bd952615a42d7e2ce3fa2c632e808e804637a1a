commit 9bd952615a42d7e2ce3fa2c632e808e804637a1a
Author: Sage Weil <sage@inktank.com>
Date:   Wed Oct 24 16:12:58 2012 -0700

    libceph: avoid NULL kref_put when osd reset races with alloc_msg
    
    The ceph_on_in_msg_alloc() method drops con->mutex while it allocates a
    message.  If that races with a timeout that resends a zillion messages and
    resets the connection, and the ->alloc_msg() method returns a NULL message,
    it will call ceph_msg_put(NULL) and BUG.
    
    Fix by only calling put if msg is non-NULL.
    
    Fixes http://tracker.newdream.net/issues/3142
    
    Signed-off-by: Sage Weil <sage@inktank.com>

diff --git a/net/ceph/messenger.c b/net/ceph/messenger.c
index cad0d17ec45e..3ef1759403b4 100644
--- a/net/ceph/messenger.c
+++ b/net/ceph/messenger.c
@@ -2750,7 +2750,8 @@ static int ceph_con_in_msg_alloc(struct ceph_connection *con, int *skip)
 		msg = con->ops->alloc_msg(con, hdr, skip);
 		mutex_lock(&con->mutex);
 		if (con->state != CON_STATE_OPEN) {
-			ceph_msg_put(msg);
+			if (msg)
+				ceph_msg_put(msg);
 			return -EAGAIN;
 		}
 		con->in_msg = msg;

