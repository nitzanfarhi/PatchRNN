commit 5c2f117a22e46a4afee6ddee29b653a7a2a6b41f
Author: Emil Lundmark <emil@limesaudio.com>
Date:   Wed Oct 12 12:31:40 2016 +0200

    clk: imx: fix integer overflow in AV PLL round rate
    
    Since 'parent_rate * mfn' may overflow 32 bits, the result should be
    stored using 64 bits.
    
    The problem was discovered when trying to set the rate of the audio PLL
    (pll4_post_div) on an i.MX6Q. The desired rate was 196.608 MHz, but
    the actual rate returned was 192.000570 MHz. The round rate function should
    have been able to return 196.608 MHz, i.e., the desired rate.
    
    Fixes: ba7f4f557eb6 ("clk: imx: correct AV PLL rate formula")
    Cc: Anson Huang <b20788@freescale.com>
    Signed-off-by: Emil Lundmark <emil@limesaudio.com>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Acked-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>

diff --git a/drivers/clk/imx/clk-pllv3.c b/drivers/clk/imx/clk-pllv3.c
index 19f9b622981a..7a6acc3e4a92 100644
--- a/drivers/clk/imx/clk-pllv3.c
+++ b/drivers/clk/imx/clk-pllv3.c
@@ -223,7 +223,7 @@ static unsigned long clk_pllv3_av_recalc_rate(struct clk_hw *hw,
 	temp64 *= mfn;
 	do_div(temp64, mfd);
 
-	return (parent_rate * div) + (u32)temp64;
+	return parent_rate * div + (unsigned long)temp64;
 }
 
 static long clk_pllv3_av_round_rate(struct clk_hw *hw, unsigned long rate,
@@ -247,7 +247,11 @@ static long clk_pllv3_av_round_rate(struct clk_hw *hw, unsigned long rate,
 	do_div(temp64, parent_rate);
 	mfn = temp64;
 
-	return parent_rate * div + parent_rate * mfn / mfd;
+	temp64 = (u64)parent_rate;
+	temp64 *= mfn;
+	do_div(temp64, mfd);
+
+	return parent_rate * div + (unsigned long)temp64;
 }
 
 static int clk_pllv3_av_set_rate(struct clk_hw *hw, unsigned long rate,

