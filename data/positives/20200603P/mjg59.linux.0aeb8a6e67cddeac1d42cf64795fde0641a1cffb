commit 0aeb8a6e67cddeac1d42cf64795fde0641a1cffb
Author: Anand Jain <Anand.Jain@oracle.com>
Date:   Mon Jun 30 17:12:48 2014 +0800

    btrfs: fix null pointer dereference in btrfs_show_devname when name is null
    
    dev->name is null but missing flag is not set.
    Strictly speaking the missing flag should have been set, but there
    are more places where code just checks if name is null. For now this
    patch does the same.
    
    stack:
    BUG: unable to handle kernel NULL pointer dereference at 0000000000000064
    IP: [<ffffffffa0228908>] btrfs_show_devname+0x58/0xf0 [btrfs]
    
    [<ffffffff81198879>] show_vfsmnt+0x39/0x130
    [<ffffffff81178056>] m_show+0x16/0x20
    [<ffffffff8117d706>] seq_read+0x296/0x390
    [<ffffffff8115aa7d>] vfs_read+0x9d/0x160
    [<ffffffff8115b549>] SyS_read+0x49/0x90
    [<ffffffff817abe52>] system_call_fastpath+0x16/0x1b
    
    reproducer:
    mkfs.btrfs -draid1 -mraid1 /dev/sdg1 /dev/sdg2
    btrfstune -S 1 /dev/sdg1
    modprobe -r btrfs && modprobe btrfs
    mount -o degraded /dev/sdg1 /btrfs
    btrfs dev add /dev/sdg3 /btrfs
    
    Signed-off-by: Anand Jain <Anand.Jain@oracle.com>
    Signed-off-by: Chris Mason <clm@fb.com>

diff --git a/fs/btrfs/super.c b/fs/btrfs/super.c
index 0927e463afca..8e16bca69c56 100644
--- a/fs/btrfs/super.c
+++ b/fs/btrfs/super.c
@@ -1811,6 +1811,8 @@ static int btrfs_show_devname(struct seq_file *m, struct dentry *root)
 		list_for_each_entry(dev, head, dev_list) {
 			if (dev->missing)
 				continue;
+			if (!dev->name)
+				continue;
 			if (!first_dev || dev->devid < first_dev->devid)
 				first_dev = dev;
 		}

