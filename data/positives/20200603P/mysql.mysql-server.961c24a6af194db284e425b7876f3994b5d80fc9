commit 961c24a6af194db284e425b7876f3994b5d80fc9
Author: Gleb Shchepa <gleb.shchepa@oracle.com>
Date:   Tue Oct 30 16:50:55 2012 +0400

    Bug #14761894: EXPLAIN CAN CRASH SERVER ON SELECT STATEMENT
    
    If a table contains blobs, it may crash inside the
    MyISAM engine, otherwise inside the HEAP/MEMORY
    engine.
    
    
    Details:
    
     This bug is a regression of the WL6071 ("Inline tmp
    tables into nested loops algorithm").
    
    That WL has separated a temporary table handler creation
    from a table "instantiation" and moved the 1st
    part into JOIN::optimize() from JOIN::exec().
    
    When we EXPLAIN a UNION, we have to reset its underlying
    JOINs with JOIN::reset().
    JOIN::reset() calls handler's methods those expect a
    completely constructed handler object with an open table.
    However, as far as we skip the evaluation of JOIN::exec()
    in EXPLAIN (excluding the subqueries), JOIN::exec() has
    no chance to finish the construction of a handler, i.e.
    no call to open_tmp_table() happens.
    
    The Fix:
    
    The JOIN::reset() function has been modified to skip
    the cleanup of not opened intermediate temporary
    tables.

diff --git a/sql/sql_select.cc b/sql/sql_select.cc
index f9268359dfc..4d530756163 100644
--- a/sql/sql_select.cc
+++ b/sql/sql_select.cc
@@ -761,6 +761,8 @@ void JOIN::reset()
     for (uint tmp= primary_tables; tmp < primary_tables + tmp_tables; tmp++)
     {
       TABLE *tmp_table= join_tab[tmp].table;
+      if (!tmp_table->created)
+        continue;
       tmp_table->file->extra(HA_EXTRA_RESET_STATE);
       tmp_table->file->ha_delete_all_rows();
       free_io_cache(tmp_table);

