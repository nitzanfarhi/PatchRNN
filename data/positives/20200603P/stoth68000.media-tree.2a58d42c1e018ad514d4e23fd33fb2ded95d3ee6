commit 2a58d42c1e018ad514d4e23fd33fb2ded95d3ee6
Author: Michal Kazior <michal.kazior@tieto.com>
Date:   Thu Jan 21 14:23:07 2016 +0100

    mac80211: fix txq queue related crashes
    
    The driver can access the queue simultanously
    while mac80211 tears down the interface. Without
    spinlock protection this could lead to corrupting
    sk_buff_head and subsequently to an invalid
    pointer dereference.
    
    Fixes: ba8c3d6f16a1 ("mac80211: add an intermediate software queue implementation")
    Signed-off-by: Michal Kazior <michal.kazior@tieto.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>

diff --git a/net/mac80211/iface.c b/net/mac80211/iface.c
index 33ae3c81bfc5..0451f120746e 100644
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -977,7 +977,10 @@ static void ieee80211_do_stop(struct ieee80211_sub_if_data *sdata,
 	if (sdata->vif.txq) {
 		struct txq_info *txqi = to_txq_info(sdata->vif.txq);
 
+		spin_lock_bh(&txqi->queue.lock);
 		ieee80211_purge_tx_queue(&local->hw, &txqi->queue);
+		spin_unlock_bh(&txqi->queue.lock);
+
 		atomic_set(&sdata->txqs_len[txqi->txq.ac], 0);
 	}
 

