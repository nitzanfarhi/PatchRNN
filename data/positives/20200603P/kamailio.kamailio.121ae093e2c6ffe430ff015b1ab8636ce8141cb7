commit 121ae093e2c6ffe430ff015b1ab8636ce8141cb7
Author: Bogdan-Andrei Iancu <bogdan@voice-system.ro>
Date:   Tue Oct 31 21:29:49 2006 +0000

    fixed some low probability races. Patch sent by Andrei Pelinescu-Onciul <andrei@iptel.org>
    
    
    git-svn-id: https://openser.svn.sourceforge.net/svnroot/openser/trunk@1211 689a6050-402a-0410-94f2-e92a70836424

diff --git a/modules_k/pike/ip_tree.h b/modules_k/pike/ip_tree.h
index 0febd3f85..1afa8d089 100644
--- a/modules_k/pike/ip_tree.h
+++ b/modules_k/pike/ip_tree.h
@@ -57,7 +57,7 @@ struct ip_node
 	unsigned short    hits[2];
 	unsigned char     byte;
 	unsigned char     branch;
-	unsigned short    flags;
+	volatile unsigned short    flags;
 	struct list_link  timer_ll;
 	struct ip_node    *prev;
 	struct ip_node    *next;
diff --git a/modules_k/pike/pike_funcs.c b/modules_k/pike/pike_funcs.c
index a2c7b16f5..1d9340339 100644
--- a/modules_k/pike/pike_funcs.c
+++ b/modules_k/pike/pike_funcs.c
@@ -179,11 +179,15 @@ void clean_routine(unsigned int ticks , void *param)
 	/* DBG("DEBUG:pike:clean_routine:  entering (%d)\n",ticks); */
 	/* before locking check first if the list is not empty and if can
 	 * be at least one element removed */
-	if ( is_list_empty( timer ) || ll2ipnode(timer->next)->expires>ticks )
-		return;
+	if ( is_list_empty( timer )) return; /* quick exit */
 
 	/* get the expired elements */
 	lock_get( timer_lock );
+	/* check again for empty list */
+	if (is_list_empty(timer) || (ll2ipnode(timer->next)->expires>ticks )){
+		lock_release( timer_lock );
+		return;
+	}
 	check_and_split_timer( timer, ticks, &head, mask);
 	/*print_timer_list(timer);*/ /* debug */
 	lock_release( timer_lock );
@@ -291,7 +295,8 @@ void swap_routine( unsigned int ticks, void *param)
 		node = get_tree_branch(i);
 		if (node) {
 			lock_tree_branch( i );
-			refresh_node( node );
+			node = get_tree_branch(i); /* again, to avoid races */
+			if (node) refresh_node( node );
 			unlock_tree_branch( i );
 		}
 	}

