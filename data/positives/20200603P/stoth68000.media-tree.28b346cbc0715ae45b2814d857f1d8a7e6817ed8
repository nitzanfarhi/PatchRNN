commit 28b346cbc0715ae45b2814d857f1d8a7e6817ed8
Author: Neal Cardwell <ncardwell@google.com>
Date:   Tue Aug 30 11:55:23 2016 -0400

    tcp: fastopen: fix rcv_wup initialization for TFO server on SYN/data
    
    Yuchung noticed that on the first TFO server data packet sent after
    the (TFO) handshake, the server echoed the TCP timestamp value in the
    SYN/data instead of the timestamp value in the final ACK of the
    handshake. This problem did not happen on regular opens.
    
    The tcp_replace_ts_recent() logic that decides whether to remember an
    incoming TS value needs tp->rcv_wup to hold the latest receive
    sequence number that we have ACKed (latest tp->rcv_nxt we have
    ACKed). This commit fixes this issue by ensuring that a TFO server
    properly updates tp->rcv_wup to match tp->rcv_nxt at the time it sends
    a SYN/ACK for the SYN/data.
    
    Reported-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Soheil Hassas Yeganeh <soheil@google.com>
    Fixes: 168a8f58059a ("tcp: TCP Fast Open Server - main code path")
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/ipv4/tcp_fastopen.c b/net/ipv4/tcp_fastopen.c
index 54d9f9b0120f..62a5751d4fe1 100644
--- a/net/ipv4/tcp_fastopen.c
+++ b/net/ipv4/tcp_fastopen.c
@@ -226,6 +226,7 @@ static struct sock *tcp_fastopen_create_child(struct sock *sk,
 	tcp_fastopen_add_skb(child, skb);
 
 	tcp_rsk(req)->rcv_nxt = tp->rcv_nxt;
+	tp->rcv_wup = tp->rcv_nxt;
 	/* tcp_conn_request() is sending the SYNACK,
 	 * and queues the child into listener accept queue.
 	 */

