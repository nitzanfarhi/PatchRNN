commit ababae44108b0e94b58eef6cb5bd830bd040a47f
Author: Werner Pawlitschko <werner.pawlitschko@arcor.de>
Date:   Tue Oct 27 09:08:04 2015 +0900

    x86/ioapic: Prevent NULL pointer dereference in setup_ioapic_dest()
    
    Commit 4857c91f0d19 changed the way how irq affinity is setup in
    setup_ioapic_dest() from using the core helper function to
    unconditionally calling the irq_set_affinity() callback of the
    underlying irq chip.
    
    That results in a NULL pointer dereference for the rare case where the
    underlying irq chip is lapic_chip which has no irq_set_affinity()
    callback. lapic_chip is occasionally used for the timer interrupt (irq
    0).
    
    The fix is simple: Check the availability of the callback instead of
    calling it unconditionally.
    
    Fixes: 4857c91f0d19 "x86/ioapic: Force affinity setting in setup_ioapic_dest()"
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org

diff --git a/arch/x86/kernel/apic/io_apic.c b/arch/x86/kernel/apic/io_apic.c
index bb6bfc01cb82..4f2821527014 100644
--- a/arch/x86/kernel/apic/io_apic.c
+++ b/arch/x86/kernel/apic/io_apic.c
@@ -2547,7 +2547,9 @@ void __init setup_ioapic_dest(void)
 			mask = apic->target_cpus();
 
 		chip = irq_data_get_irq_chip(idata);
-		chip->irq_set_affinity(idata, mask, false);
+		/* Might be lapic_chip for irq 0 */
+		if (chip->irq_set_affinity)
+			chip->irq_set_affinity(idata, mask, false);
 	}
 }
 #endif

