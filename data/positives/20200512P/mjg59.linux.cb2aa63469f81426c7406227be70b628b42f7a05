commit cb2aa63469f81426c7406227be70b628b42f7a05
Author: John Stultz <john.stultz@linaro.org>
Date:   Mon Nov 24 20:35:45 2014 -0800

    time: Fix sign bug in NTP mult overflow warning
    
    In commit 6067dc5a8c2b ("time: Avoid possible NTP adjustment
    mult overflow") a new check was added to watch for adjustments
    that could cause a mult overflow.
    
    Unfortunately the check compares a signed with unsigned value
    and ignored the case where the adjustment was negative, which
    causes spurious warn-ons on some systems (and seems like it
    would result in problematic time adjustments there as well, due
    to the early return).
    
    Thus this patch adds a check to make sure the adjustment is
    positive before we check for an overflow, and resovles the issue
    in my testing.
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Debugged-by: pang.xunlei <pang.xunlei@linaro.org>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Link: http://lkml.kernel.org/r/1416890145-30048-1-git-send-email-john.stultz@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

diff --git a/kernel/time/timekeeping.c b/kernel/time/timekeeping.c
index 29a7d6709da1..2dc0646258ae 100644
--- a/kernel/time/timekeeping.c
+++ b/kernel/time/timekeeping.c
@@ -1330,7 +1330,7 @@ static __always_inline void timekeeping_apply_adjustment(struct timekeeper *tk,
 	 *
 	 * XXX - TODO: Doc ntp_error calculation.
 	 */
-	if (tk->tkr.mult + mult_adj < mult_adj) {
+	if ((mult_adj > 0) && (tk->tkr.mult + mult_adj < mult_adj)) {
 		/* NTP adjustment caused clocksource mult overflow */
 		WARN_ON_ONCE(1);
 		return;

