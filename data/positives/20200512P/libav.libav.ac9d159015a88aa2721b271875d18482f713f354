commit ac9d159015a88aa2721b271875d18482f713f354
Author: Martin Storsjö <martin@martin.st>
Date:   Thu Sep 12 12:10:18 2013 +0300

    proresdec: Properly make sure an index doesn't run past the limit
    
    If idx equaled num_coeffs - 1 on entry to the loop, the previous
    check failed to break out of the loop.
    
    Reported-by: Mateusz "j00ru" Jurczyk and Gynvael Coldwind
    CC: libav-stable@libav.org
    Signed-off-by: Martin Storsjö <martin@martin.st>

diff --git a/libavcodec/proresdec.c b/libavcodec/proresdec.c
index c13b76969..c3b480f18 100644
--- a/libavcodec/proresdec.c
+++ b/libavcodec/proresdec.c
@@ -496,7 +496,7 @@ static void unpack_alpha(GetBitContext *gb, uint16_t *dst, int num_coeffs,
                 dst[idx++] = alpha_val >> 6;
             else
                 dst[idx++] = (alpha_val << 2) | (alpha_val >> 6);
-            if (idx == num_coeffs - 1)
+            if (idx >= num_coeffs - 1)
                 break;
         } while (get_bits1(gb));
         val = get_bits(gb, 4);

