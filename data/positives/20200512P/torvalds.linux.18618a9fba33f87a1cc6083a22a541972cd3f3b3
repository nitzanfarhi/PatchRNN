commit 18618a9fba33f87a1cc6083a22a541972cd3f3b3
Author: Maya Erez <qca_merez@qca.qualcomm.com>
Date:   Wed Mar 8 13:52:14 2017 +0200

    wil6210: missing reinit_completion in HALP voting
    
    After setting HALP ICR bit, we keep it set until HALP unvote.
    Masking HALP ICR should protect the driver from hitting the HALP ICR
    over and over again. However, in case there is another MISC ICR
    we will read the HALP ICR and issue a completion. This can lead to
    a case where HALP voting is completed immediately, as the completion
    is already set.
    Reinit the HALP completion before the actual vote will clear previous
    completions and protect from such cases.
    
    Signed-off-by: Maya Erez <qca_merez@qca.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>

diff --git a/drivers/net/wireless/ath/wil6210/main.c b/drivers/net/wireless/ath/wil6210/main.c
index 21b7faca2c9b..dddde94f0356 100644
--- a/drivers/net/wireless/ath/wil6210/main.c
+++ b/drivers/net/wireless/ath/wil6210/main.c
@@ -1158,6 +1158,7 @@ void wil_halp_vote(struct wil6210_priv *wil)
 		    wil->halp.ref_cnt);
 
 	if (++wil->halp.ref_cnt == 1) {
+		reinit_completion(&wil->halp.comp);
 		wil6210_set_halp(wil);
 		rc = wait_for_completion_timeout(&wil->halp.comp, to_jiffies);
 		if (!rc) {

