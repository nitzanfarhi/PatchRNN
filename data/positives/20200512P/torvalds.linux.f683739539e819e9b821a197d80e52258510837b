commit f683739539e819e9b821a197d80e52258510837b
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Wed Mar 25 15:55:14 2015 -0700

    mm/pagewalk.c: prevent positive return value of walk_page_test() from being passed to callers
    
    walk_page_test() is purely pagewalk's internal stuff, and its positive
    return values are not intended to be passed to the callers of pagewalk.
    
    However, in the current code if the last vma in the do-while loop in
    walk_page_range() happens to return a positive value, it leaks outside
    walk_page_range().  So the user visible effect is invalid/unexpected
    return value (according to the reporter, mbind() causes it.)
    
    This patch fixes it simply by reinitializing the return value after
    checked.
    
    Another exposed interface, walk_page_vma(), already returns 0 for such
    cases so no problem.
    
    Fixes: fafaa4264eba ("pagewalk: improve vma handling")
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Signed-off-by: Kazutomo Yoshii <kazutomo.yoshii@gmail.com>
    Reported-by: Kazutomo Yoshii <kazutomo.yoshii@gmail.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/pagewalk.c b/mm/pagewalk.c
index 75c1f2878519..29f2f8b853ae 100644
--- a/mm/pagewalk.c
+++ b/mm/pagewalk.c
@@ -265,8 +265,15 @@ int walk_page_range(unsigned long start, unsigned long end,
 			vma = vma->vm_next;
 
 			err = walk_page_test(start, next, walk);
-			if (err > 0)
+			if (err > 0) {
+				/*
+				 * positive return values are purely for
+				 * controlling the pagewalk, so should never
+				 * be passed to the callers.
+				 */
+				err = 0;
 				continue;
+			}
 			if (err < 0)
 				break;
 		}

