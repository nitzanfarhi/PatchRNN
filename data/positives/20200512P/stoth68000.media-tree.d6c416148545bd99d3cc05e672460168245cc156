commit d6c416148545bd99d3cc05e672460168245cc156
Author: Chang Xiangzhong <changxiangzhong@gmail.com>
Date:   Thu Nov 21 22:56:28 2013 +0100

    net: sctp: find the correct highest_new_tsn in sack
    
    Function sctp_check_transmitted(transport t, ...) would iterate all of
    transport->transmitted queue and looking for the highest __newly__ acked tsn.
    The original algorithm would depend on the order of the assoc->transport_list
    (in function sctp_outq_sack line 1215 - 1226). The result might not be the
    expected due to the order of the tranport_list.
    
    Solution: checking if the exising is smaller than the new one before assigning
    
    Signed-off-by: Chang Xiangzhong <changxiangzhong@gmail.com>
    Acked-by: Vlad Yasevich <vyasevich@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/sctp/outqueue.c b/net/sctp/outqueue.c
index 94df75877869..abb6db008df1 100644
--- a/net/sctp/outqueue.c
+++ b/net/sctp/outqueue.c
@@ -1391,7 +1391,8 @@ static void sctp_check_transmitted(struct sctp_outq *q,
 			 */
 			if (!tchunk->tsn_gap_acked) {
 				tchunk->tsn_gap_acked = 1;
-				*highest_new_tsn_in_sack = tsn;
+				if (TSN_lt(*highest_new_tsn_in_sack, tsn))
+					*highest_new_tsn_in_sack = tsn;
 				bytes_acked += sctp_data_size(tchunk);
 				if (!tchunk->transport)
 					migrate_bytes += sctp_data_size(tchunk);

