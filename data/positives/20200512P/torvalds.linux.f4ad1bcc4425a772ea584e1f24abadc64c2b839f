commit f4ad1bcc4425a772ea584e1f24abadc64c2b839f
Author: Ralph Campbell <ralph.campbell@qlogic.com>
Date:   Fri Oct 26 08:02:39 2007 -0700

    IB/ipath: Fix race with ACK retry timeout list management
    
    When an ACK is received, the QP is removed from the timeout list and
    then if there are still pending send WQEs, the QP is put back on the
    timeout list. It is possible that another post send has put the QP on
    the timeout list thus, a check needs to be made before trying to do it
    again or the list is corrupted.
    
    Signed-off-by: Ralph Campbell <ralph.campbell@qlogic.com>
    Signed-off-by: Roland Dreier <rolandd@cisco.com>

diff --git a/drivers/infiniband/hw/ipath/ipath_rc.c b/drivers/infiniband/hw/ipath/ipath_rc.c
index 5c29b2bfea17..120a61b03bc4 100644
--- a/drivers/infiniband/hw/ipath/ipath_rc.c
+++ b/drivers/infiniband/hw/ipath/ipath_rc.c
@@ -959,8 +959,9 @@ static int do_rc_ack(struct ipath_qp *qp, u32 aeth, u32 psn, int opcode,
 		/* If this is a partial ACK, reset the retransmit timer. */
 		if (qp->s_last != qp->s_tail) {
 			spin_lock(&dev->pending_lock);
-			list_add_tail(&qp->timerwait,
-				      &dev->pending[dev->pending_index]);
+			if (list_empty(&qp->timerwait))
+				list_add_tail(&qp->timerwait,
+					&dev->pending[dev->pending_index]);
 			spin_unlock(&dev->pending_lock);
 			/*
 			 * If we get a partial ACK for a resent operation,

