commit 8df0020ac6fe236a4200664b023fa68ddef1abdd
Author: Evan Huus <eapache@gmail.com>
Date:   Sun Jan 20 02:44:32 2013 +0000

    Don't add the new block to the hash table if it is NULL, which is a
    valid non-error return from realloc if the new requested size is 0.
    
    svn path=/trunk/; revision=47171

diff --git a/epan/wmem/wmem_allocator_simple.c b/epan/wmem/wmem_allocator_simple.c
index cde0175b23..38c43e0fd8 100644
--- a/epan/wmem/wmem_allocator_simple.c
+++ b/epan/wmem/wmem_allocator_simple.c
@@ -70,7 +70,11 @@ wmem_simple_realloc(void *private_data, void *ptr, const size_t size)
          * instead of remove() because realloc has already reclaimed the old
          * block, and remove()ing it would call g_free() which we don't want. */
         g_hash_table_steal(allocator->block_table, ptr);
-        g_hash_table_insert(allocator->block_table, newptr, newptr);
+        /* realloc is allowed to return NULL if the requested size is 0, in
+         * which case we don't want to add back to the hash table */
+        if (newptr) {
+            g_hash_table_insert(allocator->block_table, newptr, newptr);
+        }
     }
 
     return newptr;

