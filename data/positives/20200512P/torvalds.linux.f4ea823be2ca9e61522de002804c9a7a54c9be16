commit f4ea823be2ca9e61522de002804c9a7a54c9be16
Author: John Stultz <john.stultz@linaro.org>
Date:   Mon Dec 16 21:07:52 2013 -0800

    staging: ion: Fix possible null pointer dereference
    
    The kbuild test robot reported:
    
    drivers/staging/android/ion/ion_system_heap.c:122 alloc_largest_available() error: potential null dereference 'info'.  (kmalloc returns null)
    
    Where the pointer returned from kmalloc goes unchecked for failure.
    
    This patch checks the return for NULL, and reworks the logic, as
    suggested by Colin, so we allocate the page_info structure first.
    
    Acked-by: Colin Cross <ccross@android.com>
    Cc: Android Kernel Team <kernel-team@android.com>
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/staging/android/ion/ion_system_heap.c b/drivers/staging/android/ion/ion_system_heap.c
index 144b22727505..7f0729130d65 100644
--- a/drivers/staging/android/ion/ion_system_heap.c
+++ b/drivers/staging/android/ion/ion_system_heap.c
@@ -108,6 +108,10 @@ static struct page_info *alloc_largest_available(struct ion_system_heap *heap,
 	struct page_info *info;
 	int i;
 
+	info = kmalloc(sizeof(struct page_info), GFP_KERNEL);
+	if (!info)
+		return NULL;
+
 	for (i = 0; i < num_orders; i++) {
 		if (size < order_to_size(orders[i]))
 			continue;
@@ -118,11 +122,12 @@ static struct page_info *alloc_largest_available(struct ion_system_heap *heap,
 		if (!page)
 			continue;
 
-		info = kmalloc(sizeof(struct page_info), GFP_KERNEL);
 		info->page = page;
 		info->order = orders[i];
 		return info;
 	}
+	kfree(info);
+
 	return NULL;
 }
 

