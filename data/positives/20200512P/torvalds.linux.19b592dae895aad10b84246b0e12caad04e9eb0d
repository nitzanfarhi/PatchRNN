commit 19b592dae895aad10b84246b0e12caad04e9eb0d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 9 17:05:35 2017 +0200

    ALSA: seq: Add sanity check for user-space pointer delivery
    
    The sequencer event may contain a user-space pointer with its
    SNDRV_SEQ_EXT_USRPTR bit, and we assure that its delivery is limited
    with non-atomic mode.  Otherwise the copy_from_user() may hit the
    fault and cause a problem.  Although the core code doesn't set such a
    flag (only set at snd_seq_write()), any wild driver may set it
    mistakenly and lead to an unexpected crash.
    
    This patch adds a sanity check of such events at the delivery core
    code to filter out the invalid invocation in the atomic mode.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/core/seq/seq_clientmgr.c b/sound/core/seq/seq_clientmgr.c
index ea2d0ae85bd3..f2343f63ba26 100644
--- a/sound/core/seq/seq_clientmgr.c
+++ b/sound/core/seq/seq_clientmgr.c
@@ -802,6 +802,10 @@ static int snd_seq_deliver_event(struct snd_seq_client *client, struct snd_seq_e
 		return -EMLINK;
 	}
 
+	if (snd_seq_ev_is_variable(event) &&
+	    snd_BUG_ON(atomic && (event->data.ext.len & SNDRV_SEQ_EXT_USRPTR)))
+		return -EINVAL;
+
 	if (event->queue == SNDRV_SEQ_ADDRESS_SUBSCRIBERS ||
 	    event->dest.client == SNDRV_SEQ_ADDRESS_SUBSCRIBERS)
 		result = deliver_to_subscribers(client, event, atomic, hop);

