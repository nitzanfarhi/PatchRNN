commit 6e6823d17b157f185be09f4c70181299f9273f0b
Author: Torben Hohn <torbenh@gmx.de>
Date:   Thu Mar 3 18:26:14 2011 +0100

    posix-clocks: Check write permissions in posix syscalls
    
    pc_clock_settime() and pc_clock_adjtime() do not check whether the fd
    was opened in write mode, so a clock can be set with a read only fd.
    
    [ tglx: We deliberately do not return -EPERM as we want this to be
            distingushable from the capability based permission check ]
    
    Signed-off-by: Torben Hohn <torbenh@gmx.de>
    LKML-Reference: <1299173174-348-4-git-send-email-torbenh@gmx.de>
    Cc: Richard Cochran <richard.cochran@omicron.at>
    Cc: John Stultz <johnstul@us.ibm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>

diff --git a/kernel/time/posix-clock.c b/kernel/time/posix-clock.c
index 04498cbf6002..25028dd4fa18 100644
--- a/kernel/time/posix-clock.c
+++ b/kernel/time/posix-clock.c
@@ -287,11 +287,16 @@ static int pc_clock_adjtime(clockid_t id, struct timex *tx)
 	if (err)
 		return err;
 
+	if ((cd.fp->f_mode & FMODE_WRITE) == 0) {
+		err = -EACCES;
+		goto out;
+	}
+
 	if (cd.clk->ops.clock_adjtime)
 		err = cd.clk->ops.clock_adjtime(cd.clk, tx);
 	else
 		err = -EOPNOTSUPP;
-
+out:
 	put_clock_desc(&cd);
 
 	return err;
@@ -344,11 +349,16 @@ static int pc_clock_settime(clockid_t id, const struct timespec *ts)
 	if (err)
 		return err;
 
+	if ((cd.fp->f_mode & FMODE_WRITE) == 0) {
+		err = -EACCES;
+		goto out;
+	}
+
 	if (cd.clk->ops.clock_settime)
 		err = cd.clk->ops.clock_settime(cd.clk, ts);
 	else
 		err = -EOPNOTSUPP;
-
+out:
 	put_clock_desc(&cd);
 
 	return err;

