commit e37609bb36f706c954e82e580e2e790e9d5caef8
Author: Piotr Kwapulinski <kwapulinski.piotr@gmail.com>
Date:   Wed Jun 24 16:58:39 2015 -0700

    mm/mmap.c: optimization of do_mmap_pgoff function
    
    The simple check for zero length memory mapping may be performed
    earlier.  So that in case of zero length memory mapping some unnecessary
    code is not executed at all.  It does not make the code less readable
    and saves some CPU cycles.
    
    Signed-off-by: Piotr Kwapulinski <kwapulinski.piotr@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.cz>
    Acked-by: Rik van Riel <riel@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

diff --git a/mm/mmap.c b/mm/mmap.c
index bb50cacc3ea5..aa632ade2be7 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -1258,6 +1258,9 @@ unsigned long do_mmap_pgoff(struct file *file, unsigned long addr,
 
 	*populate = 0;
 
+	if (!len)
+		return -EINVAL;
+
 	/*
 	 * Does the application expect PROT_READ to imply PROT_EXEC?
 	 *
@@ -1268,9 +1271,6 @@ unsigned long do_mmap_pgoff(struct file *file, unsigned long addr,
 		if (!(file && (file->f_path.mnt->mnt_flags & MNT_NOEXEC)))
 			prot |= PROT_EXEC;
 
-	if (!len)
-		return -EINVAL;
-
 	if (!(flags & MAP_FIXED))
 		addr = round_hint_to_min(addr);
 

