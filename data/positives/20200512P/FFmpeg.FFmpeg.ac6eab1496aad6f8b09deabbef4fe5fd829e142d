commit ac6eab1496aad6f8b09deabbef4fe5fd829e142d
Author: Mans Rullgard <mans@mansr.com>
Date:   Sat Oct 8 02:09:42 2011 +0100

    put_bits: fix invalid shift by 32 in flush_put_bits()
    
    If flush_put_bits() is called when the 32-bit buffer is empty,
    e.g. after writing a multiple of 32 bits, and invalid shift by
    32 is performed.  Since flush_put_bits() is called infrequently,
    this additional check should have negligible performance impact.
    
    Signed-off-by: Mans Rullgard <mans@mansr.com>

diff --git a/libavcodec/put_bits.h b/libavcodec/put_bits.h
index c10dd818f0..f77cfbba97 100644
--- a/libavcodec/put_bits.h
+++ b/libavcodec/put_bits.h
@@ -78,7 +78,8 @@ static inline int put_bits_count(PutBitContext *s)
 static inline void flush_put_bits(PutBitContext *s)
 {
 #ifndef BITSTREAM_WRITER_LE
-    s->bit_buf<<= s->bit_left;
+    if (s->bit_left < 32)
+        s->bit_buf<<= s->bit_left;
 #endif
     while (s->bit_left < 32) {
         /* XXX: should test end of buffer */

