commit deab72d3797e3d4340c7ddf968234b8c3d01d7a5
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Wed Mar 16 16:32:39 2011 -0400

    GFS2: write_end error path fails to unlock transaction lock
    
    I did an audit of gfs2's transaction glock for bugzilla bug
    658619 and ran across this:
    
    In function gfs2_write_end, in the unlikely event that
    gfs2_meta_inode_buffer returns an error, the code may forget
    to unlock the transaction lock because the "failed" label
    appears after the call to function gfs2_trans_end.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>

diff --git a/fs/gfs2/aops.c b/fs/gfs2/aops.c
index c71995b111bf..0f5c4f9d5d62 100644
--- a/fs/gfs2/aops.c
+++ b/fs/gfs2/aops.c
@@ -884,8 +884,8 @@ static int gfs2_write_end(struct file *file, struct address_space *mapping,
 	}
 
 	brelse(dibh);
-	gfs2_trans_end(sdp);
 failed:
+	gfs2_trans_end(sdp);
 	if (al) {
 		gfs2_inplace_release(ip);
 		gfs2_quota_unlock(ip);

