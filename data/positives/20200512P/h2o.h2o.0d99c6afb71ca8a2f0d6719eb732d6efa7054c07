commit 0d99c6afb71ca8a2f0d6719eb732d6efa7054c07
Author: Frederik Deweerdt <fdeweerdt@fastly.com>
Date:   Mon Apr 3 08:40:27 2017 -0700

    Use H2O_UINT64_LONGEST_HEX_STR instead of a handcoded length for _chunk_len_str
    
    We also provision a byte for \0, this was a bug in the existing code
    where we would have truncated the size if it reached the maximum number
    of hex characters

diff --git a/include/h2o/string_.h b/include/h2o/string_.h
index 36e4842f..a96c46c4 100644
--- a/include/h2o/string_.h
+++ b/include/h2o/string_.h
@@ -39,6 +39,7 @@ extern "C" {
 #define H2O_UINT32_LONGEST_STR "4294967295"
 #define H2O_INT64_LONGEST_STR "-9223372036854775808"
 #define H2O_UINT64_LONGEST_STR "18446744073709551615"
+#define H2O_UINT64_LONGEST_HEX_STR "FFFFFFFFFFFFFFFF"
 
 /**
  * duplicates given string
diff --git a/lib/common/http1client.c b/lib/common/http1client.c
index 57e6de67..92592b1f 100644
--- a/lib/common/http1client.c
+++ b/lib/common/http1client.c
@@ -53,7 +53,7 @@ struct st_h2o_http1client_private_t {
     } _body_decoder;
     h2o_http1client_write_body_chunk_done _write_body_chunk_done;
     void *_write_body_chunk_done_ctx;
-    char _chunk_len_str[18]; /* SIZE_MAX in hex + CRLF */
+    char _chunk_len_str[(sizeof(H2O_UINT64_LONGEST_HEX_STR) - 1) + 2 + 1]; /* SIZE_MAX in hex + CRLF + '\0' */
     h2o_buffer_t *_body_buf;
     h2o_buffer_t *_body_buf_in_flight;
     unsigned _is_chunked : 1;

