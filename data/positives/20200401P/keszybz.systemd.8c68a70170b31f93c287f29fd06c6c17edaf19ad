commit 8c68a70170b31f93c287f29fd06c6c17edaf19ad
Author: Harald Hoyer <harald@redhat.com>
Date:   Wed Apr 17 18:03:39 2013 +0200

    fixed statfs.f_type signed vs unsigned comparisons
    
    statfs.f_type is signed but the filesystem magics are unsigned.
    Casting the magics to signed will not make the signed.
    
    Problem seen on big-endian 64bit s390x with __fsword_t 8 bytes.
    
    Casting statfs.f_type to unsigned on the other hand will get us what we
    need.
    
    https://bugzilla.redhat.com/show_bug.cgi?id=953217

diff --git a/src/journal/sd-journal.c b/src/journal/sd-journal.c
index cc11ad9b5..ba6c1cd30 100644
--- a/src/journal/sd-journal.c
+++ b/src/journal/sd-journal.c
@@ -1248,11 +1248,11 @@ static void check_network(sd_journal *j, int fd) {
                 return;
 
         j->on_network =
-                (long)sfs.f_type == (long)CIFS_MAGIC_NUMBER ||
-                sfs.f_type == CODA_SUPER_MAGIC ||
-                sfs.f_type == NCP_SUPER_MAGIC ||
-                sfs.f_type == NFS_SUPER_MAGIC ||
-                sfs.f_type == SMB_SUPER_MAGIC;
+                (unsigned) sfs.f_type == CIFS_MAGIC_NUMBER ||
+                (unsigned) sfs.f_type == CODA_SUPER_MAGIC ||
+                (unsigned) sfs.f_type == NCP_SUPER_MAGIC ||
+                (unsigned) sfs.f_type == NFS_SUPER_MAGIC ||
+                (unsigned) sfs.f_type == SMB_SUPER_MAGIC;
 }
 
 static int add_file(sd_journal *j, const char *prefix, const char *filename) {
diff --git a/src/readahead/readahead-collect.c b/src/readahead/readahead-collect.c
index 03583928a..6d7db4fae 100644
--- a/src/readahead/readahead-collect.c
+++ b/src/readahead/readahead-collect.c
@@ -505,7 +505,7 @@ done:
         on_ssd = fs_on_ssd(root) > 0;
         log_debug("On SSD: %s", yes_no(on_ssd));
 
-        on_btrfs = statfs(root, &sfs) >= 0 && (long) sfs.f_type == (long) BTRFS_SUPER_MAGIC;
+        on_btrfs = statfs(root, &sfs) >= 0 && (unsigned) sfs.f_type == BTRFS_SUPER_MAGIC;
         log_debug("On btrfs: %s", yes_no(on_btrfs));
 
         if (asprintf(&pack_fn_new, "%s/.readahead.new", root) < 0) {
diff --git a/src/shared/util.c b/src/shared/util.c
index a55b27f87..3a6efe3fc 100644
--- a/src/shared/util.c
+++ b/src/shared/util.c
@@ -2779,8 +2779,8 @@ int rm_rf_children_dangerous(int fd, bool only_dirs, bool honour_sticky, struct
 
 static int is_temporary_fs(struct statfs *s) {
         assert(s);
-        return s->f_type == TMPFS_MAGIC ||
-                (long)s->f_type == (long)RAMFS_MAGIC;
+        return (unsigned) s->f_type == TMPFS_MAGIC ||
+                (unsigned) s->f_type == RAMFS_MAGIC;
 }
 
 int rm_rf_children(int fd, bool only_dirs, bool honour_sticky, struct stat *root_dev) {

