commit 78bb9697e2c4b62c426f1a2571c293a2e4463adf
Author: Vijay Badawadagi <bvijay@ti.com>
Date:   Wed Aug 10 10:18:33 2011 -0500

    drivers:misc: ti-st: fail-safe on wrong pkt type
    
    Texas Instrument's shared transport driver interpret incoming data from the
    UART based on the various protocol drivers registered to the driver such as
    btwilink driver or FM or GPS driver which provide logical channel IDs.
    
    In case of bad-behavior from chip such as HCI Event response for a GPS command
    or a HCI Event (h/w error event) for a FM response & In case of bad-behavior
    from UART driver such as dropping data bytes a fail-safe is required to avoid
    kernel panic.
    
    Signed-off-by: Pavan Savoy <pavan_savoy@ti.com>
    Signed-off-by: Vijay Badawadagi <bvijay@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/misc/ti-st/st_core.c b/drivers/misc/ti-st/st_core.c
index c8e335db3451..1f973ce3043f 100644
--- a/drivers/misc/ti-st/st_core.c
+++ b/drivers/misc/ti-st/st_core.c
@@ -338,6 +338,12 @@ void st_int_recv(void *disc_data,
 			/* Unknow packet? */
 		default:
 			type = *ptr;
+			if (st_gdata->list[type] == NULL) {
+				pr_err("chip/interface misbehavior dropping"
+					" frame starting with 0x%02x", type);
+				goto done;
+
+			}
 			st_gdata->rx_skb = alloc_skb(
 					st_gdata->list[type]->max_frame_size,
 					GFP_ATOMIC);
@@ -354,6 +360,7 @@ void st_int_recv(void *disc_data,
 		ptr++;
 		count--;
 	}
+done:
 	spin_unlock_irqrestore(&st_gdata->lock, flags);
 	pr_debug("done %s", __func__);
 	return;

