commit 1df6ddede10a1cacbf1da4cdfca3342510db1882
Author: David Hildenbrand <david@redhat.com>
Date:   Fri Apr 7 10:50:18 2017 +0200

    KVM: x86: race between KVM_SET_GSI_ROUTING and KVM_CREATE_IRQCHIP
    
    Avoid races between KVM_SET_GSI_ROUTING and KVM_CREATE_IRQCHIP by taking
    the kvm->lock when setting up routes.
    
    If KVM_CREATE_IRQCHIP fails, KVM_SET_GSI_ROUTING could have already set
    up routes pointing at pic/ioapic, being silently removed already.
    
    Also, as a side effect, this patch makes sure that KVM_SET_GSI_ROUTING
    and KVM_CAP_SPLIT_IRQCHIP cannot run in parallel.
    
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index f489167839c4..357e67cba32e 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -3069,8 +3069,11 @@ static long kvm_vm_ioctl(struct file *filp,
 					   routing.nr * sizeof(*entries)))
 				goto out_free_irq_routing;
 		}
+		/* avoid races with KVM_CREATE_IRQCHIP on x86 */
+		mutex_lock(&kvm->lock);
 		r = kvm_set_irq_routing(kvm, entries, routing.nr,
 					routing.flags);
+		mutex_unlock(&kvm->lock);
 out_free_irq_routing:
 		vfree(entries);
 		break;

