commit d95fd91c1ac1f551909ccdc4fcc80159521d0ef5
Author: Fan Li <fanofcode.li@samsung.com>
Date:   Tue Sep 13 11:35:42 2016 +0800

    f2fs: exclude special cases for f2fs_move_file_range
    
    When src and dst is the same file, and the latter part of source region
    overlaps with the former part of destination region, current implement
    will overwrite data which hasn't been moved yet and truncate data in
    overlapped region.
    This patch return -EINVAL when such cases occur and return 0 when
    source region and destination region is actually the same part of
    the same file.
    
    Signed-off-by: Fan li <fanofcode.li@samsung.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

diff --git a/fs/f2fs/file.c b/fs/f2fs/file.c
index 40fe72e5147c..d400380a8630 100644
--- a/fs/f2fs/file.c
+++ b/fs/f2fs/file.c
@@ -2092,6 +2092,13 @@ static int f2fs_move_file_range(struct file *file_in, loff_t pos_in,
 	if (f2fs_encrypted_inode(src) || f2fs_encrypted_inode(dst))
 		return -EOPNOTSUPP;
 
+	if (src == dst) {
+		if (pos_in == pos_out)
+			return 0;
+		if (pos_out > pos_in && pos_out < pos_in + len)
+			return -EINVAL;
+	}
+
 	inode_lock(src);
 	if (src != dst) {
 		if (!inode_trylock(dst)) {

