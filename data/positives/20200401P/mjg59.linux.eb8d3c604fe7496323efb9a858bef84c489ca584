commit eb8d3c604fe7496323efb9a858bef84c489ca584
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Wed Jun 10 12:43:02 2009 -0700

    devres: WARN() and return, don't crash on device_del() of uninitialized device
    
    I just debugged an obscure crash caused by a device_del() of a all NULL'd
    out struct device (in usb-serial) and found that a patch like this one would
    have saved me time (in addition to improved chances of a bug report from
    users hitting similar driver bugs).
    
    [akpm@linux-foundation.org: cleanup]
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Kay Sievers <kay.sievers@vrfy.org>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/base/devres.c b/drivers/base/devres.c
index e8beb8e5b626..05dd307e8f02 100644
--- a/drivers/base/devres.c
+++ b/drivers/base/devres.c
@@ -428,6 +428,9 @@ int devres_release_all(struct device *dev)
 {
 	unsigned long flags;
 
+	/* Looks like an uninitialized device structure */
+	if (WARN_ON(dev->devres_head.next == NULL))
+		return -ENODEV;
 	spin_lock_irqsave(&dev->devres_lock, flags);
 	return release_nodes(dev, dev->devres_head.next, &dev->devres_head,
 			     flags);

