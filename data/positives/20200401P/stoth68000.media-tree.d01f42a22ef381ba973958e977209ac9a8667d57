commit d01f42a22ef381ba973958e977209ac9a8667d57
Author: Eric Lescouet <lescouet@virtuallogix.com>
Date:   Sat Apr 24 02:55:24 2010 +0200

    staging: usbip: Fix deadlock
    
    When detaching a port from the client side (usbip --detach 0),
    the event thread, on the server side, is going to deadlock.
    The "eh" server thread is getting USBIP_EH_RESET event and calls:
      -> stub_device_reset() -> usb_reset_device()
    the USB framework is then calling back _in the same "eh" thread_ :
      -> stub_disconnect() -> usbip_stop_eh() -> wait_for_completion()
    the "eh" thread is being asleep forever, waiting for its own completion.
    This patch checks if "eh" is the current thread, in usbip_stop_eh().
    
    Signed-off-by: Eric Lescouet <eric@lescouet.org>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

diff --git a/drivers/staging/usbip/usbip_event.c b/drivers/staging/usbip/usbip_event.c
index 6da1021e8a65..a2566f1075d5 100644
--- a/drivers/staging/usbip/usbip_event.c
+++ b/drivers/staging/usbip/usbip_event.c
@@ -117,6 +117,9 @@ void usbip_stop_eh(struct usbip_device *ud)
 {
 	struct usbip_task *eh = &ud->eh;
 
+	if (eh->thread == current)
+		return; /* do not wait for myself */
+
 	wait_for_completion(&eh->thread_done);
 	usbip_dbg_eh("usbip_eh has finished\n");
 }

