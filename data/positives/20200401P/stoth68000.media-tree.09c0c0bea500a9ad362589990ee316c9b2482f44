commit 09c0c0bea500a9ad362589990ee316c9b2482f44
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Tue Dec 1 10:18:03 2015 -0800

    IB/srp: Fix possible send queue overflow
    
    When using work request based memory registration (fast_reg)
    we must reserve SQ entries for registration and invalidation
    in addition to send operations. Each IO consumes 3 SQ entries
    (registration, send, invalidation) so we need to allocate 3x
    larger send-queue instead of 2x.
    
    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Doug Ledford <dledford@redhat.com>

diff --git a/drivers/infiniband/ulp/srp/ib_srp.c b/drivers/infiniband/ulp/srp/ib_srp.c
index a074dad28bab..c7a95d2dc164 100644
--- a/drivers/infiniband/ulp/srp/ib_srp.c
+++ b/drivers/infiniband/ulp/srp/ib_srp.c
@@ -488,7 +488,7 @@ static int srp_create_ch_ib(struct srp_rdma_ch *ch)
 	struct ib_qp *qp;
 	struct ib_fmr_pool *fmr_pool = NULL;
 	struct srp_fr_pool *fr_pool = NULL;
-	const int m = 1 + dev->use_fast_reg;
+	const int m = dev->use_fast_reg ? 3 : 1;
 	struct ib_cq_init_attr cq_attr = {};
 	int ret;
 

