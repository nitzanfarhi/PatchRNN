commit 98ec286e016a028678cc943b1a1f87668ad447c8
Author: Lars Ellenberg <lars.ellenberg@linbit.com>
Date:   Thu Jan 21 19:33:14 2010 +0100

    drbd: fix max_segment_size initialization
    
    blk_queue_make_request() internally calls blk_set_default_limits(),
    so calling blk_queue_max_segment_size() before is useless.
    Ergo: move the call to blk_queue_max_segment_size() down a few lines.
    
    Impact:
    If, after a fresh modprobe, you first connect a Diskless drbd,
    then attach, this could result in a DRBD Protocol Error at first.
    The next connection attempt would then succeeded.
    
    Signed-off-by: Philipp Reisner <philipp.reisner@linbit.com>
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>

diff --git a/drivers/block/drbd/drbd_main.c b/drivers/block/drbd/drbd_main.c
index e898ad9eb1c3..ab871e00ffc5 100644
--- a/drivers/block/drbd/drbd_main.c
+++ b/drivers/block/drbd/drbd_main.c
@@ -2973,7 +2973,6 @@ struct drbd_conf *drbd_new_device(unsigned int minor)
 		goto out_no_q;
 	mdev->rq_queue = q;
 	q->queuedata   = mdev;
-	blk_queue_max_segment_size(q, DRBD_MAX_SEGMENT_SIZE);
 
 	disk = alloc_disk(1);
 	if (!disk)
@@ -2997,6 +2996,7 @@ struct drbd_conf *drbd_new_device(unsigned int minor)
 	q->backing_dev_info.congested_data = mdev;
 
 	blk_queue_make_request(q, drbd_make_request_26);
+	blk_queue_max_segment_size(q, DRBD_MAX_SEGMENT_SIZE);
 	blk_queue_bounce_limit(q, BLK_BOUNCE_ANY);
 	blk_queue_merge_bvec(q, drbd_merge_bvec);
 	q->queue_lock = &mdev->req_lock; /* needed since we use */

