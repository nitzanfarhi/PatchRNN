commit 4a6f0941c13ac6a197bb787e238ddbc12120b641
Author: Andrew Morrow <acm@10gen.com>
Date:   Mon Aug 19 16:57:23 2013 -0400

    SERVER-10490 SERVER-375 Add static assertions for overflow safe algos

diff --git a/src/mongo/util/safe_num.cpp b/src/mongo/util/safe_num.cpp
index 4b26ca4f3e..90578896ee 100644
--- a/src/mongo/util/safe_num.cpp
+++ b/src/mongo/util/safe_num.cpp
@@ -14,6 +14,7 @@
  */
 
 #include <sstream>
+#include <boost/static_assert.hpp>
 
 #include "mongo/pch.h" // for malloc/realloc/INFINITY pulled from bson
 
@@ -163,6 +164,9 @@ namespace mongo {
             // integers. Then, if we fall within the allowable range of int, we downcast,
             // otherwise, we retain the 64-bit result.
 
+            // This algorithm is only correct if sizeof(long long) > sizeof(int)
+            BOOST_STATIC_ASSERT(sizeof(long long) > sizeof(int));
+
             const long long int result =
                 static_cast<long long int>(lInt32) +
                 static_cast<long long int>(rInt32);
@@ -204,6 +208,9 @@ namespace mongo {
             // integers. Then, if we fall within the allowable range of int, we downcast,
             // otherwise, we retain the 64-bit result.
 
+            // This algorithm is only correct if sizeof(long long) >= (2 * sizeof(int))
+            BOOST_STATIC_ASSERT(sizeof(long long) >= (2 * sizeof(int)));
+
             const long long int result =
                 static_cast<long long int>(lInt32) *
                 static_cast<long long int>(rInt32);

