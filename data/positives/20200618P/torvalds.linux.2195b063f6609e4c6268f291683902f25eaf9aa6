commit 2195b063f6609e4c6268f291683902f25eaf9aa6
Author: Wang YanQing <udknight@gmail.com>
Date:   Tue May 7 11:27:33 2013 +0800

    ALSA: HDA: Fix Oops caused by dereference NULL pointer
    
    The interrupt handler azx_interrupt will call azx_update_rirb,
    which may call snd_hda_queue_unsol_event, snd_hda_queue_unsol_event
    will dereference chip->bus pointer.
    
    The problem is we alloc chip->bus in azx_codec_create
    which will be called after we enable IRQ and enable unsolicited
    event in azx_probe.
    
    This will cause Oops due dereference NULL pointer. I meet it, good luck:)
    
    [Rearranged the NULL check before the tracepoint and added another
     NULL check of bus->workq -- tiwai]
    
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

diff --git a/sound/pci/hda/hda_codec.c b/sound/pci/hda/hda_codec.c
index 6f9b64700f6e..86674f67abd1 100644
--- a/sound/pci/hda/hda_codec.c
+++ b/sound/pci/hda/hda_codec.c
@@ -681,6 +681,9 @@ int snd_hda_queue_unsol_event(struct hda_bus *bus, u32 res, u32 res_ex)
 	struct hda_bus_unsolicited *unsol;
 	unsigned int wp;
 
+	if (!bus || !bus->workq)
+		return 0;
+
 	trace_hda_unsol_event(bus, res, res_ex);
 	unsol = bus->unsol;
 	if (!unsol)

