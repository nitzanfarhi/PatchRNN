commit 0eda06c7c17ae48d7db69beef57f6e2b20bc3c72
Author: Al Cooper <alcooperx@gmail.com>
Date:   Thu Sep 11 13:55:49 2014 +0300

    usb: xhci: Fix OOPS in xhci error handling code
    
    The xhci driver will OOPS on resume from S2/S3 if dma_alloc_coherent()
    is out of memory. This is a result of two things:
    1. xhci_mem_cleanup() in xhci-mem.c free's xhci->lpm_command if
    it's not NULL, but doesn't set it to NULL after the free.
    2. xhci_mem_cleanup() is called twice on resume, once for normal
    restart and once from xhci_mem_init() if dma_alloc_coherent() fails,
    resulting in a free of xhci->lpm_command that has already been freed.
    The fix is to set xhci->lpm_command to NULL after freeing it.
    
    Signed-off-by: Al Cooper <alcooperx@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/usb/host/xhci-mem.c b/drivers/usb/host/xhci-mem.c
index 7432a52323e0..8936211b161d 100644
--- a/drivers/usb/host/xhci-mem.c
+++ b/drivers/usb/host/xhci-mem.c
@@ -1812,6 +1812,7 @@ void xhci_mem_cleanup(struct xhci_hcd *xhci)
 
 	if (xhci->lpm_command)
 		xhci_free_command(xhci, xhci->lpm_command);
+	xhci->lpm_command = NULL;
 	if (xhci->cmd_ring)
 		xhci_ring_free(xhci, xhci->cmd_ring);
 	xhci->cmd_ring = NULL;

