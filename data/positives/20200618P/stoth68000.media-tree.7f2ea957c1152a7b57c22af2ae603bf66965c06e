commit 7f2ea957c1152a7b57c22af2ae603bf66965c06e
Author: Ondrej Zary <linux@rainbow-software.org>
Date:   Mon Aug 24 21:37:25 2015 +0200

    tridentfb: fix hang on Blade3D with CONFIG_CC_OPTIMIZE_FOR_SIZE
    
    When the kernel is compiled with -Os (CONFIG_CC_OPTIMIZE_FOR_SIZE), tridentfb
    hangs the machine upon load with Blade3D cards unless acceleration is disabled.
    
    This is caused by memcpy() which copies data byte-by-byte (rep movsb) when
    compiled with -Os. The card does not like that - it requires 32-bit access.
    
    Use iowrite_32() instead.
    
    Signed-off-by: Ondrej Zary <linux@rainbow-software.org>
    Acked-by: Krzysztof Helt <krzysztof.h1@wp.pl>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>

diff --git a/drivers/video/fbdev/tridentfb.c b/drivers/video/fbdev/tridentfb.c
index 7ed9a227f5ea..742971304717 100644
--- a/drivers/video/fbdev/tridentfb.c
+++ b/drivers/video/fbdev/tridentfb.c
@@ -226,7 +226,7 @@ static void blade_image_blit(struct tridentfb_par *par, const char *data,
 	writemmr(par, DST1, point(x, y));
 	writemmr(par, DST2, point(x + w - 1, y + h - 1));
 
-	memcpy(par->io_virt + 0x10000, data, 4 * size);
+	iowrite32_rep(par->io_virt + 0x10000, data, size);
 }
 
 static void blade_copy_rect(struct tridentfb_par *par,

