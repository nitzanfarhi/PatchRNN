commit f2a76e0b0a6033f1041b79c12aacf1fc43acba21
Author: cwu <cwu@sourcefire.com>
Date:   Wed Feb 13 14:41:54 2013 -0800

     fix CID# 10534

diff --git a/sigtool/sigtool.c b/sigtool/sigtool.c
index 40eff5913..fc410c429 100644
--- a/sigtool/sigtool.c
+++ b/sigtool/sigtool.c
@@ -2073,6 +2073,9 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 	unsigned int i, len = 0, hlen, negative, altnum, alttype;
 	char *buff;
 
+    
+    hexcpy = NULL;
+    buff = NULL;
 
     hexcpy = strdup(hex);
     if(!hexcpy) {
@@ -2087,6 +2090,7 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 	buff = calloc(strlen(hex) + 512, sizeof(char));
 	if(!buff) {
 	    mprintf("!decodehexspecial: Can't allocate memory for buff\n");
+	    free(hexcpy);
 	    return NULL;
 	}
 	start = hexcpy;
@@ -2095,6 +2099,8 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 	    *pt++ = 0;
 	    if(!start) {
 		mprintf("!decodehexspecial: Unexpected EOL\n");
+		free(hexcpy);
+		free(buff);
 		return NULL;
 	    }
 	    if(pt >= hexcpy + 2) {
@@ -2106,6 +2112,7 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 	    if(!(decoded = decodehexstr(start, &hlen))) {
 		mprintf("!Decoding failed (1): %s\n", pt);
 		free(hexcpy);
+		free(buff);
 		return NULL;
 	    }
 	    memcpy(&buff[len], decoded, hlen);
@@ -2115,6 +2122,7 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 	    if(!(start = strchr(pt, ')'))) {
 		mprintf("!decodehexspecial: Missing closing parethesis\n");
 		free(hexcpy);
+		free(buff);
 		return NULL;
 	    }
 
@@ -2122,6 +2130,7 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 	    if(!strlen(pt)) {
 		mprintf("!decodehexspecial: Empty block\n");
 		free(hexcpy);
+		free(buff);
 		return NULL;
 	    }
 
@@ -2162,6 +2171,7 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 		if(!altnum) {
 		    mprintf("!decodehexspecial: Empty block\n");
 		    free(hexcpy);
+		    free(buff);
 		    return NULL;
 		}
 		altnum++;
@@ -2183,12 +2193,14 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 		for(i = 0; i < altnum; i++) {
 		    if(!(h = cli_strtok(pt, i, "|"))) {
 			free(hexcpy);
+			free(buff);
 			return NULL;
 		    }
 
 		    if(!(c = cli_hex2str(h))) {
 			free(h);
 			free(hexcpy);
+			free(buff);
 			return NULL;
 		    }
 
@@ -2208,6 +2220,7 @@ static char *decodehexspecial(const char *hex, unsigned int *dlen)
 	if(start) {
 	    if(!(decoded = decodehexstr(start, &hlen))) {
 		mprintf("!Decoding failed (2)\n");
+		free(buff);
 		free(hexcpy);
 		return NULL;
 	    }

