commit f372cb59f9100196d773d2bee15768ce046f5472
Author: Vasil Dimov <vasil.dimov@oracle.com>
Date:   Wed May 10 08:42:58 2017 +0300

    Avoid calling memcmp() with NULL arguments even if length == 0
    
    memcmp(ptr1, ptr2, length) produces an UBSAN warning that the pointers
    are NULL even if length is 0. Avoid this call and proceed as if the
    strings are equal if length == 0 (memcmp() with length 0 returns 0
    anyway, so this is a non-functional change).
    
    WL#8117 Compact In-Memory Temporary Tables

diff --git a/storage/innmem/include/innmem/cell.h b/storage/innmem/include/innmem/cell.h
index 0c41d35be99..66199c65c81 100644
--- a/storage/innmem/include/innmem/cell.h
+++ b/storage/innmem/include/innmem/cell.h
@@ -216,7 +216,8 @@ inline int Cell::compare(const Field& field, const CHARSET_INFO* cs,
   /* If both cells' data is identical, then no need to use the expensive
    * comparisons below because we know that they will report equality. */
   if (lhs.m_data_length == rhs.m_data_length &&
-      memcmp(lhs.m_data, rhs.m_data, lhs.m_data_length) == 0) {
+      (lhs.m_data_length == 0 ||
+       memcmp(lhs.m_data, rhs.m_data, lhs.m_data_length) == 0)) {
     return 0;
   }
 

