commit cf008ac8c3c5d582562d88ad89020daef3e64dcb
Author: Suhas Daftuar <sdaftuar@gmail.com>
Date:   Wed Jan 28 13:48:36 2015 -0500

    Acquire CCheckQueue's lock to avoid race condition
    
    This fixes a potential race condition in the CCheckQueueControl constructor,
    which was looking directly at data in CCheckQueue without acquiring its lock.
    
    Remove the now-unnecessary friendship for CCheckQueueControl

diff --git a/src/checkqueue.h b/src/checkqueue.h
index b8e2a17c7..7f6eae650 100644
--- a/src/checkqueue.h
+++ b/src/checkqueue.h
@@ -161,7 +161,12 @@ public:
     {
     }
 
-    friend class CCheckQueueControl<T>;
+    bool IsIdle()
+    {
+        boost::unique_lock<boost::mutex> lock(mutex);
+        return (nTotal == nIdle && nTodo == 0 && fAllOk == true);
+    }
+
 };
 
 /** 
@@ -180,9 +185,8 @@ public:
     {
         // passed queue is supposed to be unused, or NULL
         if (pqueue != NULL) {
-            assert(pqueue->nTotal == pqueue->nIdle);
-            assert(pqueue->nTodo == 0);
-            assert(pqueue->fAllOk == true);
+            bool isIdle = pqueue->IsIdle();
+            assert(isIdle);
         }
     }
 

