commit 94007751bb02797ba87bac7aacee2731ac2039a3
Author: NeilBrown <neilb@suse.de>
Date:   Sat Sep 10 17:20:21 2011 +1000

    Avoid dereferencing a 'request_queue' after last close.
    
    On the last close of an 'md' device which as been stopped, the device
    is destroyed and in particular the request_queue is freed.  The free
    is done in a separate thread so it might happen a short time later.
    
    __blkdev_put calls bdev_inode_switch_bdi *after* ->release has been
    called.
    
    Since commit f758eeabeb96f878c860e8f110f94ec8820822a9
    bdev_inode_switch_bdi will dereference the 'old' bdi, which lives
    inside a request_queue, to get a spin lock.  This causes the last
    close on an md device to sometime take a spin_lock which lives in
    freed memory - which results in an oops.
    
    So move the called to bdev_inode_switch_bdi before the call to
    ->release.
    
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Wu Fengguang <fengguang.wu@intel.com>
    Acked-by: Wu Fengguang <fengguang.wu@intel.com>
    Cc: stable@kernel.org
    Signed-off-by: NeilBrown <neilb@suse.de>

diff --git a/fs/block_dev.c b/fs/block_dev.c
index ff77262e887c..95f786ec7f08 100644
--- a/fs/block_dev.c
+++ b/fs/block_dev.c
@@ -1429,6 +1429,11 @@ static int __blkdev_put(struct block_device *bdev, fmode_t mode, int for_part)
 		WARN_ON_ONCE(bdev->bd_holders);
 		sync_blockdev(bdev);
 		kill_bdev(bdev);
+		/* ->release can cause the old bdi to disappear,
+		 * so must switch it out first
+		 */
+		bdev_inode_switch_bdi(bdev->bd_inode,
+					&default_backing_dev_info);
 	}
 	if (bdev->bd_contains == bdev) {
 		if (disk->fops->release)
@@ -1442,8 +1447,6 @@ static int __blkdev_put(struct block_device *bdev, fmode_t mode, int for_part)
 		disk_put_part(bdev->bd_part);
 		bdev->bd_part = NULL;
 		bdev->bd_disk = NULL;
-		bdev_inode_switch_bdi(bdev->bd_inode,
-					&default_backing_dev_info);
 		if (bdev != bdev->bd_contains)
 			victim = bdev->bd_contains;
 		bdev->bd_contains = NULL;

