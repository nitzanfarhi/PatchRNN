commit 36003386f86c0624ae0662a229081ef2b11ac784
Author: Alexandre Courbot <gnurou@gmail.com>
Date:   Thu Mar 3 08:04:42 2011 +0000

    serial: sh-sci: fix deadlock when resuming from S3 sleep
    
    S3 sleep invokes the shutdown callback of the sh-sci driver, which
    suspends the clocks until they are reactivated by a call to startup.
    However, before the latter is invoked, sci_set_termios may be called on
    the port by uart_resume_port. In such cases it will endlessly wait for
    the TEND bit to raise, which will never happen since the clocks are
    disabled.
    
    This patch ensures that clocks are enabled when ports registers are
    manipulated within sci_set_termios.
    
    Signed-off-by: Alexandre Courbot <gnurou@gmail.com>
    Signed-off-by: Paul Mundt <lethal@linux-sh.org>

diff --git a/drivers/tty/serial/sh-sci.c b/drivers/tty/serial/sh-sci.c
index 0257fd5ede52..eb7958c675a8 100644
--- a/drivers/tty/serial/sh-sci.c
+++ b/drivers/tty/serial/sh-sci.c
@@ -1504,6 +1504,9 @@ static void sci_set_termios(struct uart_port *port, struct ktermios *termios,
 	if (likely(baud && port->uartclk))
 		t = sci_scbrr_calc(s->cfg->scbrr_algo_id, baud, port->uartclk);
 
+	if (s->enable)
+		s->enable(port);
+
 	do {
 		status = sci_in(port, SCxSR);
 	} while (!(status & SCxSR_TEND(port)));
@@ -1571,6 +1574,9 @@ static void sci_set_termios(struct uart_port *port, struct ktermios *termios,
 
 	if ((termios->c_cflag & CREAD) != 0)
 		sci_start_rx(port);
+
+	if (s->disable)
+		s->disable(port);
 }
 
 static const char *sci_type(struct uart_port *port)

