commit 6c37a88c5b1195d4ac74d44a6413839b93df5af4
Author: Paul Mackerras <paulus@samba.org>
Date:   Fri May 20 16:57:22 2005 +1000

    [PATCH] ppc32: don't call progress functions after boot
    
    On ppc32, the platform code can supply a "progress" function that is
    used to show progress through the boot.  These functions are usually
    in an init section and so can't be called after the init pages are
    freed.  Now that the cpu bringup code can be called after the system
    is booted (for hotplug cpu) we can get the situation where the
    progress function can be called after boot.  The simple fix is to set
    the progress function pointer to NULL when the init pages are freed,
    and that is what this patch does (note that all callers already check
    whether the function pointer is NULL before trying to call it).
    
    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Signed-off-by: Linus Torvalds <torvalds@osdl.org>

diff --git a/arch/ppc/mm/init.c b/arch/ppc/mm/init.c
index be02a7fec2b7..363c157e3617 100644
--- a/arch/ppc/mm/init.c
+++ b/arch/ppc/mm/init.c
@@ -179,6 +179,7 @@ void free_initmem(void)
 	if (!have_of)
 		FREESEC(openfirmware);
  	printk("\n");
+	ppc_md.progress = NULL;
 #undef FREESEC
 }
 

