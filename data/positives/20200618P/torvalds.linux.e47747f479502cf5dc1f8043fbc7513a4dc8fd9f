commit e47747f479502cf5dc1f8043fbc7513a4dc8fd9f
Author: Gavin Shan <shangw@linux.vnet.ibm.com>
Date:   Mon Aug 20 03:49:19 2012 +0000

    powerpc/powernv: Fix overrunning segment tracing array
    
    There're 2 arrays introduced to trace which PE has occupied the
    corresponding resource (I/O or MMIO) segment. However, we didn't
    allocate enough memory for them and that possiblly leads to PE
    descriptor corruption.
    
    The patch fixes that by allocating enough memory for those 2 arrays.
    
    Signed-off-by: Gavin Shan <shangw@linux.vnet.ibm.com>
    Reviewed-by: Ram Pai <linuxram@us.ibm.com>
    Reviewed-by: Richard Yang <weiyang@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

diff --git a/arch/powerpc/platforms/powernv/pci-ioda.c b/arch/powerpc/platforms/powernv/pci-ioda.c
index c4461ad8a689..40559bf2b9ec 100644
--- a/arch/powerpc/platforms/powernv/pci-ioda.c
+++ b/arch/powerpc/platforms/powernv/pci-ioda.c
@@ -1411,9 +1411,9 @@ void __init pnv_pci_init_ioda1_phb(struct device_node *np)
 	/* Allocate aux data & arrays */
 	size = _ALIGN_UP(phb->ioda.total_pe / 8, sizeof(unsigned long));
 	m32map_off = size;
-	size += phb->ioda.total_pe;
+	size += phb->ioda.total_pe * sizeof(phb->ioda.m32_segmap[0]);
 	iomap_off = size;
-	size += phb->ioda.total_pe;
+	size += phb->ioda.total_pe * sizeof(phb->ioda.io_segmap[0]);
 	pemap_off = size;
 	size += phb->ioda.total_pe * sizeof(struct pnv_ioda_pe);
 	aux = alloc_bootmem(size);

