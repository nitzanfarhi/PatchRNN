commit 2fe8c011ee148e871bb6357ab909adb81fb5f4b8
Author: dgl <dgl>
Date:   Sun Apr 30 11:54:00 2006 +0000

    Fix a couple of buffer overflows.

diff --git a/client.c b/client.c
index 8bb96ab..dc88fff 100644
--- a/client.c
+++ b/client.c
@@ -2,7 +2,7 @@
  * Copyright (c) David Leadbeater 2002
  * Released Under the GNU GPLv2 or Later
  * NO WARRANTY - See GNU GPL for more
- * $Id: client.c,v 1.10 2005/06/19 18:07:36 dgl Exp $
+ * $Id: client.c,v 1.11 2006/04/30 11:54:00 dgl Exp $
  */
 
 #include <stdio.h>
@@ -36,15 +36,15 @@ int main(void) {
 
    if(get_cookie(cookie)) {
       char tmp2[2148]; /* I'm sure there's a better way of doing this.. */
-      strncpy(tmp2, params, 2147);
-      snprintf(params, 2148, "COOKIE=%s&%s", cookie, tmp2);
+      strncpy(tmp2, params, sizeof tmp2);
+      snprintf(params, sizeof params, "COOKIE=%s&%s", cookie, tmp2);
    }
 
    fd = unix_connect(rand);
    send(fd, params, strlen(params), 0);
    send(fd, "\n", 1, 0);
 
-   while(read(fd, tmp, 2048) > 0) {
+   while(read(fd, tmp, sizeof tmp) > 0) {
 	  printf("%s",tmp);
    }
 
@@ -67,7 +67,7 @@ int readinput(char *params) {
 
    if(strncmp(request, "GET", 3) == 0) {
 	  strncpy(params, getenv("QUERY_STRING"), 2048);
-	  params[2048] = 0;
+	  params[sizeof(params) - 1] = 0;
 	  if(!strlen(params)) return 0;
       return 1;
    }else if(strncmp(request, "POST", 4) == 0) {
@@ -75,7 +75,8 @@ int readinput(char *params) {
 	  if(!getenv("CONTENT_LENGTH")) return 0;
 	  length = atoi(getenv("CONTENT_LENGTH"));
 	  if(!length || length == 0) return 0;
-	  fread(params, length > 2048 ? 2048 : length, 1, stdin);
+     length = (length >= sizeof(params) ? sizeof(params) - 1 : length);
+	  fread(params, length, 1, stdin);
 	  params[length] = 0;
 	  return 1;
    }else{

