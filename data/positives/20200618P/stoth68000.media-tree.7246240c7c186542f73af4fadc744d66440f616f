commit 7246240c7c186542f73af4fadc744d66440f616f
Author: Sage Weil <sage@inktank.com>
Date:   Thu Oct 25 08:49:41 2012 -0700

    libceph: avoid NULL kref_put from NULL alloc_msg return
    
    The ceph_on_in_msg_alloc() method calls the ->alloc_msg() helper which
    may return NULL.  It also drops con->mutex while it allocates a message,
    which means that the connection state may change (e.g., get closed).  If
    that happens, we clean up and bail out.  Avoid calling ceph_msg_put() on
    a NULL return value and triggering a crash.
    
    This was observed when an ->alloc_msg() call races with a timeout that
    resends a zillion messages and resets the connection, and ->alloc_msg()
    returns NULL (because the request was resent to another target).
    
    Fixes http://tracker.newdream.net/issues/3342
    
    Signed-off-by: Sage Weil <sage@inktank.com>
    Reviewed-by: Alex Elder <elder@inktank.com>

diff --git a/net/ceph/messenger.c b/net/ceph/messenger.c
index 66f6f56bcb23..1041114453db 100644
--- a/net/ceph/messenger.c
+++ b/net/ceph/messenger.c
@@ -2742,7 +2742,8 @@ static int ceph_con_in_msg_alloc(struct ceph_connection *con, int *skip)
 		msg = con->ops->alloc_msg(con, hdr, skip);
 		mutex_lock(&con->mutex);
 		if (con->state != CON_STATE_OPEN) {
-			ceph_msg_put(msg);
+			if (msg)
+				ceph_msg_put(msg);
 			return -EAGAIN;
 		}
 		con->in_msg = msg;

