commit 8e59c7f23410d5ca6b350a178b861a3d68c49edf
Author: Krzysztof Kozlowski <k.kozlowski@samsung.com>
Date:   Tue May 19 16:13:01 2015 +0900

    power_supply: Fix NULL pointer dereference during bq27x00_battery probe
    
    Power supply is often registered during probe of a driver. The
    power_supply_register() returns pointer to newly allocated structure as
    return value. However before returning the power_supply_register()
    calls back the get_property() method provided by the driver through
    uevent.
    
    In that time the driver probe is still in progress and driver did not
    assigned pointer to power supply to its local variables. This leads to
    NULL pointer dereference from get_property() function.
    Starting from bq27x00_battery_probe():
      di->bat = power_supply_register()
        device_add()
          kobject_uevent()
            power_supply_uevent()
              power_supply_show_property()
                power_supply_get_property()
                  bq27x00_battery_get_property()
                    dereference of (di->bat) which is NULL here
    
    The first uevent of power supply (the one coming from device creation)
    should not call back to the driver. To prevent that from happening,
    increment the atomic use counter at the end of power_supply_register().
    This means that power_supply_get_property() will return -ENODEV.
    
    IMPORTANT:
    The patch has impact on this first uevent sent from power supply because
    it will not contain properties from power supply.
    
    The uevent with properties will be sent later after indicating that
    power supply has changed. This also has a race now, but will be fixed in
    other patches.
    
    Reported-by: H. Nikolaus Schaller <hns@goldelico.com>
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Fixes: 297d716f6260 ("power_supply: Change ownership from driver to core")
    Tested-By: Dr. H. Nikolaus Schaller <hns@goldelico.com>
    Signed-off-by: Sebastian Reichel <sre@kernel.org>

diff --git a/drivers/power/power_supply_core.c b/drivers/power/power_supply_core.c
index 2ed4a4a6b3c5..15da277e0e8d 100644
--- a/drivers/power/power_supply_core.c
+++ b/drivers/power/power_supply_core.c
@@ -659,7 +659,6 @@ __power_supply_register(struct device *parent,
 	dev->release = power_supply_dev_release;
 	dev_set_drvdata(dev, psy);
 	psy->desc = desc;
-	atomic_inc(&psy->use_cnt);
 	if (cfg) {
 		psy->drv_data = cfg->drv_data;
 		psy->of_node = cfg->of_node;
@@ -700,6 +699,16 @@ __power_supply_register(struct device *parent,
 	if (rc)
 		goto create_triggers_failed;
 
+	/*
+	 * Update use_cnt after any uevents (most notably from device_add()).
+	 * We are here still during driver's probe but
+	 * the power_supply_uevent() calls back driver's get_property
+	 * method so:
+	 * 1. Driver did not assigned the returned struct power_supply,
+	 * 2. Driver could not finish initialization (anything in its probe
+	 *    after calling power_supply_register()).
+	 */
+	atomic_inc(&psy->use_cnt);
 	power_supply_changed(psy);
 
 	return psy;

