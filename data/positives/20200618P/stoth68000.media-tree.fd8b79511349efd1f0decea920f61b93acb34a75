commit fd8b79511349efd1f0decea920f61b93acb34a75
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Tue Oct 7 17:00:07 2014 -0400

    xen/balloon: Don't continue ballooning when BP_ECANCELED is encountered
    
    Commit 3dcf63677d4e ("xen/balloon: cancel ballooning if adding new
    memory failed") makes reserve_additional_memory() return BP_ECANCELED
    when an error is encountered. This error, however, is ignored by the
    caller (balloon_process()) since it is overwritten by subsequent call
    to update_schedule(). This results in continuous attempts to add more
    memory, all of which are likely to fail again.
    
    We should stop trying to schedule next iteration of ballooning when
    the current one has failed.
    
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Reviewed-by: Daniel Kiper <daniel.kiper@oracle.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>

diff --git a/drivers/xen/balloon.c b/drivers/xen/balloon.c
index 1e0a317d3dcd..3860d02729dc 100644
--- a/drivers/xen/balloon.c
+++ b/drivers/xen/balloon.c
@@ -167,6 +167,9 @@ static struct page *balloon_next_page(struct page *page)
 
 static enum bp_state update_schedule(enum bp_state state)
 {
+	if (state == BP_ECANCELED)
+		return BP_ECANCELED;
+
 	if (state == BP_DONE) {
 		balloon_stats.schedule_delay = 1;
 		balloon_stats.retry_count = 1;

