commit 7082c5c3f2407c52022507ffaf644dbbab97a883
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Nov 21 10:08:37 2016 +0100

    tcp: zero ca_priv area when switching cc algorithms
    
    We need to zero out the private data area when application switches
    connection to different algorithm (TCP_CONGESTION setsockopt).
    
    When congestion ops get assigned at connect time everything is already
    zeroed because sk_alloc uses GFP_ZERO flag.  But in the setsockopt case
    this contains whatever previous cc placed there.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/ipv4/tcp_cong.c b/net/ipv4/tcp_cong.c
index 1294af4e0127..f9038d6b109e 100644
--- a/net/ipv4/tcp_cong.c
+++ b/net/ipv4/tcp_cong.c
@@ -200,8 +200,10 @@ static void tcp_reinit_congestion_control(struct sock *sk,
 	icsk->icsk_ca_ops = ca;
 	icsk->icsk_ca_setsockopt = 1;
 
-	if (sk->sk_state != TCP_CLOSE)
+	if (sk->sk_state != TCP_CLOSE) {
+		memset(icsk->icsk_ca_priv, 0, sizeof(icsk->icsk_ca_priv));
 		tcp_init_congestion_control(sk);
+	}
 }
 
 /* Manage refcounts on socket close. */

