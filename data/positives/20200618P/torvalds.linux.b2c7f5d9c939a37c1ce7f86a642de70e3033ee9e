commit b2c7f5d9c939a37c1ce7f86a642de70e3033ee9e
Author: Maarten ter Huurne <maarten@treewalker.org>
Date:   Fri Jul 29 23:42:12 2016 +0200

    regmap: cache: Fix num_reg_defaults computation from reg_defaults_raw
    
    In 3245d460 (regmap: cache: Fall back to register by register read for
    cache defaults) non-readable registers are skipped when initializing
    reg_defaults, but are still included in num_reg_defaults. So there can
    be uninitialized entries at the end of reg_defaults, which can cause
    problems when the register cache initializes from the full array.
    
    Fixed it by excluding non-readable registers from the count as well.
    
    Signed-off-by: Maarten ter Huurne <maarten@treewalker.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>

diff --git a/drivers/base/regmap/regcache.c b/drivers/base/regmap/regcache.c
index df7ff7290821..4e582561e1e7 100644
--- a/drivers/base/regmap/regcache.c
+++ b/drivers/base/regmap/regcache.c
@@ -38,10 +38,11 @@ static int regcache_hw_init(struct regmap *map)
 
 	/* calculate the size of reg_defaults */
 	for (count = 0, i = 0; i < map->num_reg_defaults_raw; i++)
-		if (!regmap_volatile(map, i * map->reg_stride))
+		if (regmap_readable(map, i * map->reg_stride) &&
+		    !regmap_volatile(map, i * map->reg_stride))
 			count++;
 
-	/* all registers are volatile, so just bypass */
+	/* all registers are unreadable or volatile, so just bypass */
 	if (!count) {
 		map->cache_bypass = true;
 		return 0;

