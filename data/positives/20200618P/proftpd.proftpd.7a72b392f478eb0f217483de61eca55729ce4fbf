commit 7a72b392f478eb0f217483de61eca55729ce4fbf
Author: castaglia <castaglia>
Date:   Fri Mar 6 20:10:23 2009 +0000

    If we get to the point that we need to generate our own random seed data
    for OpenSSL's PRNG, then allocate some uninitialized memory off the heap
    and use that for the seed.  This complements the existing use of
    uninitialized stack data as part of the generated seed.

diff --git a/contrib/mod_tls.c b/contrib/mod_tls.c
index 652ccbabe..8d7183ff9 100644
--- a/contrib/mod_tls.c
+++ b/contrib/mod_tls.c
@@ -2931,7 +2931,7 @@ static RSA *tls_rsa_cb(SSL *ssl, int is_export, int keylength) {
 }
 
 static int tls_seed_prng(void) {
-  char stackdata[1024];
+  char *heapdata, stackdata[1024];
   static char rand_file[300];
   FILE *fp = NULL;
   
@@ -3000,6 +3000,12 @@ static int tls_seed_prng(void) {
     RAND_seed(&pid, sizeof(pid_t));
     RAND_seed(stackdata, sizeof(stackdata));
 
+    heapdata = malloc(sizeof(stackdata));
+    if (heapdata != NULL) {
+      RAND_seed(heapdata, sizeof(stackdata));
+      free(heapdata);
+    }
+
   } else {
     tls_log("loaded PRNG seed data from '%s'", tls_rand_file);
   }

