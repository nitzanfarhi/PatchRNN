commit 0051600231409670c4a1276aedf9e7d822d173bd
Author: jsg <jsg@openbsd.org>
Date:   Sun Feb 9 13:22:04 2014 +0000

    drm/radeon: update lockup tracking when scheduling in empty ring
    
    From Jerome Glisse
    e9273f06f28535968e40f5e58b5018d652c698d2 in ubuntu 3.8
    8444d5c69549aa0f0b574cc608742d4669e1cc01 in mainline linux

diff --git a/sys/dev/pci/drm/radeon/radeon_ring.c b/sys/dev/pci/drm/radeon/radeon_ring.c
index 6822d399c54..b4ed0e90f3b 100644
--- a/sys/dev/pci/drm/radeon/radeon_ring.c
+++ b/sys/dev/pci/drm/radeon/radeon_ring.c
@@ -1,4 +1,4 @@
-/*	$OpenBSD: radeon_ring.c,v 1.2 2014/02/09 11:03:31 jsg Exp $	*/
+/*	$OpenBSD: radeon_ring.c,v 1.3 2014/02/09 13:22:04 jsg Exp $	*/
 /*
  * Copyright 2008 Advanced Micro Devices, Inc.
  * Copyright 2008 Red Hat Inc.
@@ -386,6 +386,13 @@ int radeon_ring_alloc(struct radeon_device *rdev, struct radeon_ring *ring, unsi
 		return -ENOMEM;
 	/* Align requested size with padding so unlock_commit can
 	 * pad safely */
+	radeon_ring_free_size(rdev, ring);
+	if (ring->ring_free_dw == (ring->ring_size / 4)) {
+		/* This is an empty ring update lockup info to avoid
+		 * false positive.
+		 */
+		radeon_ring_lockup_update(ring);
+	}
 	ndw = (ndw + ring->align_mask) & ~ring->align_mask;
 	while (ndw > (ring->ring_free_dw - 1)) {
 		radeon_ring_free_size(rdev, ring);

