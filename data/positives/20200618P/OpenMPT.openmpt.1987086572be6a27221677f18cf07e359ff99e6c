commit 1987086572be6a27221677f18cf07e359ff99e6c
Author: Johannes Schultz <sagamusix@openmpt.org>
Date:   Thu Jul 14 19:22:58 2016 +0000

    [Fix] Possible crash when reading malformed group-geometric tuning due to integer overflow (caught by afl-fuzz)
    
    git-svn-id: https://source.openmpt.org/svn/openmpt/trunk/OpenMPT@6633 56274372-70c3-4bfc-bfc3-4c3a0b034d27

diff --git a/soundlib/tuning.cpp b/soundlib/tuning.cpp
index fec1b7c40..082878702 100644
--- a/soundlib/tuning.cpp
+++ b/soundlib/tuning.cpp
@@ -94,7 +94,13 @@ void CTuningRTI::SetDummyValues()
 bool CTuningRTI::CreateRatioTableGG(const std::vector<RATIOTYPE>& v, const RATIOTYPE r, const VRPAIR& vr, const NOTEINDEXTYPE ratiostartpos)
 //------------------------------------------------------------------------------------------------------------------------------------------
 {
-	if(v.size() == 0 || r <= 0) return true;
+	if(v.size() == 0
+		|| r <= 0
+		|| vr.second < vr.first
+		|| ratiostartpos < vr.first)
+	{
+		return true;
+	}
 
 	m_StepMin = vr.first;
 	ProSetGroupSize(static_cast<UNOTEINDEXTYPE>(v.size()));
@@ -103,11 +109,11 @@ bool CTuningRTI::CreateRatioTableGG(const std::vector<RATIOTYPE>& v, const RATIO
 	m_RatioTable.resize(vr.second-vr.first+1);
 	std::copy(v.begin(), v.end(), m_RatioTable.begin() + (ratiostartpos - vr.first));
 
-	for(NOTEINDEXTYPE i = ratiostartpos-1; i>=m_StepMin && ratiostartpos > NOTEINDEXTYPE_MIN; i--)
+	for(int32 i = ratiostartpos-1; i>=m_StepMin && ratiostartpos > NOTEINDEXTYPE_MIN; i--)
 	{
 		m_RatioTable[i-m_StepMin] = m_RatioTable[i - m_StepMin + m_GroupSize] / m_GroupRatio;
 	}
-	for(NOTEINDEXTYPE i = ratiostartpos+m_GroupSize; i<=vr.second && ratiostartpos <= (NOTEINDEXTYPE_MAX - m_GroupSize); i++)
+	for(int32 i = ratiostartpos+m_GroupSize; i<=vr.second && ratiostartpos <= (NOTEINDEXTYPE_MAX - m_GroupSize); i++)
 	{
 		m_RatioTable[i-m_StepMin] = m_GroupRatio * m_RatioTable[i - m_StepMin - m_GroupSize];
 	}
@@ -137,7 +143,7 @@ bool CTuningRTI::ProCreateGeometric(const UNOTEINDEXTYPE& s, const RATIOTYPE& r,
 	const RATIOTYPE stepRatio = pow(r, static_cast<RATIOTYPE>(1)/s);
 
 	m_RatioTable.resize(vr.second - vr.first + 1);
-	for(NOTEINDEXTYPE i = vr.first; i<=vr.second; i++)
+	for(int32 i = vr.first; i<=vr.second; i++)
 	{
 		m_RatioTable[i-m_StepMin] = Pow(stepRatio, i);
 	}

