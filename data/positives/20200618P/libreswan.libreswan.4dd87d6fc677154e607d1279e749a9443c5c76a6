commit 4dd87d6fc677154e607d1279e749a9443c5c76a6
Author: D. Hugh Redelmeier <hugh@mimosa.com>
Date:   Fri Jul 31 16:57:13 2015 -0400

    in snprintf calls, replace bounds that were numerals with sizeof expressions

diff --git a/lib/libipsecconf/starterwhack.c b/lib/libipsecconf/starterwhack.c
index 0297d85f7..68a2429a3 100644
--- a/lib/libipsecconf/starterwhack.c
+++ b/lib/libipsecconf/starterwhack.c
@@ -796,7 +796,8 @@ int starter_permutate_conns(int
 		sc.right.subnet = rnet;
 		sc.right.has_client = TRUE;
 
-		snprintf(tmpconnname, 256, "%s/%ux%u", conn->name, lc, rc);
+		snprintf(tmpconnname, sizeof(tmpconnname), "%s/%ux%u",
+			conn->name, lc, rc);
 		sc.name = tmpconnname;
 
 		sc.connalias = conn->name;
diff --git a/linux/net/ipsec/satot.c b/linux/net/ipsec/satot.c
index a4119ae42..714b4efcc 100644
--- a/linux/net/ipsec/satot.c
+++ b/linux/net/ipsec/satot.c
@@ -96,21 +96,29 @@ size_t dstlen;
 
 	if (sa->proto == SA_INT) {
 		char intunk[10];
+
 		switch (ntohl(sa->spi)) {
-		case SPI_PASS:  p = "%pass";
+		case SPI_PASS:
+			p = "%pass";
 			break;
-		case SPI_DROP:  p = "%drop";
+		case SPI_DROP:
+			p = "%drop";
 			break;
-		case SPI_REJECT:        p = "%reject";
+		case SPI_REJECT:
+			p = "%reject";
 			break;
-		case SPI_HOLD:  p = "%hold";
+		case SPI_HOLD:
+			p = "%hold";
 			break;
-		case SPI_TRAP:  p = "%trap";
+		case SPI_TRAP:
+			p = "%trap";
 			break;
-		case SPI_TRAPSUBNET:    p = "%trapsubnet";
+		case SPI_TRAPSUBNET:
+			p = "%trapsubnet";
 			break;
-		default:        snprintf(intunk, 10, "%%unk-%d",
-					 ntohl(sa->spi));
+		default:
+			snprintf(intunk, sizeof(intunk), "%%unk-%d",
+				 ntohl(sa->spi));
 			p = intunk;
 			break;
 		}
diff --git a/programs/pluto/connections.c b/programs/pluto/connections.c
index 4aef1abcb..d6fad1ada 100644
--- a/programs/pluto/connections.c
+++ b/programs/pluto/connections.c
@@ -3660,17 +3660,17 @@ void show_one_connection(struct connection *c)
 	}
 
 	if (c->connmtu > 0)
-		snprintf(mtustr, 7, "%d", c->connmtu);
+		snprintf(mtustr, sizeof(mtustr), "%d", c->connmtu);
 	else
 		strcpy(mtustr, "unset");
 
 	if (c->sa_priority)
-		snprintf(sapriostr, 12, "%lu", c->sa_priority);
+		snprintf(sapriostr, sizeof(sapriostr), "%lu", c->sa_priority);
 	else
 		strcpy(sapriostr, "auto");
 
 	if (c->nflog_group > 0)
-		snprintf(nflogstr, 7, "%d", c->nflog_group);
+		snprintf(nflogstr, sizeof(nflogstr), "%d", c->nflog_group);
 	else
 		strcpy(nflogstr, "unset");
 

