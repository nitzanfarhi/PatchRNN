From 2e8e8c6387ecdf5923dfc4d7718d18eba1b0873d Mon Sep 17 00:00:00 2001
From: Keith Rarick <kr@xph.us>
Date: Sun, 23 May 2010 00:13:28 -0700
Subject: [PATCH] Discard job body bytes if the job is too big.

Previously, a malicious user could craft a job payload and inject
beanstalk commands without the client application knowing. (An
extra-careful client library could check the size of the job body before
sending the put command, but most libraries do not do this, nor should
they have to.)

Reported by Graham Barr.
---
 check-one.sh              | 2 +-
 prot.c                    | 3 ++-
 sh-tests/too-big.commands | 3 +++
 sh-tests/too-big.expected | 1 +
 4 files changed, 7 insertions(+), 2 deletions(-)
 create mode 100644 sh-tests/too-big.commands
 create mode 100644 sh-tests/too-big.expected

diff --git a/check-one.sh b/check-one.sh
index 709993f4..bcfb7d4b 100755
--- a/check-one.sh
+++ b/check-one.sh
@@ -34,7 +34,7 @@ if [ ! -x ./beanstalkd ]; then
   exit 2
 fi
 
-start_beanstalkd
+start_beanstalkd '' '-z 10'
 
 # Run the test
 fgrep -v "#" $commands | $nc $server $port > "$tmpf"
diff --git a/prot.c b/prot.c
index 93fe8cec..481b0ede 100644
--- a/prot.c
+++ b/prot.c
@@ -1196,7 +1196,8 @@ dispatch_cmd(conn c)
         if (errno) return reply_msg(c, MSG_BAD_FORMAT);
 
         if (body_size > job_data_size_limit) {
-            return reply_msg(c, MSG_JOB_TOO_BIG);
+            /* throw away the job body and respond with JOB_TOO_BIG */
+            return skip(c, body_size + 2, MSG_JOB_TOO_BIG);
         }
 
         /* don't allow trailing garbage */
diff --git a/sh-tests/too-big.commands b/sh-tests/too-big.commands
new file mode 100644
index 00000000..d85cd399
--- /dev/null
+++ b/sh-tests/too-big.commands
@@ -0,0 +1,3 @@
+put 0 0 0 11
+delete 9999
+quit
diff --git a/sh-tests/too-big.expected b/sh-tests/too-big.expected
new file mode 100644
index 00000000..88448bcd
--- /dev/null
+++ b/sh-tests/too-big.expected
@@ -0,0 +1 @@
+JOB_TOO_BIG
