From 5e5571d1a431eb3c61977b6dd6ec90186ef79867 Mon Sep 17 00:00:00 2001
From: Jaime Frey <jfrey@cs.wisc.edu>
Date: Tue, 15 Nov 2011 16:44:28 -0600
Subject: [PATCH] Fix some compiler warnings related to printf format strings.

===VersionHistory:None===
---
 src/condor_credd/credd.cpp               | 4 ++--
 src/condor_gridmanager/gahp-client.cpp   | 4 ++--
 src/condor_io/condor_auth_ssl.cpp        | 2 +-
 src/condor_io/safe_sock.cpp              | 2 +-
 src/condor_rm.V6/rm.cpp                  | 2 +-
 src/condor_shadow.V6.1/NTreceivers.cpp   | 2 +-
 src/condor_shadow.V6.1/baseshadow.cpp    | 2 +-
 src/condor_shadow.V6.1/pseudo_ops.cpp    | 2 +-
 src/condor_starter.V6.1/baseStarter.cpp  | 2 +-
 src/condor_sysapi/arch.cpp               | 2 +-
 src/condor_tools/preen.cpp               | 8 ++++----
 src/condor_utils/compat_classad.cpp      | 2 +-
 src/condor_utils/condor_config.cpp       | 2 +-
 src/condor_utils/condor_crontab.cpp      | 2 +-
 src/condor_utils/email.cpp               | 2 +-
 src/condor_utils/event_handler.unix.cpp  | 2 +-
 src/condor_utils/file_transfer.cpp       | 2 +-
 src/condor_utils/read_user_log_state.cpp | 2 +-
 src/condor_utils/write_user_log.cpp      | 4 ++--
 19 files changed, 25 insertions(+), 25 deletions(-)

diff --git a/src/condor_credd/credd.cpp b/src/condor_credd/credd.cpp
index b275a7e..566f3a1 100644
--- a/src/condor_credd/credd.cpp
+++ b/src/condor_credd/credd.cpp
@@ -263,7 +263,7 @@ get_cred_handler(Service * /*service*/, int /*i*/, Stream *stream) {
     *pColon = '\0';
     
     // Name is the second part
-    sprintf (name, (char*)(pColon+sizeof(char)));
+    sprintf (name, "%s", (char*)(pColon+sizeof(char)));
   
     if (strcmp (owner, user) != 0) { 
       dprintf (D_ALWAYS, "Requesting another user's (%s) credential %s\n", owner, name);
@@ -455,7 +455,7 @@ rm_cred_handler(Service * /*service*/, int /*i*/, Stream *stream) {
     *pColon = '\0';
     
     // Name is the second part
-    sprintf (name, (char*)(pColon+sizeof(char)));
+    sprintf (name, "%s", (char*)(pColon+sizeof(char)));
   
     if (strcmp (owner, user) != 0) { 
       dprintf (D_ALWAYS, "Requesting another user's (%s) credential %s\n", owner, name);
diff --git a/src/condor_gridmanager/gahp-client.cpp b/src/condor_gridmanager/gahp-client.cpp
index 2e83bb8..8c6c3fd5 100644
--- a/src/condor_gridmanager/gahp-client.cpp
+++ b/src/condor_gridmanager/gahp-client.cpp
@@ -321,10 +321,10 @@ GahpServer::Reaper(Service *,int pid,int status)
 
 	if ( dead_server ) {
 		sprintf_cat( buf, " unexpectedly" );
-		EXCEPT( buf.c_str() );
+		EXCEPT( "%s", buf.c_str() );
 	} else {
 		sprintf_cat( buf, "\n" );
-		dprintf( D_ALWAYS, buf.c_str() );
+		dprintf( D_ALWAYS, "%s", buf.c_str() );
 	}
 }
 
diff --git a/src/condor_io/condor_auth_ssl.cpp b/src/condor_io/condor_auth_ssl.cpp
index df32a0f..0cbf009 100644
--- a/src/condor_io/condor_auth_ssl.cpp
+++ b/src/condor_io/condor_auth_ssl.cpp
@@ -21,7 +21,7 @@
 #include "condor_common.h"
 
 #if !defined(SKIP_AUTHENTICATION) && defined(HAVE_EXT_OPENSSL)
-#define ouch(x) dprintf(D_ALWAYS,x)
+#define ouch(x) dprintf(D_ALWAYS,"%s",x)
 #include "authentication.h"
 #include "condor_auth_ssl.h"
 #include "condor_string.h"
diff --git a/src/condor_io/safe_sock.cpp b/src/condor_io/safe_sock.cpp
index bf76e04..663331e 100644
--- a/src/condor_io/safe_sock.cpp
+++ b/src/condor_io/safe_sock.cpp
@@ -622,7 +622,7 @@ int SafeSock::handle_incoming_packet()
 		return FALSE;
 	}
     char str[50];
-    sprintf(str, sock_to_string(_sock));
+    sprintf(str, "%s", sock_to_string(_sock));
     dprintf( D_NETWORK, "RECV %d bytes at %s from %s\n",
 			 received, str, _who.to_sinful().Value());
     //char temp_str[10000];
diff --git a/src/condor_rm.V6/rm.cpp b/src/condor_rm.V6/rm.cpp
index e1eb609..e422ede 100644
--- a/src/condor_rm.V6/rm.cpp
+++ b/src/condor_rm.V6/rm.cpp
@@ -114,7 +114,7 @@ void
 usage(int iExitCode)
 {
 	char word[32];
-	sprintf( word, getJobActionString(mode) );
+	sprintf( word, "%s", getJobActionString(mode) );
 	fprintf( stderr, "Usage: %s [options] [constraints]\n", MyName );
 	fprintf( stderr, " where [options] is zero or more of:\n" );
 	fprintf( stderr, "  -help               Display this message and exit\n" );
diff --git a/src/condor_shadow.V6.1/NTreceivers.cpp b/src/condor_shadow.V6.1/NTreceivers.cpp
index 3059638..63ea532 100644
--- a/src/condor_shadow.V6.1/NTreceivers.cpp
+++ b/src/condor_shadow.V6.1/NTreceivers.cpp
@@ -1397,7 +1397,7 @@ case CONDOR_getdir:
 
 		// Get directory's contents
 		while((next = directory.Next())) {
-			msg.sprintf_cat(next);
+			msg.sprintf_cat("%s", next);
 			msg.sprintf_cat("\n");
 		}
 		terrno = (condor_errno_t)errno;
diff --git a/src/condor_shadow.V6.1/baseshadow.cpp b/src/condor_shadow.V6.1/baseshadow.cpp
index e469636..3e464b3 100644
--- a/src/condor_shadow.V6.1/baseshadow.cpp
+++ b/src/condor_shadow.V6.1/baseshadow.cpp
@@ -1141,7 +1141,7 @@ BaseShadow::log_except(const char *msg)
 	bool exception_already_logged = false;
 
 	if(!msg) msg = "";
-	sprintf(event.message, msg);
+	sprintf(event.message, "%s", msg);
 
 	if ( BaseShadow::myshadow_ptr ) {
 		BaseShadow *shadow = BaseShadow::myshadow_ptr;
diff --git a/src/condor_shadow.V6.1/pseudo_ops.cpp b/src/condor_shadow.V6.1/pseudo_ops.cpp
index 3aa6a80..5e0fe65 100644
--- a/src/condor_shadow.V6.1/pseudo_ops.cpp
+++ b/src/condor_shadow.V6.1/pseudo_ops.cpp
@@ -717,7 +717,7 @@ pseudo_ulog( ClassAd *ad )
 		Shadow->exception_already_logged = true;
 
 		//lame: at the time of this writing, EXCEPT does not want const:
-		EXCEPT(critical_error);
+		EXCEPT("%s", critical_error);
 	}
 
 	delete event;
diff --git a/src/condor_starter.V6.1/baseStarter.cpp b/src/condor_starter.V6.1/baseStarter.cpp
index 341b86b..9262ff6 100644
--- a/src/condor_starter.V6.1/baseStarter.cpp
+++ b/src/condor_starter.V6.1/baseStarter.cpp
@@ -1800,7 +1800,7 @@ CStarter::removeDeferredJobs() {
 		error += this->jic->jobCluster();
 		error += ".";
 		error += this->jic->jobProc();
-		EXCEPT( error.Value() );
+		EXCEPT( "%s", error.Value() );
 		ret = false;
 	}
 	return ( ret );
diff --git a/src/condor_sysapi/arch.cpp b/src/condor_sysapi/arch.cpp
index 832f845..169e27e 100644
--- a/src/condor_sysapi/arch.cpp
+++ b/src/condor_sysapi/arch.cpp
@@ -299,7 +299,7 @@ sysapi_translate_arch( const char *machine, const char *)
 	}
 	else {
 			// Unknown, just use what uname gave:
-		sprintf( tmp, machine );
+		sprintf( tmp, "%s", machine );
 	}
 
 	tmparch = strdup( tmp );
diff --git a/src/condor_tools/preen.cpp b/src/condor_tools/preen.cpp
index 4a64ddf..60bfb7f 100644
--- a/src/condor_tools/preen.cpp
+++ b/src/condor_tools/preen.cpp
@@ -221,17 +221,17 @@ produce_output()
 	}
 
 	szTmp.sprintf("The condor_preen process has found the following stale condor files on <%s>:\n\n",  get_local_hostname().Value());
-	dprintf(D_ALWAYS, szTmp.Value()); 
+	dprintf(D_ALWAYS, "%s", szTmp.Value()); 
 		
 	if( MailFlag ) {
 		fprintf( mailer, "\n" );
-		fprintf( mailer, szTmp.Value());
+		fprintf( mailer, "%s", szTmp.Value());
 	}
 
 	for( BadFiles->rewind(); (str = BadFiles->next()); ) {
 		szTmp.sprintf("  %s\n", str);
-		dprintf(D_ALWAYS, szTmp.Value() );
-		fprintf( mailer, szTmp.Value() );
+		dprintf(D_ALWAYS, "%s", szTmp.Value() );
+		fprintf( mailer, "%s", szTmp.Value() );
 	}
 
 	if( MailFlag ) {
diff --git a/src/condor_utils/compat_classad.cpp b/src/condor_utils/compat_classad.cpp
index 9c876df..f7420d1 100644
--- a/src/condor_utils/compat_classad.cpp
+++ b/src/condor_utils/compat_classad.cpp
@@ -612,7 +612,7 @@ void registerStrlistFunctions()
 
 void
 classad_debug_dprintf(const char *s) {
-	dprintf(D_FULLDEBUG, s);
+	dprintf(D_FULLDEBUG, "%s", s);
 }
 
 ClassAd::ClassAd()
diff --git a/src/condor_utils/condor_config.cpp b/src/condor_utils/condor_config.cpp
index 7a131d9..e5e3468 100644
--- a/src/condor_utils/condor_config.cpp
+++ b/src/condor_utils/condor_config.cpp
@@ -240,7 +240,7 @@ validate_entries( bool ignore_invalid_entry ) {
 		if(ignore_invalid_entry) {
 			dprintf(D_ALWAYS, "%s", output.Value());
 		} else {
-			EXCEPT(output.Value());
+			EXCEPT("%s", output.Value());
 		}
 	}
 }
diff --git a/src/condor_utils/condor_crontab.cpp b/src/condor_utils/condor_crontab.cpp
index 42bd785..411dff1 100644
--- a/src/condor_utils/condor_crontab.cpp
+++ b/src/condor_utils/condor_crontab.cpp
@@ -373,7 +373,7 @@ CronTab::initRegexObject() {
 		if ( ! CronTab::regex.compile( pattern, &errptr, &erroffset )) {
 			MyString error = "CronTab: Failed to compile Regex - ";
 			error += pattern;
-			EXCEPT( const_cast<char*>(error.Value()));
+			EXCEPT( "%s", const_cast<char*>(error.Value()) );
 		}
 	}
 }
diff --git a/src/condor_utils/email.cpp b/src/condor_utils/email.cpp
index 0ac185f..ab1d6ad 100644
--- a/src/condor_utils/email.cpp
+++ b/src/condor_utils/email.cpp
@@ -433,7 +433,7 @@ email_close(FILE *mailer)
 	customSig = NULL;
 	if ((customSig = param("EMAIL_SIGNATURE")) != NULL) {
 		fprintf( mailer, "\n\n");
-		fprintf( mailer, customSig);
+		fprintf( mailer, "%s", customSig);
 		fprintf( mailer, "\n");
 		free(customSig);
 	} else {
diff --git a/src/condor_utils/event_handler.unix.cpp b/src/condor_utils/event_handler.unix.cpp
index 6ea1deb..18a34fb 100644
--- a/src/condor_utils/event_handler.unix.cpp
+++ b/src/condor_utils/event_handler.unix.cpp
@@ -80,7 +80,7 @@ display_sigset( const char *msg, sigset_t *mask )
 	NameTableIterator	next_sig( SigNames );
 
 	if( msg ) {
-		dprintf( D_ALWAYS, msg );
+		dprintf( D_ALWAYS, "%s", msg );
 	}
 	while( (signo = next_sig()) != -1 ) {
 		if( sigismember(mask,signo) ) {
diff --git a/src/condor_utils/file_transfer.cpp b/src/condor_utils/file_transfer.cpp
index 57c2cb7..52c19ce 100644
--- a/src/condor_utils/file_transfer.cpp
+++ b/src/condor_utils/file_transfer.cpp
@@ -2716,7 +2716,7 @@ FileTransfer::DoUpload(filesize_t *total_bytes, ReliSock *s)
 			}
 
 			// condor_basename works for URLs
-			dest_filename.sprintf_cat( condor_basename(filename) );
+			dest_filename.sprintf_cat( "%s", condor_basename(filename) );
 		}
 
 		// for command 999, this string must equal the Attribute "Filename" in
diff --git a/src/condor_utils/read_user_log_state.cpp b/src/condor_utils/read_user_log_state.cpp
index b7bbfb4..715e0fb 100644
--- a/src/condor_utils/read_user_log_state.cpp
+++ b/src/condor_utils/read_user_log_state.cpp
@@ -752,7 +752,7 @@ ReadUserLogState::SetState( const ReadUserLog::FileState &state )
 
 	MyString	str;
 	GetStateString( str, "Restored reader state" );
-	dprintf( D_FULLDEBUG, str.Value() );
+	dprintf( D_FULLDEBUG, "%s", str.Value() );
 
 	return true;
 }
diff --git a/src/condor_utils/write_user_log.cpp b/src/condor_utils/write_user_log.cpp
index add5947..d4d10cb 100644
--- a/src/condor_utils/write_user_log.cpp
+++ b/src/condor_utils/write_user_log.cpp
@@ -1176,7 +1176,7 @@ WriteUserLog::doWriteEvent( FILE *fp, ULogEvent *event, bool use_xml )
 						 "WriteUserLog Failed to convert event type # %d to XML.\n",
 						 event->eventNumber);
 			}
-			if (fprintf ( fp, adXML.Value()) < 0) {
+			if (fprintf ( fp, "%s", adXML.Value()) < 0) {
 				success = false;
 			} else {
 				success = true;
@@ -1187,7 +1187,7 @@ WriteUserLog::doWriteEvent( FILE *fp, ULogEvent *event, bool use_xml )
 		if (!success) {
 			fputc ('\n', fp);
 		}
-		if (fprintf ( fp, SynchDelimiter) < 0) {
+		if (fprintf ( fp, "%s", SynchDelimiter) < 0) {
 			success = false;
 		}
 	}
-- 
1.7.12.4

